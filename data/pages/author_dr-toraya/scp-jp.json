{
  "title": "虎屋博士の人事ファイル",
  "content": "> + 目次\n> [[[/author:dr-toraya|個人ファイルと執筆記事一覧]]]\n> [[[/author:dr-toraya/offset/1/page2_limit/1|実績バッジ]]]\n> [[[/author:dr-toraya/offset/1/page3_limit/1|THE ORIGIN(2016年エイプリルフール)]]]\n> [[[/author:dr-toraya/offset/1/page4_limit/1|THE END(2017年エイプリルフール)]]]\n> [[[/author:dr-toraya/offset/1/page5_limit/1|ノベルゲー構文解説]]]\n\n[[module ListPages offset=\"@URL|0\" range=\".\"]]\n%%content{2}%%\n[[/module]]\n[[module ListPages limit=\"@URL|0\" range=\".\" urlAttrPrefix=\"page2\"]]\n%%content{3}%%\n[[/module]]\n[[module ListPages limit=\"@URL|0\" range=\".\" urlAttrPrefix=\"page3\"]]\n%%content{4}%%\n[[/module]]\n[[module ListPages limit=\"@URL|0\" range=\".\" urlAttrPrefix=\"page4\"]]\n%%content{5}%%\n[[/module]]\n[[module ListPages limit=\"@URL|0\" range=\".\" urlAttrPrefix=\"page5\"]]\n%%content{6}%%\n[[/module]]\n\n[!--\n====\n+ 個人ファイル\n\n[[include component:image-block \nname=karaage2021a.jpg|\nwidth=300px|\ncaption=^^近影^^]]\n\n**名前:** 虎屋外郎(とらやういろう)\n\n**セキュリティレベル:** レベル3\n\n**職務:** 人工系オブジェクトの調査、ぬいぐるみ型オブジェクトの収集、超高硬度スコーンの開発\n\n**所在:** サイト-8181および東京ぬいぐるみ研究所\n\n**人物:** 虎屋博士は工業系教育機関の卒業後、株式会社████に就職。20██年4月、████島への出張中にSCP-███-JPに遭遇。財団エージェントによって保護された後、治療、改造、調理、[編集済]が行われました。完治後は財団職員として雇用され、現在に至ります。\n\n虎屋博士は人工系オブジェクトの研究を専門分野としています。特にぬいぐるみ型オブジェクトやKawaii系オブジェクトについては、研究の担当を強く希望するケースが多く、職務に情熱を見せます。ただし意思を持つぬいぐるみ型オブジェクトの研究については、虎屋博士の精神状態の高揚により職務に支障をきたすため、許可されません。\n\nSCP-███-JPの影響により、虎屋博士と[編集済]をした経験のない人物は、虎屋博士の姿が唐揚げに見えるミーム汚染を受けます。虎屋博士が勤務中のサイトで唐揚げを食べる際には、必ず食べる前に唐揚げに一声かけてください。\n\nミーム汚染の拡大を避ける目的と、自身の健康上の理由により、虎屋博士は平時からガスマスクまたは同様の機能を持つよう改造された狐面を着用しています。エージェント厚木との混同に注意してください。\n\n20██年9月、ミーム汚染を除去する効果を持つマスクが開発されました。狐面を模したこのマスクの着用中のみ、一般の人間も虎屋博士の姿を視認することができます。しかし虎屋博士は「前が見えづらい」という理由で日常ではこのマスクをあまり使用していません。引き続き不審な唐揚げには警戒してください。\n\n虎屋博士の長男、虎屋月餅(げっぺい)氏は、財団の託児所への入所および学校法人プリチャード学院関連施設への進学が予定されています。\n\n虎屋博士はお菓子作りを趣味としていますが、その成果物は基本的に食用には適しません。例として、スポンジケーキは核融合寸前の密度にまで収縮し、スコーンはチタン合金に匹敵する硬度を示しました。本人は通常の材料と手順通りに作成しただけであると供述しています。虎屋博士のお菓子作りにおけるデータは財団の工学チームに転送され、建材または兵器への応用が研究されています。\n\n[[module ListUsers users=\".\"]]\n虎屋博士は%%title%%さんを応援しています。\n[[/module]] \n\n**職員のコメント:** \n//いただきます。//-エージェント██\n//私の指をしゃぶらないでください。//-虎屋博士\n\n//先日お渡しした実験結果のレポートは読んでいただけましたか？//-██研究員\n//唐揚げの間に挟まっていた冊子なら、油でギトギトなので廃棄しました。//-虎屋博士\n\n//なんでコンクリートがタッパーで保管されているんですか？//-██博士\n//それはメレンゲクッキーです。//-虎屋博士\n\n====\n+ 実績バッジ\n\n[[include :scp.avn.sh:7happy7:achievement-jp-module |a1=true|a2=true|a3=true|a4=true|a5=true|a6=true|a7=true|a8=true|a9=true|a10=true|a11=true|a12=true|a13=true|a14=true|a16=true|a18=true|a20=true|a22=true|a30=true|a31=true|a32=true|a49=true|a50=true|a51=true|a52=true|a54=true|a55=true|a56=true|a57=true|a58=true|a61=true|a62=true|a66=true|a68=true|num=34]]\n\n====\n\n+ THE ORIGIN(2016年エイプリルフール)\n[[include component:image-block\n|name=chicken\n|caption=SCP-███-JP-α\n]]\n\n**アイテム番号:** SCP-███-JP\n\n**オブジェクトクラス:** Euclid\n\n**特別収容プロトコル:** SCP-███-JP-αは無力化したため収容不要です。SCP-███-JP-βはプロトコル\"トゥルーマンショー\"に基づきレベル3の財団職員として雇用し、継続した監視と行動制限下に置きます。\n\n**説明:** SCP-███-JPは科学分析上は異常のないカブトムシです。SCP-███-JPの特異性は、その外見を直接または間接的に人間が観察した場合に発生します。SCP-███-JPを視認した人間は、本来はカブトムシであるSCP-███-JPの姿を雄鶏であるように認識します。触れた場合や匂いを嗅いだ場合も同様に、雄鶏の羽毛、体臭を認識します。しかし持ち上げた場合のみ、不自然に体重が軽いことを認識でき、これによりSCP-███-JPと普通の鶏を識別することができます。\n\nSCP-███-JPは新潟県佐渡島███の小学生により、クヌギ林の木にとまっている状態で発見されました。SCP-███-JPの姿はデジタルカメラで撮影され、地元の広報誌に迷子として紹介されました。それからなんやかんやあって財団エージェント8名による山狩りが行われ、SCP-███-JPは確保、収容されました。\n\n**収容違反記録███-JP-1:** 20██/4/8、SCP-███-JPが収容施設から脱走しました。SCP-███-JPの担当職員は、入室後に「鳥特有のひどいにおい」に耐えかね、収容施設の窓を4cm程度解放しました。SCP-███-JPは外見上は鶏ですが本体は体長6cmのカブトムシであるため、解放された窓から外へ飛び立ちました。担当職員はその後収容室の掃除に集中していたため、SCP-███-JPの収容違反が発覚したのは3時間後のことでした。収容違反報告後ただちに機動部隊\"グーニーズ\"が招集され、SCP-███-JPの捜索が開始されました。\n\n20██/4/9、SCP-███-JPは無力化し、SCP-███-JP-αに分類されました。SCP-███-JP-αは佐渡島███山に逃げこんだのち、同地でキャンプを行っていた██ ██氏により確保、調理、捕食されました。SCP-███-JP-αを捕食した██氏は、SCP-███-JP-αの影響を受け外見上の姿が「鶏の唐揚げ」に見える特異性を得たため、SCP-███-JP-βに分類されました。調査、実験、調理、レモン汁、マヨネーズ、おろしポン酢、生クリームの結果、いろいろあってSCP-███-JP-βは財団職員として雇用されることが決定しました。SCP-███-JP-βには本名に代わり「虎屋 外郎」のコードネームが与えられました。\n\n====\n\n+ THE END(2017年エイプリルフール)\n**アイテム番号:** SCP-TRY-JP\n\n**オブジェクトクラス:** Euclid\n\n**特別収容プロトコル:** SCP-TRY-JPを封印した特別収容サイト-8181は、SCP-TRY-JP分離体自動処置設備を設置した開口部を除き、周囲と入り口のすべてを硬化ベークライトにより完全に封鎖します。自動処置装置により回収したSCP-TRY-JP分離体は実験用サンプルを除き焼却処分してください。SCP-TRY-JPの本体は自己収容状態にあるため収容措置は必要ありません。\n\n**説明:** SCP-TRY-JPはかつて虎屋博士だったものです。2017年█月██日、虎屋博士はサイト-8181の厨房の使用許可を申請しました。目的は████氏の誕生日ケーキを焼くためであったと申請書に記入されています。使用申請は事前に使用する食材を申告することを条件に許可され、█月██日 20:45に虎屋博士は厨房の使用を開始しました。\n\n虎屋博士が厨房を使用し始めてから6時間後、厨房横の食堂で休憩していた██研究員が「できた！」という虎屋博士の声を聞いています。次の瞬間、爆発的に膨張し厨房と食堂を埋め尽くしたスポンジケーキにより、██研究員は食堂から猛烈な勢いではじき出されました。厨房に設置された監視カメラは、スポンジケーキを掘り進み天井付近から顔を出した虎屋博士を記録していました。\n\n虎屋博士と██研究員からの通報を受け、直ちに機動部隊ろ-5\"陰陽師\"が派遣され、スポンジケーキの除去が行われました。サンプル採取されたスポンジケーキを接触したD-2118は「美味しかったよ」と評価しました。その翌日、D-2118は交通事故で死亡しました。\n\n機動部隊員の所持していた通信機は、機動部隊がスポンジケーキを掘り進み厨房に到達する寸前に「チーン」というオーブンの音を捉えていました。また直後には虎屋博士が「もう一個焼いたんだった」と呟く声が伝えられました。数秒の沈黙ののち、オーブンの蓋が吹き飛ぶ音と、機動部隊長の「撤退！」と叫ぶ声、および緊急サイト放棄放送が記録されています。再び膨張を開始したスポンジケーキは時速12kmでサイト-8181を駆け巡り、およそ██分でサイト-8181を埋め尽くしました。 \n\nサイト-8181の窓や扉から触腕のごとく伸び空へと向けてその身をよじるスポンジケーキは、冷え始めると徐々に運動速度を緩め、やがて自重により崩壊しました。しかしサイト-8181からは依然としてゆっくりとスポンジケーキが溢れ出しており、後に開口部の削減と自動処置装置の設置が決定されました。\n\n事案発生の翌日行われた内部探査で、虎屋博士はサイト-8181の厨房で生存していることが確認されました。しかし虎屋博士は通信に応じず、スポンジケーキをちぎって作った身長80cm程度の人形に向けて話かけることをやめませんでした。その後48日の間、救出作業と並行して観察が続けられましたが、虎屋博士が補給、睡眠、排泄を必要としていないこと、ヒゲや髪の伸長などの代謝が見られないこと、掘削した分スポンジケーキが膨張して救出作業が進められないことから、日本支部理事は虎屋博士の救出中止とサイト-8181の放棄を決定し、虎屋博士をSCP-TRY-JPに指定しました。\n\n====\n+ ノベルゲー構文解説\n[[=]]\nまずはこちらをご覧ください\n\n[[iframe http://scp-jp.wikidot.com/author:dr-toraya/code/2 width=\"100%\" height=\"500px\"  scrolling=\"no\"]]\n\nこんなノベルゲーライクなものが作れる\n[[size 150%]]「ノベルゲー構文」[[/size]]\nのご紹介です。\n\n[[/=]]\n\n+ 作り方概要\n\n# このページのソースをあなたのサンドボックスにコピペしてsaveする\n# ソースに書かれているurlを修正する\n# シナリオを書く\n# 完成！\n\n+ コピペ用コード\n[[iframe http://scp-jp.wikidot.com/author:dr-toraya/code/5 width=\"100%\" height=\"400px\"  scrolling=\"yes\"]]\n\n+ 作り方\n++ (1) コピペ用コードのコピー\n前述のコピペ用コードをあなたのページにコピペしてSAVEします。\n\n**__注意:__** サンドボックス3の新規作成ページで作業を行う場合、必ず1度saveしてください。saveしないと、新規作成ページではURLが確定しておらず、以降の作業が行えません。\n\n++ (2) IFRAMEの修正\n次の部分を修正します。\n\n> @@[[iframe <ここにhttp://で始まるページのURL>/code/1 width=\"100%\" height=\"500px\"  scrolling=\"no\"]]@@\n\nページのURLが「http://scp-jp.wikidot.com/author:dr-toraya」の場合、次のように記載します。\n\n> @@[[iframe http://scp-jp.wikidot.com/author:dr-toraya/code/1 width=\"100%\" height=\"500px\"  scrolling=\"no\"]]@@\n\n++ (3) 1つ目のCODEブロックの修正\n1つ目のcodeブロックに、IFRAMEで表示するHTMLの内容を書きます。codeブロック内の2つ目のscriptタグに、ページ名を記載してください。ページのURLが「http://scp-jp.wikidot.com/author:dr-toraya」の場合、次のように記載します。\n\n> @@   <!-- ここにこのページの2番目のCodeブロックのURLを入れてください -->@@\n> @@   <script src='/author:dr-toraya/code/2'></script>@@\n\n\n++ (4) 2つ目のCODEブロックの修正\n2つ目のcodeブロック(javascript)の変数texturlに、シナリオのURLを記載します。ページのURLが「http://scp-jp.wikidot.com/author:dr-toraya」の場合、次のように記載します。\n\n> @@let texturl='/author:dr-toraya/code/3';@@\n\nまた、変数ASSETSに、使用する画像につける名前とURLを記載します。記載形式は次です。\n\n>     '名前' : '画像のURL',\n\n++ (5) 3つ目のCODEブロックの修正\n3つ目のコードブロックにシナリオを書きます。\n書き方は後述のリファレンスを参照してください。\n\n++ (6) SAVEして完成！\n\n[[=]]\n[[size 150%]]ね？簡単でしょう？[[/size]]\n[[/=]]\n\n+ シナリオの書き方のリファレンス\n+++ @で始まらない行\nテキストボックスに表示します。自動的に折り返します。改行が入ると次のページになります。\n先頭が [ で始まる場合、[]で囲んだ部分をキャラIDとし、指定したキャラを会話中にします。（名前を表示して画像を強調します。）\n先頭が \" で始まる場合、先頭の\"を削除して、残りを普通の文字列として使用します。\n\n**（指定例）:**\n> これは普通のテキスト。\n> [キャラ1]これはキャラ1を会話中に指定しする。テキストで[]内は表示されない。\n> \"[たとえば]こう書いた場合は先頭の\"だけを取り除く。\n\n+++ @talker;id=<キャラID>;imgid=<画像ID>;name=<キャラ名>\nテキスト表示時にアクティブな画像と名前を指定します。\nテキストを記載する前に@talkerを指定する必要があります。\n\n**（指定例）:**\n> @talker;id=キャラ1;imgid:@left;name=キャラ1の名前\n\n**__注意__:** 現在のところimgidは省略できません。そのうち対応します。\n\n+++ @text;text:<表示文字列>[;talker:<キャラID>][;next:auto][;size:<ピクセル数>][;color:<色指定>][;speed:<表示速度>]\n表示文字列をテキストボックスに表示します。\n基本的に@で始まらない行と同様ですが、先頭文字の解析はしません。\n**talker:** キャラIDを指定した場合、指定したキャラを会話中にします。（名前を表示して画像を強調します。）\n**next:** autoを指定した場合、文章表示後に自動的に次の行を開始します。\n**size:** 文字サイズをピクセル数で指定します。デフォルト値は32です。この指定は次の行に引き継がれません。\n**color:** 文字の色を16進数のrgb形式(例:#FFF)またはrgba形式(例:rgba(255,255,255,1.0))で指定します。この指定は次の行に引き継がれません。\n**speed:** テキストの表示速度(1文字ごとの表示間隔)をミリ秒単位で指定します。この指定は次の行に引き継がれません。\n\n**（指定例）:**\n> [キャラ1]キャラ1のセリフ\n> @text;talker:キャラ1;text:キャラ1のセリフ\n> 上記２つは同じ意味。(ちなみにこの行にも上の会話中キャラが継続して適用される）\n\n+++ @asset;id=<0以上の整数>\nASSETSから読み込む要素の番号を指定してください。\n@imgを指定する前に必ず実施しておく必要があります。\n\n**（指定例）:**\n> @asset;id=0\n\n+++ @img;position:{bg|right|center|left|<X座標>[,<Y座標>]}[;name:<ASSETSの名前>][;scale:<画像サイズ>][;id:<画像ID>][;mirror:x]\n画像を表示または削除します。一番シンプルな書き方は次です。画像を表示して、削除します。\n\n> @img;name=画像1;position:left\n> @img;id:@left\n\n**position:** bgを指定すると背景、right、left、centerは立ち絵です。rightだけ左右反転します。X座標は画面中央が0、値を大きくすると右へ動きます。Y座標は画像下端がテキストウィンドウにピッタリくっつく位置が0、値を大きくすると下へ動きます。idの指定がない場合、画像idには@bg、@right、@left、@centerが自動的に付与されます。\n**name:** ASSETSで指定した画像の名前を指定します。省略した場合、idが一致する画像に対する操作であると解釈します。\n**scale:** 下端中央を中心に、画像を拡縮します。1.0が等倍、0.5が半分、2.0が倍のサイズです。省略値は1.0です。\n**id:** 画像idはキャラと関連付けるための値です。@talkerのimgidに画像idを指定すると、指定のキャラが会話中になったときにこの画像が強調表示されます。positionにbg、right、left、centerを指定した場合は省略できます。\n**mirror:** xを指定すると、画像の中心を軸として左右反転します。idが'@right'の場合、自動的にxが指定されます。\n\n**画像の削除について:** idを指定し、それ以外の属性を省略すると、画像を削除します。このとき、@talkerの指定も解除されるので、削除した画像を再表示する際には、もう一度@talkerで関連付ける必要があります。\n\n**（指定例）:**\n> @img;position:left;name:画像1\n> @img;id:@left;position:0,-300;name:画像1\n\n+++ @title;main:<タイトル>;sub:<サブタイトル>\nタイトル画面を表示します。画面のどこかをタッチするとタイトル画面を閉じます。\n\n**main:** メインタイトルを指定します。\n**sub:** サブタイトルを指定します。表示しない場合は空にしてください。\n\n+++ @chapter;flag:<ジャンプ先フラグ>;text:<テキスト>\nチャプター画面で表示するチャプターボタンのテキストとジャンプ先を指定します。指定する場合、\nテキストウィンドウと名前ウィンドウの内容はすべて削除されます。@configで指定した設定は引き継がれます。\n**flag:** @flagで指定するidを指定してください。\n**text:** チャプター選択ボタンに表示するテキストを指定してください。\n\n+++ @goto;id:<フラグ名>\n指定した@flagまでジャンプします。後ろには戻れません。\n\n**（指定例）:**\n> @goto;id:flag1\n\n+++ @flag;id:<フラグ名>\n@gotoや@selectのジャンプ先です。\n\n**（指定例）:**\n> @flag;id:flag1\n\n+++ @select;[text:<表示テキスト>][;flag:<フラグ名>]\n選択肢です。「flag」がない「@select」がくるとそれまでに書いた選択肢を書いたボタンを列挙します。ボタンを選択すると<フラグ名>に指定したidのフラグまでジャンプします。後ろには戻れません。flagがない行にtextを指定しないでください（そのうち対応します）\n\n**（指定例）:**\n> @select;text:選択肢1;flag:flag1\n> @select;text:選択肢2;flag:flag2\n> @select;text:選択肢3;flag:flag3\n> @select;\n\n+++ @config;key=<キー>;value=<値>\nさまざまな設定を変更します。\n次に一覧を示します。\n\n|| キー || 初期値 || 説明 ||\n|| talker_shadow || true || 会話中のキャラを強調する場合true。 ||\n|| bgcolor || #000 || 背景色を16進数のrgb形式で指定する。 ||\n|| font_size || 32 || メッセージウィンドウのテキストのサイズを指定します。 ||\n|| font_color || #FFF || メッセージウィンドウのテキストのサイズを指定します。rgb形式またはrgba形式で指定してください。 ||\n\n+ 色指定の形式について\n+++ rgb形式\n「#rgb」の形式で指定します。\nrは赤、gは緑、bは青です。それぞれ0～Fを指定できます。\n例…黒:#000、白:#FFF、赤:#F00、緑:#0F0、青:#00F\n\n+++ rgba形式\n「rgba(r, g, b, a)」の形式で指定します。\nrは赤、gは緑、bは青です。それぞれ0～255の整数を指定します。\naは透明度です。0～1の小数を指定します。0は透明、1は不透明です。\n例…黒:rgba(0,0,0,1)、白:rgba(255,255,255,1)、半透明の赤:rgba(0,255,0,0.5)\n\n+ 注意事項\n* いろんなバグが残っているおそれがあります。見つけたら教えてください。\n* 機能が色々足りていません。要望を教えてください。\n* シナリオやcodeブロックを複数のサイトに分けることはできません。例えば財団サイトとサンドボックス3の両方にまたがって置くことは多分できません。画像ファイルは別のサイトからでも参照可能です。\n\n+ 補足\n画像を大量に準備する場合、そのシーンで使用する画像と使用しない画像が出てくるでしょう。その場合、javascriptの配列を使い、image要素を複数記載し、読み込み画像をグループ分けすることができます。\n\n> @@let ASSETS = [@@\n> @@  {@@\n> @@    image: {@@\n> @@     '名前' : 'グループ0の画像のURL',@@\n> @@    },@@\n> @@  },@@\n> @@ {@@\n> @@    image: {@@\n> @@      '名前' : 'グループ1の画像のURL',@@\n> @@    },@@\n> @@  },@@\n> @@];@@\n\nそれぞれのグループの画像の読み込みはシナリオの「@asset;id=グループ番号」で指定します。グループ番号は0から始まることに注意してください。例えば上記のグループ0を読み込む場合は次を指定します。\n\n> @asset;id=0\n\n====\n--]\n\n[[tabview]]\n[[tab メモ]]\nページ分け構文を使うと、コメントもリストモジュールも使えないらしい。\n[[/tab]]\n[[tab 執筆記事]] \n+ 執筆記事\n**SCP:** \n[[module ListPages created_by=\"dr_toraya\" separate=\"no\" limit=\"250\" perPage=\"250\" tags=\"+scp +jp\" order=\"created_at\" category=\"*\"]]\n# (%%created_at|%y/%m/%d%%) %%title_linked%% (評価: %%rating%%)\n[[/module]]\n\n**Tale:** \n[[module ListPages created_by=\"dr_toraya\" separate=\"no\" limit=\"250\" perPage=\"250\" tags=\"tale +jp\" order=\"created_at\" category=\"*\"]]\n# (%%created_at|%y/%m/%d%%) %%title_linked%% (評価: %%rating%%)\n[[/module]]\n\n**アートワーク:** \n[[module ListPages created_by=\"dr_toraya\" separate=\"no\" limit=\"250\" perPage=\"250\" tags=\"アートワーク +jp\" order=\"created_at\" category=\"*\"]]\n# (%%created_at|%y/%m/%d%%) %%title_linked%% (評価: %%rating%%)\n[[/module]]\n\n+ 出演作一覧\n[[module ListPages separate=\"no\" limit=\"250\" perPage=\"250\" tags=\"虎屋博士\" order=\"created_at desc\" category=\"*\"]]\n# %%title_linked%% by %%created_by%% (%%created_at|%y/%m/%d%%) (%%rating%%)\n[[/module]]\n[[/tab]]\n[[/tabview]]\n\n[!-- code 1 --]\n[!--\n[[code type=\"javascript\"]]\n\nphina.globalize();\n\nphina.define('ConfigObject', {\n  init: function(key, defaultValue){\n    this.key = key;\n    this.defaultValue = defaultValue;\n  }\n});\n\n\nconst CONFIG_TALKER_SHADOW = ConfigObject('talker_shadow', 'true');\nconst CONFIG_BGCOLOR = ConfigObject('bgcolor','#000');\nconst CONFIG_FONT_SIZE= ConfigObject('font_size',32);\nconst CONFIG_FONT_COLOR= ConfigObject('font_color','#FFF');\nconst CONFIG_TEXT_SPEED = ConfigObject('text_speed',30);\n\nconst MESSAGE_AREA_Y = 650;\n\nvar elemMan = null;\n\nphina.define('LongPushButton', {\n  superClass: 'phina.ui.Button',\n  init: function(options){\n    options = (options || {}).$safe(LongPushButton.defaults);\n    this.superInit(options);\n    \n    this.pushFrame=0;\n    this.on('pointstay', function(app){\n      this.pushFrame++;\n      if( this.pushFrame > 30 && this.pushFrame % 4 === 0){\n        this.onpush();\n      }\n    });\n    this.on('pointend', function(app){\n      this.pushFrame = 0;\n    });\n  },\n  \n  _static: {\n    defaults: {\n    },\n  },\n});\n\n/**\n * Animation Button\n */\nphina.define('AnimationButton', {\n  superClass: 'phina.ui.Button',\n  init: function(options){\n    options = (options || {}).$safe(LongPushButton.defaults);\n    this.superInit(options);\n  },\n\n  _static: {\n    defaults: {\n    },\n  },\n});\n\n/**\n * Title Scene\n */\nphina.define('TitleScene',{\n  superClass: 'DisplayScene',\n  init: function(){\n    // 親クラス初期化\n    this.superInit();\n    // 背景を半透明化\n    this.backgroundColor = 'rgba(0, 0, 0, 0.7)';\n    \n    var scene = this;\n    \n    // Main Title\n    this.mainTitleArea = Label({\n      text:'Chapter select',\n      width:scene.width,\n      fill:'#FFF',\n      stroke:'#000',\n      strokeWidth:6,\n      padding:0,\n      align: 'center',\n      fontSize: 64,\n    }).addChildTo(this);\n    this.mainTitleArea.setPosition(scene.gridX.center(), scene.gridY.center(-2));\n\n    // Sub Title\n    this.subTitleArea = Label({\n      text:'Chapter select',\n      width:scene.width,\n      fill:'#FFF',\n      stroke:'#000',\n      strokeWidth:6,\n      padding:0,\n      fontSize: 32,\n      align: 'center',\n    }).addChildTo(this);\n    this.subTitleArea.setPosition(scene.gridX.center(), scene.gridY.center(-1));\n\n    // Sub Title\n    this.nextText = Label({\n      text:'Toutch to start',\n      width:scene.width,\n      fill:'#FFF',\n      stroke:'#000',\n      strokeWidth:6,\n      padding:0,\n      fontSize: 40,\n      align: 'center',\n    }).addChildTo(this);\n    this.nextText.setPosition(scene.gridX.center(), scene.gridY.center(+4));\n\n    // Next Button (transparent)\n    this.nextBtn = AnimationButton({\n      text:'',\n      fill: 'transparent',\n      width: scene.width,\n      height: scene.height,\n    }).addChildTo(this);\n    this.nextBtn.setPosition(scene.gridX.center(), scene.gridY.center());\n    this.nextBtn.onpush = function() {\n      // シーンを削除する\n      scene.exit();\n      // 次へ進める\n      elemMan.next();\n    };\n  },\n});\n\n/**\n * Chapter Scene\n */\nphina.define('ChapterScene',{\n  superClass: 'DisplayScene',\n  init: function(){\n    // 親クラス初期化\n    this.superInit();\n    // 背景を半透明化\n    this.backgroundColor = 'rgba(0, 0, 0, 0.7)';\n    \n    var scene = this;\n    \n    //Caption\n    this.textArea = LabelArea({\n      text:'Chapter select',\n      width:scene.width,\n      height:300,\n      fill:'#FFF',\n      stroke:'#000',\n      strokeWidth:6,\n      padding:0,\n      fontSize: 40,\n    }).addChildTo(this);\n    this.textArea.setOrigin(0,0);\n    this.textArea.setPosition(10,10);\n\n    // Close Button\n    this.chapterBtn = AnimationButton({\n      text:'x',\n      width: 50,\n      height: 50,\n    }).addChildTo(this);\n    this.chapterBtn.setOrigin(1,0);\n    this.chapterBtn.setPosition(scene.width-10,10);\n    this.chapterBtn.onpush = function() {\n      // シーンをpushする\n      scene.exit();\n    };\n    \n    // TitleButton\n    this.titleBtn = AnimationButton({\n      text:'Back to Title',\n      width: scene.width - 60,\n      height: 60,\n    }).addChildTo(this);\n    this.titleBtn.setOrigin(0,0);\n    this.titleBtn.setPosition(10,80);\n    this.titleBtn.onpush = function() {\n      scene.exit();\n      elemMan.reset();\n    };\n\n    // チャプターボタン\n    var i=0;    \n    elemMan.chapterMap.forEach(function (value, key) {\n      var btn = AnimationButton({\n        text: value.text,\n        width: scene.width - 60,\n        height: 60,\n      }).addChildTo(scene);\n      btn.setOrigin(0,0);\n      btn.setPosition(10,200 + i*80);\n      btn.onpush = function() {\n        scene.exit();\n        elemMan.reset(value.flag);\n      };\n      i++;\n    });\n  },\n});\n\n\n/**\n * Main Scene\n */ \nphina.define('MainScene',{\n  superClass: 'DisplayScene',\n \n  init: function(){\n    this.superInit();\n    \n    let scene = this;\n    try{\n      this.backgroundColor = CONFIG_BGCOLOR.defaultValue;\n      \n      this.bgGroup = DisplayElement().addChildTo(this);\n      this.spriteGroup = DisplayElement().addChildTo(this);\n      this.spriteTopGroup = DisplayElement().addChildTo(this);\n      this.uiGroup = DisplayElement().addChildTo(this);\n  \n      this.spriteMap = new Map();\n      this.textshow = '';\n      this.textfull = '';\n      this.textTimer = 0;\n      this.textTimerInterval = CONFIG_TEXT_SPEED.defaultValue;\n   \n      // Main Text Window\n      this.textArea = LabelArea({\n        text:'now loading...',\n        width:scene.width-18,\n        height:300,\n        fill:'#FFF',\n        stroke:'#000',\n        strokeWidth:6,\n        padding:0,\n        fontsize: CONFIG_FONT_SIZE.defaultValue,\n      });\n      this.textArea.setOrigin(0,0);\n      this.textArea.setPosition(10, MESSAGE_AREA_Y);\n    \n      // Main Text Window Back Ground\n      this.textBg = RectangleShape({\n        width: this.textArea.width+10,\n        height: this.textArea.height+10,\n        fill: '#222244',\n        padding:0,\n      });\n      this.textBg.setPosition(this.textArea.x-5,this.textArea.y-5);\n      this.textBg.setOrigin(0,0);\n      this.textBg.alpha = 1.0;\n      \n      // Name Window\n      this.nameArea = LabelArea({\n        text:'',\n        width:200,\n        height:30,\n        fill:'#FFF',\n        stroke:'#000',\n        strokeWidth:6,\n        padding:0,\n      });\n      this.nameArea.setOrigin(0,0);\n      this.nameArea.setPosition(this.textArea.x,this.textArea.y-45);\n      this.nameArea.hide();\n  \n      // Name Window Back Ground\n      this.nameBg = RectangleShape({\n        width: this.nameArea.width+10,\n        height: this.nameArea.height+10,\n        fill: '#222244',\n        padding:1,\n        strokeWidth:1,\n      });\n      this.nameBg.setOrigin(0,0);\n      this.nameBg.setPosition(this.nameArea.x-5,this.nameArea.y-5);\n      this.nameBg.alpha = 1.0;\n      this.nameBg.hide();\n  \n      // add to UI group\n      this.textBg.addChildTo(this.uiGroup);\n      this.textArea.addChildTo(this.uiGroup);\n      this.nameBg.addChildTo(this.uiGroup);\n      this.nameArea.addChildTo(this.uiGroup);\n  \n      // Text next Button\n      this.nextBtn = LongPushButton({\n        text:'next',\n        width: this.textArea.width+20,\n        height: this.textArea.height+20,\n      }).addChildTo(this.uiGroup);\n      this.nextBtn.setOrigin(0,0);\n      this.nextBtn.setPosition(this.textArea.x,this.textArea.y);\n      this.nextBtn.alpha = 0.0;\n      this.nextBtn.onpush = function(){\n        if( scene.textshow.length < scene.textfull.length){\n          scene.textshow = scene.textfull;\n          scene.textArea.text = scene.textshow;\n        }else{\n          if(elemMan != null){\n            elemMan.pushNext(scene);\n          }\n        }\n      }\n  \n      // Text Next Triangle\n      this.nextTriangle = TriangleShape({\n        fill:'#FFF',\n        stroke:'transparent',\n        radius: 16,\n      }).addChildTo(this.uiGroup);\n      this.nextTriangle.setPosition(this.textArea.x + this.textArea.width-16,this.textArea.y + this.textArea.height-16);\n      this.nextTriangle.rotation = 180;\n      this.nextTriangle.hide();\n  \n      // Chapter Button\n      this.chapterBtn = AnimationButton({\n        text:'C',\n        width: 50,\n        height: 50,\n      });\n      this.chapterBtn.addChildTo(this.uiGroup);\n      this.chapterBtn.setOrigin(1,0);\n      this.chapterBtn.setPosition(scene.width-10,10);\n      this.chapterBtn.onpush = function() {\n        // シーンをpushする\n        scene.app.pushScene(ChapterScene());    \n      };\n    }catch(error){\n      this.showError('', error);\n    }\n  \n    try{\n      //Runstantでは動作しない\n      fetch(texturl , {})\n      .then(response => response.text())\n      .then(text => {\n        console.log('fetch success.');\n        if (typeof debugtext !== 'undefined'){\n          scene.scenario = debugtext;\n        }else{\n          scene.scenario = text;\n        }\n        elemMan = ElemManager(scene);\n        elemMan.next();\n      }).catch(error => {\n        console.log('fetch error.');\n        if(this.textArea != null){\n          this.textArea.text = 'fetch error.\\r\\n' + error.stack;\n        }\n        scene.scenario = debugtext;\n        elemMan = ElemManager(scene);\n        elemMan.next();\n      });\n    }catch(error){\n      this.showError('', error);\n    }\n\n  },\n\n  update: function(app){\n    try{\n      var len1 = this.textshow.length;\n      var len2 = this.textfull.length;\n      if( len1 < len2){\n        // short\n        this.textTimer += app.deltaTime;\n        while((this.textshow.length < this.textfull.length) && (this.textTimer >= this.textTimerInterval)){\n          this.textTimer -= this.textTimerInterval;\n          this.textshow += this.textfull[this.textshow.length];\n        }\n        this.nextTriangle.hide();\n        this.textArea.text = this.textshow;\n      }else{\n        // full\n        if( elemMan != null && elemMan.currentElem != null \n          && elemMan.currentElem.textnext == 'auto')\n        {\n          // 自動テキスト送り\n          elemMan.next();\n        }\n        if( app.frame % 8 === 0){\n          if(this.nextTriangle.visible){\n            this.nextTriangle.hide();\n          }else{\n            this.nextTriangle.show();\n          }\n        }\n      }\n    }catch(error){\n      this.showError('', error);\n    }\n  },\n  \n  updateText: function(newtext){\n    try{\n      if(elemMan.tempTextSize != null){\n        if(elemMan.tempTextSize.length == 0){\n          this.textArea.fontSize = elemMan.configMap.get(CONFIG_FONT_SIZE.key);\n          elemMan.tempTextSize = null;\n        }else{\n          this.textArea.fontSize = elemMan.tempTextSize;\n          elemMan.tempTextSize = '';\n        }\n      }\n      if(elemMan.tempTextColor != null){\n        if(elemMan.tempTextColor.length == 0){\n          this.textArea.fill = elemMan.configMap.get(CONFIG_FONT_COLOR.key);\n          elemMan.tempTextColor = null;\n        }else{\n          this.textArea.fill = elemMan.tempTextColor;\n          elemMan.tempTextColor = '';\n        }\n      }\n      if( elemMan.tempTextSpeed != null ){\n        if( elemMan.tempTextSpeed < 0 ){\n          this.textTimerInterval = elemMan.configMap.get(CONFIG_TEXT_SPEED.key);\n          elemMan.tempTextSpeed = null;\n          console.log('###DEBUG### text speed end. speed='+this.textTimerInterval);\n        }else{\n          this.textTimerInterval = elemMan.tempTextSpeed;\n          elemMan.tempTextSpeed = -1;\n          console.log('###DEBUG### text speed Start. speed='+this.textTimerInterval);\n        }\n      }\n      this.textfull = newtext;\n      this.textshow = '';\n      this.textArea.text = '';\n    }catch(error){\n      this.showError('', error);\n    }\n\n  },\n\n  updateSprite: function(key, sprite){\n    try{\n      var temp = this.spriteMap.get(key);\n      if( temp != null){\n        temp.remove();\n        this.spriteMap.delete(key);\n      }\n      this.spriteMap.set(key, sprite);\n    }catch(error){\n      this.showError('', error);\n    }\n  },\n  \n  updateName: function(name){\n    try{\n      if(name != null ){\n        this.nameArea.text = name;\n        this.nameArea.show();\n        this.nameBg.show();\n      }else{\n        this.nameArea.hide();\n        this.nameBg.hide();\n      }\n    }catch(error){\n      this.showError('', error);\n    }\n  },\n  \n  updateTalker: function(imgid){\n    try{\n      var active;\n      var sprite;\n      var index = -1;\n      if( elemMan.configMap.get(CONFIG_TALKER_SHADOW.key) != 'true' ){\n        // talkerを使用しない\n        return;\n      }\n      if(imgid == null){\n        for( var i=0 ; i < this.spriteGroup.children.length ; i++ ){\n          this.spriteGroup.children[i].alpha = 0.7;\n        }\n        return;\n      }\n  \n      sprite = this.spriteMap.get(imgid);\n      for( var i=0 ; i < this.spriteGroup.children.length ; i++ ){\n        if( this.spriteGroup.children[i] == sprite){\n          console.log('updateTalker(' + imgid + ')');\n          index = i;\n          this.spriteGroup.children[i].alpha = 1.0;\n        }else{\n          this.spriteGroup.children[i].alpha = 0.7;\n        }\n      }\n      if(index >= 0){\n        // top level\n        this.spriteGroup.children.swap(index, this.spriteGroup.children.length-1);\n      }\n    }catch(error){\n      this.showError('', error);\n    }\n  },\n  \n  showError: function(msg, error){\n    if(this.textArea == null){\n      return;\n    }\n    this.textArea.fontSize = 22;\n    this.textArea.setPosition(0,0);\n    this.textArea.width = this.width;\n    this.textArea.height = this.height;\n    this.textArea.text = msg + '\\r\\n' + error.stack;\n  }\n});\n\n\n\n\n/**\n * Element Manager\n */\nphina.define( 'ElemManager', {\n  \n  init: function(scene){\n    this.mainScene = scene;\n    try{\n      if( this.mainScene.scenario.indexOf('\\r\\n') >= 0 ){\n        this.lines = this.mainScene.scenario.split('\\r\\n');\n      }else if( this.mainScene.scenario.indexOf('\\r') >= 0 ){\n        this.lines = this.mainScene.scenario.split('\\r');\n      }else{\n        this.lines = this.mainScene.scenario.split('\\n');\n      }\n      this.nextFlag = false;\n      this.loadedAsset = -1;\n      this.index = 0;\n      this.currentElem = null;\n      this.pushable = false;\n      this.gotoFlag = null;\n      this.selectArray = [];\n      this.configMap = new Map();\n      this.talkerMap = new Map();\n      this.chapterMap = new Map();\n      this.variableMap = new Map();\n      this.tempTextSize = null;\n      this.tempTextColor = null;\n      this.tempTextSpeed = null;\n  \n      // configのdefault\n      this.configMap.set(CONFIG_TALKER_SHADOW.key, CONFIG_TALKER_SHADOW.defaultValue);\n      this.configMap.set(CONFIG_BGCOLOR.key, CONFIG_BGCOLOR.defaultValue);\n      this.configMap.set(CONFIG_FONT_SIZE.key, CONFIG_FONT_SIZE.defaultValue);\n      this.configMap.set(CONFIG_FONT_COLOR.key, CONFIG_FONT_COLOR.defaultValue);\n      this.configMap.set(CONFIG_TEXT_SPEED.key, CONFIG_TEXT_SPEED.defaultValue);\n  \n      //this.next();\n      console.log('ElemManager() success');\n    }catch(error){\n      if(this.mainScene != null ){\n        this.mainScene.showError('ElemManager()', error);\n      }\n    }\n  },\n  \n  pushNext: function(){\n    if(this.pushable){\n      this.next();\n    }\n  },\n  \n  reset: function(flag){\n      console.log('ElemManager#reset()');\n    if(this.mainScene != null){\n      this.mainScene.spriteMap.forEach(function (value, key) {\n        value.remove();\n      });\n      this.mainScene.updateText('');\n      this.mainScene.updateTalker(null);\n      this.mainScene.updateName(null);\n    }\n    // すべてのtalkerを解除する\n    this.talkerMap.clear();\n    this.gotoFlag = flag;\n    this.index=0;\n    this.next();\n  },\n\n  goto: function(flag){\n    this.gotoFlag = flag;\n  },\n\n  next: function(){\n    this.setNext();\n    while(this.nextFlag){\n      this.nextImpl();\n    }\n  },\n  \n  setNext: function(){\n    this.nextFlag = true;\n  },\n\n  nextImpl: function(){\n    var line = null;\n    this.nextFlag = false;\n    try{\n      this.pushable = false;\n  \n      if( this.index >= this.lines.length ){\n        // out of array\n        console.log('ElemManager::next() out of array.');\n        this.gotoFlag = null;\n        /*\n        this.index=0;\n        this.next(scene);\n        scene.spriteMap.forEach(function (value, key) {\n          value.remove();\n        });\n        */\n        return;\n      }\n  \n      var line = this.lines[this.index];\n      this.index++;\n      //console.log(line);\n  \n      if(line.trim().length===0){\n        // empty line\n        console.log('ElemManager::next() empty line.');\n        this.setNext();\n        return;\n      }\n  \n      if(this.gotoFlag != null){\n        // now goto\n        var splited = line.split(';');\n        if(splited[0] == '@flag'){\n          // 従来処理へ進む\n          //this.currentElem = ElemFlag(splited);\n          //this.currentElem.doAction(this.mainScene,this);\n          //return;\n        }else if(splited[0] == '@endif'){\n          // 従来処理へ進む\n        }else{\n          // 次へ進む\n          this.setNext();\n          return;\n        }\n      }\n  \n      if(line[0] == '@' ){\n        var splited = line.split(';');\n        this.currentElem = null;\n         if(splited[0] == '@img'){\n          this.currentElem = ElemImage(splited);\n        }else if(splited[0] == '@asset'){\n          this.currentElem = ElemAsset(splited);\n        }else if(splited[0] == '@flag'){\n          this.currentElem = ElemFlag(splited);\n        }else if(splited[0] == '@goto'){\n          this.currentElem = ElemGoto(splited);\n        }else if(splited[0] == '@select'){\n          this.currentElem = ElemSelect(splited);\n        }else if(splited[0] == '@text'){\n          this.currentElem = ElemText(splited);\n        }else if(splited[0] == '@pause'){\n          this.currentElem = ElemPause(splited);\n        }else if(splited[0] == '@talker'){\n          this.currentElem = ElemTalker(splited);\n        }else if(splited[0] == '@config'){\n          this.currentElem = ElemConfig(splited);\n        }else if(splited[0] == '@title'){\n          this.currentElem = ElemTitle(splited);\n        }else if(splited[0] == '@chapter'){\n          this.currentElem = ElemChapter(splited);\n        }else if(splited[0] == '@param'){\n          this.currentElem = ElemParam(splited);\n        }else if(splited[0] == '@endif'){\n          var l2 = '@flag;id:@endif';\n          this.currentElem = ElemFlag(l2.split(';'));\n        }else if(splited[0] == '@ifgoto'){\n          this.currentElem = ElemIfGoto(splited);\n        }else{\n          // undefined\n          console.log('ElemManager::next() undefined type ('+ splited[0] +')');\n          this.currentElem = null;\n          this.setNext();\n        }\n      }else{\n        // Pureテキスト\n        this.currentElem = ElemTextPlain(line);\n      }\n      if( this.currentElem != null){\n        this.currentElem.doAction(this.mainScene,this);\n      }\n    }catch(error){\n      if(this.mainScene != null ){\n        this.mainScene.showError(line, error);\n      }\n    }\n\n  },\n  \n});\n\n/**\n * 要素オブジェクトの基本クラス\n*/\nphina.define( 'ElemBase', {\n  init: function(splited){\n    this.elemMap = new Map();\n    for( var content of splited ){\n      if(content.length === 0){\n        continue;\n      }\n      var elems = content.split(':');\n      var key = elems[0].trim();\n      var value = elems[1];\n      if( value != null){\n        // 値がある\n        value = value.trim();\n        this.elemMap.set(key,value);\n      }\n    }\n  },\n  \n  doAction: function(scene,elemMan){\n    throw Exception(\"not support.\");\n  },\n});\n\n/**\n * text\n */\nphina.define( 'ElemTextPlain', {\n  superClass: 'ElemBase',\n  init: function(line){\n    //this.superInit(splited);\n    this.talkerid=null;\n    if(line[0]==\"\\\"\"){\n      this.text = line.substr(1);\n    }else if(line[0]=='['){\n      var last = line.indexOf(']');\n      if(last==1){\n        // talker解除\n        this.talkerid = '';\n        this.text = line.substr(last+1);\n      }else if(last > 1){\n        this.talkerid = line.substr(1, last-1);\n        this.text = line.substr(last+1);\n      }else{\n        this.text = line;\n      }\n    }else{\n      this.text = line;\n    }\n  },\n\n  doAction: function(scene,elemMan){\n    scene.updateText(this.text);\n\n    if(this.talkerid != null){\n      // talker指定あり\n      if(this.talkerid.length == 0){\n        scene.updateTalker(null);\n        scene.updateName(null);\n      }else{\n        var talker = elemMan.talkerMap.get(this.talkerid);\n        if(talker == null){\n          talker = Talker(this.talkerid);\n          elemMan.talkerMap.set(this.talkerid, talker);\n        }\n        scene.updateTalker(talker.imgid);\n        scene.updateName(talker.name);\n      }\n    }\n\n    elemMan.pushable = true;\n  },\n  \n})\n\n/**\n * text\n */\nphina.define( 'ElemText', {\n  superClass: 'ElemBase',\n  init: function(splited){\n    this.superInit(splited);\n    this.text = this.elemMap.get('text');\n    this.textnext = this.elemMap.get('next');\n    if(this.text == null && this.textnext == null){\n      // textがない場合は自動送り\n      this.textnext = 'auto';\n    }\n    this.name = this.elemMap.get('name');\n    this.color = this.elemMap.get('color');\n    this.size = this.elemMap.get('size');\n    this.alpha = this.elemMap.get('alpha');\n    this.imgid = this.elemMap.get('imgid');\n    this.speed = this.elemMap.get('speed');\n    this.talkerid = this.elemMap.get('talker');\n    console.log('ElemText : ' + splited);\n  },\n\n  doAction: function(scene,elemMan){\n    if(this.color != null){\n      elemMan.tempTextColor = this.color;\n    }\n    if(this.speed != null){\n      elemMan.tempTextSpeed = this.speed;\n    }\n    if(this.size != null){\n      elemMan.tempTextSize = this.size;\n    }\n    if(this.talkerid != null){\n      // talker指定あり\n      var talker = elemMan.talkerMap.get(this.talkerid);\n      if(talker == null){\n        talker = Talker(this.talkerid);\n        elemMan.talkerMap.set(this.talkerid, talker);\n      }\n      this.name = talker.name;\n      this.imgid = talker.imgid;\n      scene.updateTalker(this.imgid);\n    }\n    scene.updateName(this.name);\n    if(this.text != null){\n      scene.updateText(this.text);\n    }\n    elemMan.pushable = true;\n  },\n})\n\n\nphina.define( 'Talker', {\n  init:function(id){\n    this.id = id;\n    this.name = null;\n    this.imgid = null;\n  }\n})\n\n/**\n * @talker;id:manB;name:助手;imgid:@left\\r\\n\\\n */\nphina.define( 'ElemTalker', {\n  superClass: 'ElemBase',\n  init: function(splited){\n    this.superInit(splited);\n    this.id = this.elemMap.get('id');\n    this.name = this.elemMap.get('name');\n    this.imgid = this.elemMap.get('imgid');\n  },\n\n  doAction: function(scene,elemMan){\n    var talker = elemMan.talkerMap.get(this.id);\n    if(talker == null){\n      talker = Talker(this.id);\n      elemMan.talkerMap.set(this.id, talker);\n    }\n    if( this.name != null ){\n      talker.name = this.name;\n    }\n    if(this.imgid != null){\n      talker.imgid = this.imgid;\n    }\n    console.log('['+elemMan.index+']ElemTalker : id='+this.id+', name=' + this.name);\n    elemMan.setNext();\n  },\n})\n\n/**\n * text\n */\nphina.define( 'ElemConfig', {\n  superClass: 'ElemBase',\n  init: function(splited){\n    this.superInit(splited);\n    this.key = this.elemMap.get('key');\n    this.value = this.elemMap.get('value');\n  },\n\n  doAction: function(scene,elemMan){\n    console.log('ElemConfig set : ' + this.key + ' = ' + this.value);\n    elemMan.configMap.set(this.key,this.value);\n    if( this.key == CONFIG_BGCOLOR){\n      scene.backgroundColor = this.value;\n    }else if(this.key == CONFIG_FONT_SIZE.key){\n      if(this.value != null){\n        scene.textArea.fontSize = this.value;\n      }else{\n        scene.textArea.fontSize = CONFIG_FONT_SIZE.defaultValue;\n      }\n    }else if(this.key == CONFIG_FONT_COLOR.key){\n      if(this.value != null){\n        scene.textArea.fill = this.value;\n      }else{\n        scene.textArea.fill = CONFIG_FONT_COLOR.defaultValue;\n      }\n    }else if(this.key == CONFIG_TEXT_SPEED.key){\n      if(this.value != null){\n        scene.textTimerInterval = this.value;\n      }else{\n        scene.textTimerInterval = CONFIG_TEXT_SPEED.defaultValue;\n      }\n    }\n    \n    elemMan.setNext();\n  },\n})\n\n/**\n * pause\n */\nphina.define( 'ElemPause', {\n  superClass: 'ElemBase',\n  init: function(splited){\n    this.superInit(splited);\n    this.intarval = parseInt(this.elemMap.get('time'));\n  },\n\n  doAction: function(scene,elemMan){\n    console.log('ElemPause::Start');\n    setTimeout(function() {\n      console.log('ElemPause::End');\n      elemMan.next();\n    }, this.intarval);\n  },\n})\n\n/**\n * Title\n * @title;main:タイトル;sub:サブタイトル\n */\nphina.define( 'ElemTitle', {\n  superClass: 'ElemBase',\n  init: function(splited){\n    this.superInit(splited);\n    this.maintitle = this.elemMap.get('main');\n    this.subtitle = this.elemMap.get('sub');\n  },\n\n  doAction: function(scene,elemMan){\n    console.log('ElemTitle('+this.maintitle+','+this.subtitle+')');\n    // シーンをpushする\n    var titleScene = TitleScene();\n    scene.app.pushScene(titleScene);\n    titleScene.mainTitleArea.text = this.maintitle;\n    titleScene.subTitleArea.text = this.subtitle;\n  },\n})\n\n\nphina.define( 'ElemImage', {\n  superClass: 'ElemBase',\n  init: function(splited){\n    this.superInit(splited);\n\n    this.id = this.elemMap.get('id');\n    this.position = this.elemMap.get('position');\n    this.name = this.elemMap.get('name');\n    this.mirror = this.elemMap.get('mirror');\n    var scale = this.elemMap.get('scale');\n    var rotate = this.elemMap.get('rotate');\n    if(this.id == null){\n        if(this.position == 'right'){\n          this.id = '@right';\n        }else if(this.position == 'left'){\n          this.id = '@left';\n        }else if(this.position == 'center'){\n          this.id = '@center';\n        }else if(this.position == 'bg'){\n          this.id = '@bg';\n        }\n    }\n\n    this.removeflag = false;\n    if(this.id != null){\n      if( this.name == null && this.position == null && this.scale == null){\n        this.removeflag = true;\n      }\n    }\n\n    if(scale != null){\n      this.scale = parseFloat(scale);\n    }\n    if(rotate != null){\n      this.rotate = parseFloat(rotate);\n    }\n    if(this.mirror == null){\n      if(this.id == '@right'){\n        this.mirror = 'x';\n      }\n    }\n\n    console.log('ElemImage():id='+this.id+',name='+this.name+',position='+this.position);\n  },\n\n  doAction: function(scene,elemMan){\n    //@img;position:left;name:manB1;scale:1.5\\r\\n\\\n    //@img;position:right;name:manA1;scale:1.5\\r\\n\\\n    //@img;id:@right;position:+500,200\\r\\n\\\n    if( this.id == null){\n      // id指定なし\n      console.error('ElemImage no id.');\n      elemMan.setNext();\n      return;\n    }\n    \n    if(this.removeflag){\n      // remove image\n      console.log('ElemImage : remove('+this.id+')');\n      if(scene.spriteMap.get(this.id) != null){\n        scene.spriteMap.get(this.id).remove();\n        scene.spriteMap.delete(this.id);\n      }\n      elemMan.setNext();\n      return;\n    }\n\n    var sprite = null;\n    if(this.name != null){\n      // name指定がある場合はロードする\n      sprite = Sprite(this.name);\n      scene.updateSprite(this.id,sprite);\n      console.log('ElemImage : create('+this.id+')');\n    }else{\n      // name指定がない場合はIDから取得\n      sprite = scene.spriteMap.get(this.id);\n      console.log('ElemImage : load('+this.id+')');\n    }\n    if(sprite==null){\n      console.error('ElemImage no sprite.');\n      elemMan.setNext();\n      return;\n    }\n\n    // show Image\n    if(this.id == '@bg'){\n      // back ground\n      scene.updateSprite(this.id,sprite);\n      \n      sprite.addChildTo(scene.bgGroup);\n      sprite.setOrigin(0.5,0.5);\n      sprite.setPosition(scene.gridX.center(), scene.gridY.center());\n      sprite.setScale(this.scale);\n    }else{\n      //sprite = Sprite(this.name);\n      sprite.addChildTo(scene.spriteGroup);\n      sprite.setOrigin(0.5,1.0);\n      sprite.setScale(1.0);\n      if(this.id == '@right'){\n        //scene.updateSprite(this.id,sprite);\n        sprite.setPosition(scene.gridX.center()+160, MESSAGE_AREA_Y-1);\n      }else if(this.id == '@left'){\n        //scene.updateSprite(this.id,sprite);\n        sprite.setPosition(scene.gridX.center()-160, MESSAGE_AREA_Y-1);\n      }else if(this.id == '@center'){\n        //scene.updateSprite(this.id,sprite);\n        sprite.setPosition(scene.gridX.center(), MESSAGE_AREA_Y-1);\n      }\n    }\n\n    if(this.position != null){\n      var pos = this.position.split(',');\n      var x = parseInt(pos[0]);\n      var y = parseInt(pos[1]);\n      console.log('['+elemMan.index+']ElemImage('+this.id+') : set position('+x+','+y+')');\n      if(!isNaN(x)){\n        if(isNaN(y)){\n          sprite.setPosition(scene.gridX.center() + x, MESSAGE_AREA_Y);\n        }else{\n          sprite.setPosition(scene.gridX.center() + x, MESSAGE_AREA_Y+y);\n        }\n      }\n    }\n    \n    if(this.scale != null){\n      console.log('['+elemMan.index+']ElemImage('+this.id+') : set scale('+this.scale+')');\n      sprite.setScale(this.scale);\n    }\n    if(this.rotate != null){\n      console.log('['+elemMan.index+']ElemImage('+this.id+') : set rotate('+this.rotate+')');\n      sprite.setRotation(this.rotate);\n    }\n    if(this.mirror == 'x'){\n      console.log('['+elemMan.index+']ElemImage('+this.id+') : mirror = x');\n      sprite.scaleX *= -1;\n    }\n\n    elemMan.setNext();\n  },\n});\n\n\nphina.define( 'ElemAsset', {\n  superClass: 'ElemBase',\n  init: function(splited){\n    this.superInit(splited);\n    this.id = parseInt(this.elemMap.get('id'));\n    \n  },\n\n  doAction: function(scene,elemMan){\n    // load asset\n    if(elemMan.loadedAsset == this.id){\n      console.log('ElemAsset()::load asset['+this.id+'] is already loaded.');\n      elemMan.setNext();\n      return;\n    }\n    console.log('ElemAsset()::load['+this.id+'] start');\n    var loader = phina.asset.AssetLoader();\n    var elem = this;\n    loader.load(ASSETS[this.id]);\n    loader.on('load', function(){\n      console.log('ElemAsset()::load['+elem.id+'] end');\n      elemMan.loadedAsset = elem.id;\n      elemMan.next();\n    });\n  },\n})\n\nphina.define( 'ElemFlag', {\n  superClass: 'ElemBase',\n  init: function(splited){\n    this.superInit(splited);\n    this.id = this.elemMap.get('id');\n    console.log('ElemFlag() success('+this.id+')');\n  },\n\n  doAction: function(scene,elemMan){\n    if( this.id == elemMan.gotoFlag ){\n      elemMan.gotoFlag = null;\n    }\n    elemMan.setNext();\n  },\n})\n\nphina.define( 'ElemGoto', {\n  superClass: 'ElemBase',\n  init: function(splited){\n    this.superInit(splited);\n    this.id = this.elemMap.get('id');\n    console.log('ElemGoto() success('+this.id+')');\n  },\n\n  doAction: function(scene,elemMan){\n    elemMan.goto(this.id);\n    elemMan.setNext();\n  },\n})\n\n// @ifgoto;param:p1;cond:<10;then:if1;else:if2\nphina.define( 'ElemIfGoto', {\n  superClass: 'ElemBase',\n  init: function(splited){\n    this.superInit(splited);\n    this.param = this.elemMap.get('param');\n    this.cond = this.elemMap.get('cond');\n    this.gotoThen = this.elemMap.get('then');\n    this.gotoElse = this.elemMap.get('else');\n  },\n\n  doAction: function(scene,elemMan){\n    // 未実装\n    if(true){\n      elemMan.goto(this.gotoThen);\n    }else{\n      elemMan.goto(this.gotoElse);\n    }\n    elemMan.setNext();\n  },\n})\n\nphina.define( 'ElemChapter', {\n  superClass: 'ElemBase',\n  init: function(splited){\n    this.superInit(splited);\n    this.flag = this.elemMap.get('flag');\n    this.text = this.elemMap.get('text');\n    console.log('ElemChapter() success('+this.flag+'), ' + this.text);\n  },\n\n  doAction: function(scene,elemMan){\n    elemMan.chapterMap.set(elemMan.index, this);\n    elemMan.setNext();\n  },\n})\n\nphina.define( 'ElemParam', {\n  superClass: 'ElemBase',\n  init: function(splited){\n    this.superInit(splited);\n    this.name = this.elemMap.get('name');\n    this.value = this.elemMap.get('value');\n    //console.log('ElemParam() success('+this.name+'=' + this.value);\n  },\n\n  doAction: function(scene,elemMan){\n    if(this.value == null){\n      // 要素削除\n      elemMan.variableMap.delete(this.name);\n    }else if( this.value[0] == '='){\n      // 代入\n      elemMan.variableMap.set(this.name,this.value.substr(1));\n    }else if( this.value[0] == '+' || this.value[0] == '&'){\n      var current = elemMan.variableMap.get(this.name);\n      var temp;\n      if(current == null){\n        temp = this.value.substr(1);\n      }else{\n        if(this.value[0] == '&'){\n          temp = current + this.value.substr(1);\n        }else{\n          temp = parseInt(current) + parseInt(this.value.substr(1));\n        }\n      }\n      elemMan.variableMap.set(this.name,temp);\n    }else if( this.value[0] == '-'){\n      var current = elemMan.variableMap.get(this.name);\n      var temp;\n      if(current == null){\n        temp = this.value;\n      }else{\n        temp = parseInt(current) + parseInt(this.value);\n      }\n      elemMan.variableMap.set(this.name,temp);\n    }else{\n      // 代入\n      elemMan.variableMap.set(this.name,this.value);\n    }\n    console.log('ElemParam() success('+this.name+','+this.value+')=' + elemMan.variableMap.get(this.name));\n    elemMan.setNext();\n  },\n});\n\nphina.define( 'ElemSelect', {\n  superClass: 'ElemBase',\n  init: function(splited){\n    this.superInit(splited);\n    this.text = this.elemMap.get('text');\n    this.flag = this.elemMap.get('flag');\n    this.btn = null;\n    console.log('ElemSelect() success('+this.flag+') : ' + this.text);\n  },\n\n  doAction: function(scene,elemMan){\n    if(this.flag != null){\n      // add select\n      \n      this.label = Label({\n        text:this.text,\n        width: scene.width-20,\n        fill:'#FFF',\n        stroke:'#000',\n        strokeWidth:6,\n        padding:0,\n        fontsize: CONFIG_FONT_SIZE.defaultValue,\n      });\n\n      this.btn = Button({\n        text: '',\n        width: this.label.width,\n        height: this.label.height,\n      });\n      this.btn.alpha = 0.7;\n      \n      var elem = this;\n      this.btn.onpush = (function(){\n        // remove all button\n        var count = elemMan.selectArray.length;\n        for( var i=0 ; i < count ; i++ ){\n          elemMan.selectArray[i].btn.remove();\n          elemMan.selectArray[i].label.remove();\n        }\n        elemMan.selectArray = [];\n\n        elemMan.goto(elem.flag);\n        elemMan.next();\n      });\n      elemMan.selectArray.push(this);\n      elemMan.setNext();\n      return;\n    }else{\n      // show select\n      var count = elemMan.selectArray.length;\n      for( var i=0 ; i < count ; i++ ){\n        elemMan.selectArray[i].btn.addChildTo(scene.uiGroup);\n        elemMan.selectArray[i].label.addChildTo(scene.uiGroup);\n        elemMan.selectArray[i].label.setPosition(scene.gridX.center(),scene.gridY.center() - (count-i-1) * 100 );\n        elemMan.selectArray[i].btn.setPosition(elemMan.selectArray[i].label.x, elemMan.selectArray[i].label.y);\n      }\n      if( this.text != null ){\n        scene.updateText(this.text);\n      }\n    }\n  },\n})\n\nphina.main(function(){\n  var app = GameApp({\n    startLabel: 'main',\n  });\n  app.run();\n});\n\n[[/code]]\n--]\n\n[!-- code 2 --]\n[!--\n[[code type=\"html\"]]\n<html>\n  <head>\n　<meta charset='utf-8' />\n   <meta name=\"viewport\" content=\"width=device-width, user-scalable=no\" />\n   <meta name=\"apple-mobile-web-app-capable\" content=\"yes\" />\n\n   <!-- このURLは変えないでください -->\n   <script src='http://cdn.rawgit.com/phi-jp/phina.js/v0.2.0/build/phina.min.js'></script>\n\n   <!-- ここにこのページの2番目のCodeブロックのURLを入れてください -->\n   <!-- これは構文ページなので+1してます -->\n   <script src='http://scp-jp.wikidot.com/author:dr-toraya/code/3'></script>\n\n   <!-- このURLは変えないでください -->\n   <script src='http://scp-jp.wikidot.com/author:dr-toraya/code/1'></script>\n\n   <!-- スタイルシートはご自由にどうぞ -->\n  <style type=\"text/css\">\n@import url(http://scp-jp.wdfiles.com/local--files/japanese-syntax/scp-WikidotCss.css);\n\nbody {\n  padding:0px;\n  margin: 0px;\n  color: #FFFFFF;\n  background-color: #1a1a1a;\n}\n  </style>\n</head>\n<body>\n<div id=\"page-content\">\n</div>\n</body>\n</html>\n[[/code]]\n--]\n\n[!-- code 4--]\n[!--\n[[code type=\"javascript\"]]\n\n// この変数このページに対応するCodeの3番目のURL(シナリオのCode)を入れます。\n// なぜだか絶対パス(httpで始まるパス)だとうまくいかないみたいです。\n// 解決策を見つけたら教えてください。\n// これは構文ページなので+1してます\nlet texturl='/author:dr-toraya/code/4';\n\n// この変数に読み込む画像のURLを記載します。\n// 配列で分けているのは、シーンごとに必要な画像セットを切り分けるためです。\nlet ASSETS = [\n  {\n    image: {\n      'bg1'  : 'http://scp-jp.wikidot.com/local--files/novelgamenekocook/castle.jpg',\n      'test1': 'http://scp-jp.wikidot.com/local--files/novelgamenekocook/manA1.png',\n      'test2': 'http://scp-jp.wikidot.com/local--files/novelgamenekocook/manB2.png',\n    },\n  },\n];\n[[/code]]\n--]\n\n[!-- code 5 --]\n[!--\n[[code type=\"javascript\"]]\n@asset;id:0\n@chapter;flag:チャプター1;text:チャプター1;\n@chapter;flag:チャプター2;text:チャプター2;\n@title;main:サンプル;sub:ノベルゲー構文利用例\n@flag;id:チャプター1\n@img;name:bg1;position:bg;scale:2\n背景画像を表示しました。\n@talker;id:キャラ1;name:キャラ1名;imgid:@right\n@talker;id:キャラ2;name:キャラ2名;imgid:@left\n@img;position:right;name:test1;scale:1.5\n[キャラ1]右側に画像表示。idには「@right」が使用されます。\n@img;position:left;name:test2;scale:1.5\n[キャラ2]左側にも画像表示。idには「@left」が使用されます。\n改行すると次のページになりますがアクティブなキャラクタは引き継がれます。\n@text;talker:キャラ1;text:大きく赤文字で！;size:64;color:#F00;speed:200\n@text;text:talkerがない@textを指定するとキャラ指定が解除されます。\n@text;talker:キャラ1;text:または(これは小さく緑文字で）;size:24;color:rgba(0,255,0,1)\n[]先頭が[]の行を指定するとキャラ指定が解除されます。\n@text;next:auto;text:選択肢を表示\n@select;text:選択肢1;flag:1\n@select;text:選択肢2;flag:2\n@select;text:選択肢3;flag:3\n@select;\n@flag;id:1\nこれは選択肢1の文章\n@goto;id:next\n@flag;id:2\nこれは選択肢2の文章\n@goto;id:next\n@flag;id:3\nこれは選択肢3の文章\n@goto;id:next\n@flag;id:next\n@img;id:@right\n@img;id:@left\n@img;id:@bg\n@flag;id:チャプター2\nここからチャプター2\nこれでおしまい。\n[[/CODE]]\n--]\n\n[!-- code 6 --]\n[!--\n[[code]]\n[[iframe <ここにhttp://で始まるページのURL>/code/1 width=\"100%\" height=\"500px\"  scrolling=\"no\"]]\n\n[!-- 1つ目のコードブロック、HTMLを記載する --]\n[!--\n[[code type=\"html\"]]\n<html>\n  <head>\n　<meta charset='utf-8' />\n   <meta name=\"viewport\" content=\"width=device-width, user-scalable=no\" />\n   <meta name=\"apple-mobile-web-app-capable\" content=\"yes\" />\n\n   <!-- このURLは変えないでください -->\n   <script src='http://cdn.rawgit.com/phi-jp/phina.js/v0.2.0/build/phina.min.js'></script>\n\n   <!-- ここにこのページの2番目のCodeブロックのURLを入れてください -->\n   <script src='http://scp-jp.wikidot.com/<ここにページ名>/code/2'></script>\n\n   <!-- このURLは変えないでください -->\n   <script src='http://scp-jp.wikidot.com/author:dr-toraya/code/1'></script>\n\n<!-- サンドボックスの場合は上をコメントアウトして次を記載してください -->\n\n<!-- \n   <script src='http://scp-jp-sandbox3.wdfiles.com/local--code/draft%3A1869219-34-0fe4/1'></script>\n-->\n\n   <!-- スタイルシートはご自由にどうぞ -->\n  <style type=\"text/css\">\n@import url(http://scp-jp.wdfiles.com/local--files/japanese-syntax/scp-WikidotCss.css);\n\nbody {\n  padding:0px;\n  margin: 0px;\n  color: #FFFFFF;\n  background-color: #1a1a1a;\n}\n  </style>\n</head>\n<body>\n<div id=\"page-content\">\n</div>\n</body>\n</html>\n[[/code]]\n--]\n\n[!-- 2つ目のコードブロック、javascriptを記載する --]\n\n[!--\n[[code type=\"javascript\"]]\n\n// この変数このページに対応するCodeの3番目のURL(シナリオのCode)を入れます。\n// なぜだか絶対パス(httpで始まるパス)だとうまくいかないみたいです。\n// 解決策を見つけたら教えてください。\nlet texturl='/<ここにページ名>/code/3';\n\n// この変数に読み込む画像のURLを記載します。\n// 配列で分けているのは、シーンごとに必要な画像セットを切り分けるためです。\nlet ASSETS = [\n  {\n    image: {\n      '画像ID1'  : 'ここに画像URL（フルパス指定可）',\n      '画像ID2'  : '必要な数だけ記載してください。',\n    },\n  },\n];\n[[/code]]\n\n[!-- 3つ目のコードブロック、シナリオを記載する --]\n[!--\n[[code type=\"javascript\"]]\n@asset;id:0\n@chapter;flag:チャプター1;text:チャプター1;\n@chapter;flag:チャプター2;text:チャプター2;\n@title;main:サンプル;sub:ノベルゲー構文利用例\n@flag;id:チャプター1\n@img;name:bg1;position:bg;scale:2\n背景画像を表示しました。\n@talker;id:キャラ1;name:キャラ1名;imgid:@right\n@talker;id:キャラ2;name:キャラ2名;imgid:@left\n@img;position:right;name:test1;scale:1.5\n[キャラ1]右側に画像表示。idには「@right」が使用されます。\n@img;position:left;name:test2;scale:1.5\n[キャラ2]左側にも画像表示。idには「@left」が使用されます。\n改行すると次のページになりますがアクティブなキャラクタは引き継がれます。\n@text;talker:キャラ1;text:大きく赤文字で！;size:64;color:#F00;speed:200\n@text;text:talkerがない@textを指定するとキャラ指定が解除されます。\n@text;talker:キャラ1;text:または;size:24;color:#0F0\n[]先頭が[]の行を指定するとキャラ指定が解除されます。\n@text;next:auto;text:選択肢を表示\n@select;text:選択肢1;flag:1\n@select;text:選択肢2;flag:2\n@select;text:選択肢3;flag:3\n@select;\n@flag;id:1\nこれは選択肢1の文章\n@goto;id:next\n@flag;id:2\nこれは選択肢2の文章\n@goto;id:next\n@flag;id:3\nこれは選択肢3の文章\n@goto;id:next\n@flag;id:next\n@img;id:@right\n@img;id:@left\n@img;id:@bg\n@flag;id:チャプター2\nここからチャプター2\nこれでおしまい。\n[[/CODE]]\n--]\n\n[[/code]]\n--]\n[!-- ここまでコピペ用コード --]",
  "tags": [
    "jp",
    "著者ページ"
  ],
  "author": "dr_toraya",
  "created_at": "2014-05-05T00:54:30+00:00",
  "updated_at": "2024-07-28T02:43:18+00:00",
  "rating": 22,
  "_site": "scp-jp",
  "_fullname": "author:dr-toraya"
}
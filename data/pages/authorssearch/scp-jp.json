{
  "title": "作者検索",
  "content": "[[include :scp-jp:credit:start |mode=no-rate]]\n**タイトル:** 作者検索\n**著者:** SCP財団\n**作成年:** 2023\n----\n本ページはSCPコミュニティのために作成され，SCP財団に帰属します．本ページの管理は[[[meet-the-staff-jp|サイトスタッフ]]]に委任されています．\n[[include :scp-jp:credit:cc4]]\n[[include :scp-jp:credit:end]]\n\n> お知らせ: [http://scp-jp.wikidot.com/forum/t-16926432/cc ライセンス表記において、作成年の記載が不要となりました。]\n\n[[html]]\n<!--\nMIT License\n\nCopyright (c) 2020 -  R74\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n-->\n<!DOCTYPE html>\n<html lang=\"ja\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>SCP作者検索</title>\n    <link\n      rel=\"stylesheet\"\n      href=\"https://cdnjs.cloudflare.com/ajax/libs/bulma/0.9.4/css/bulma.min.css\"\n    />\n    <link\n      rel=\"stylesheet\"\n      href=\"https://cdn.jsdelivr.net/npm/bulma-extensions@4.0.0/dist/css/bulma-extensions.min.css\"\n    />\n    <style>\n      .license-text {\n        white-space: pre-line;\n      }\n      .checkbox-container {\n        display: flex;\n        flex-direction: column;\n        gap: 0.5rem;\n        margin-top: 1rem;\n      }\n      #error-container {\n        margin-top: 1rem;\n        color: #ff3860;\n      }\n      #url-form {\n        word-break: break-all;\n        background: #f5f5f5;\n        padding: 1rem;\n        border-radius: 4px;\n      }\n      .box {\n        margin-bottom: 1rem;\n      }\n    </style>\n  </head>\n  <body>\n    <section class=\"section p-0\">\n      <div class=\"container\">\n        <form id=\"license-form\" class=\"mb-5\">\n          <div class=\"field\">\n            <div class=\"control\">\n              <textarea\n                class=\"textarea\"\n                id=\"license-input\"\n                placeholder=\"http://scp-jp.wikidot.com/scp-2000-jp&#10;scp-3000-jp&#10;https://scp-wiki.wikidot.com/scp-999\"\n              ></textarea>\n            </div>\n          </div>\n\n          <div class=\"field is-grouped is-align-items-center is-flex-wrap-wrap\">\n            <div class=\"control pt-1\">\n              <button class=\"button is-info\" type=\"submit\">検索</button>\n            </div>\n            <div class=\"control pt-1\">\n              <button\n                class=\"button is-link\"\n                id=\"show-html\"\n                type=\"button\"\n                disabled\n              >\n                HTMLソース\n              </button>\n            </div>\n            <div class=\"control pt-1\">\n              <button\n                class=\"button is-link\"\n                id=\"show-rich-text\"\n                type=\"button\"\n                disabled\n              >\n                テキスト\n              </button>\n            </div>\n            <div class=\"control pt-1\">\n              <button class=\"button is-link\" id=\"gen-url\" type=\"button\">\n                URL生成(5つ迄)\n              </button>\n            </div>\n          </div>\n\n          <div class=\"checkbox-container\">\n            <div class=\"control\">\n              <input\n                id=\"toggle-original\"\n                type=\"checkbox\"\n                name=\"toggle-original\"\n                class=\"switch\"\n                checked\n              />\n              <label for=\"toggle-original\">原語版情報を表示</label>\n            </div>\n            <div class=\"control\">\n              <input\n                id=\"toggle-year\"\n                type=\"checkbox\"\n                name=\"toggle-year\"\n                class=\"switch\"\n              />\n              <label for=\"toggle-year\">作成年を表示</label>\n            </div>\n          </div>\n        </form>\n\n        <p>共有URL:</p>\n        <pre id=\"url-form\" class=\"mb-5\"></pre>\n        <hr />\n\n        <div id=\"license-boxes\"></div>\n        <div id=\"html-boxes\" style=\"display: none\"></div>\n        <div id=\"error-container\"></div>\n\n        <footer class=\"mt-5\">\n          <p>\n            <a href=\"https://crom.avn.sh/\" target=\"_blank\" rel=\"noopener\"\n              >Powered by Crom</a\n            >\n          </p>\n        </footer>\n      </div>\n    </section>\n\n    <script>\n      // Constants\n      const API_ENDPOINT = \"https://api.crom.avn.sh/graphql\";\n      const DEFAULT_WIKI = \"http://scp-jp.wikidot.com/\";\n      const MAX_URL_GENERATIONS = 5;\n\n      const scpBranches = {\n        cn: \"http://scp-wiki-cn.wikidot.com/\",\n        cs: \"http://scp-cs.wikidot.com/\",\n        en: \"http://scp-wiki.wikidot.com/\",\n        fr: \"http://fondationscp.wikidot.com/\",\n        de: \"http://scp-wiki-de.wikidot.com/\",\n        int: \"http://scp-int.wikidot.com/\",\n        it: \"http://fondazionescp.wikidot.com/\",\n        jp: \"http://scp-jp.wikidot.com/\",\n        ko: \"http://scpko.wikidot.com/\",\n        pl: \"http://scp-pl.wikidot.com/\",\n        pt: \"http://scp-pt-br.wikidot.com/\",\n        ru: \"http://scp-ru.wikidot.com/\",\n        es: \"http://lafundacionscp.wikidot.com/\",\n        th: \"http://scp-th.wikidot.com/\",\n        ua: \"http://scp-ukrainian.wikidot.com/\",\n        zh: \"http://scp-zh-tr.wikidot.com/\",\n        vn: \"http://scp-vn.wikidot.com/\",\n        el: \"http://scp-el.wikidot.com/\",\n        id: \"http://scp-id.wikidot.com/\",\n        nd: \"http://scp-nd.wikidot.com/\",\n        tr: \"http://scp-tr.wikidot.com/\",\n      };\n\n      const SEARCH_QUERY = `\n        query Search($url: URL!) {\n          page(url: $url) {\n            url\n            wikidotInfo {\n              title\n              createdAt\n              source\n              tags\n            }\n            alternateTitles {\n              title\n            }\n            attributions {\n              user {\n                name\n              }\n              type\n            }\n            adultContentPage {\n              url\n            }\n            adultSplashPage {\n              url\n            }\n            translations {\n              url\n              wikidotInfo {\n                title\n                createdAt\n              }\n              alternateTitles {\n                title\n              }\n              attributions {\n                user {\n                  name\n                }\n                type\n              }\n              adultContentPage {\n                url\n              }\n              adultSplashPage {\n                url\n              }\n            }\n            translationOf {\n              url\n              wikidotInfo {\n                title\n                createdAt\n              }\n              alternateTitles {\n                title\n              }\n              attributions {\n                user {\n                  name\n                }\n                type\n              }\n              adultContentPage {\n                url\n              }\n              adultSplashPage {\n                url\n              }\n              translations {\n                url\n                wikidotInfo {\n                  title\n                  createdAt\n                }\n                alternateTitles {\n                  title\n                }\n                attributions {\n                  user {\n                    name\n                  }\n                  type\n                }\n                adultContentPage {\n                  url\n                }\n                adultSplashPage {\n                  url\n                }\n              }\n            }\n          }\n        }\n      `;\n\n      const setupEventListeners = () => {\n        document\n          .getElementById(\"license-form\")\n          .addEventListener(\"submit\", handleFormSubmit);\n        document\n          .getElementById(\"show-html\")\n          .addEventListener(\"click\", () => toggleView(\"html\"));\n        document\n          .getElementById(\"show-rich-text\")\n          .addEventListener(\"click\", () => toggleView(\"text\"));\n        document\n          .getElementById(\"toggle-original\")\n          .addEventListener(\"click\", () => {\n            document\n              .getElementById(\"license-form\")\n              .dispatchEvent(new Event(\"submit\"));\n          });\n        document\n          .getElementById(\"gen-url\")\n          .addEventListener(\"click\", generateUrl);\n      };\n\n      const normalizeUrl = (url) => {\n        url = url.trim().toLowerCase();\n\n        if (!url.startsWith(\"http://\") && !url.startsWith(\"https://\")) {\n          url = DEFAULT_WIKI + url;\n        }\n\n        url = url.replace(\"https://\", \"http://\");\n\n        try {\n          const urlObj = new URL(url);\n          const path = urlObj.pathname.split(\"/\")[1];\n\n          let baseUrl = DEFAULT_WIKI;\n          const domain = urlObj.hostname;\n\n          for (const [_, branchUrl] of Object.entries(scpBranches)) {\n            if (branchUrl.includes(domain)) {\n              baseUrl = branchUrl;\n              break;\n            }\n          }\n\n          return baseUrl + path;\n        } catch (error) {\n          console.error(\"Error parsing URL:\", error);\n          return url;\n        }\n      };\n\n      const fetchPageData = async (url) => {\n        const response = await fetch(API_ENDPOINT, {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify({\n            query: SEARCH_QUERY,\n            variables: { url },\n          }),\n        });\n\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n\n        return await response.json();\n      };\n\n      const selectOriginalTranslation = (page, isTranslation) => {\n        if (!isTranslation || !page.translationOf) return null;\n\n        const allTranslations = [\n          page.translationOf,\n          ...(page.translationOf.translations || []),\n        ].filter(\n          (translation) =>\n            translation?.wikidotInfo?.title && translation?.attributions\n        );\n\n        if (!allTranslations.length) return null;\n\n        const sortedTranslations = allTranslations.sort(\n          (a, b) =>\n            new Date(a.wikidotInfo.createdAt) -\n            new Date(b.wikidotInfo.createdAt)\n        );\n\n        let originalTranslation = sortedTranslations[0];\n\n        const matchingLang = Object.entries(scpBranches).find(([lang]) =>\n          page.wikidotInfo.tags.includes(lang.toLowerCase())\n        );\n\n        if (matchingLang) {\n          const [_, langUrl] = matchingLang;\n          const matchingTranslation = sortedTranslations.find((t) =>\n            t.url.startsWith(langUrl)\n          );\n          if (matchingTranslation) {\n            originalTranslation = matchingTranslation;\n          }\n        }\n\n        if (\n          new Date(originalTranslation.wikidotInfo.createdAt) >\n          new Date(page.wikidotInfo.createdAt)\n        ) {\n          return null;\n        }\n\n        return originalTranslation;\n      };\n\n      const generateLicenseContent = (\n        page,\n        isTranslation,\n        originalTranslation\n      ) => {\n        const showOriginal = document.getElementById(\"toggle-original\").checked;\n        let content = \"\";\n\n        // Title section\n        content += `タイトル: ${escapeHtml(page.wikidotInfo.title)}`;\n        if (page.alternateTitles.length > 0) {\n          content += ` - ${escapeHtml(page.alternateTitles[0].title)}`;\n        }\n        content += \"\\n\";\n\n        // Helper function to get hostname from URL without protocol\n        const getHostname = (url) => {\n          try {\n            return new URL(url).hostname;\n          } catch (error) {\n            console.error(\"Error parsing URL:\", error);\n            return null;\n          }\n        };\n\n        // Helper function to find the original article\n        const findOriginalArticle = (page) => {\n          if (!page.translationOf) return null;\n\n          const allVersions = [\n            page.translationOf,\n            ...(page.translationOf.translations || []),\n          ].filter((t) => t?.wikidotInfo?.createdAt);\n\n          return allVersions.sort(\n            (a, b) =>\n              new Date(a.wikidotInfo.createdAt) -\n              new Date(b.wikidotInfo.createdAt)\n          )[0];\n        };\n\n        // Get user name helper function\n        const getUserName = (attr) => {\n          if (!attr.user?.name) return \"Unknown Author\";\n          if (attr.user.name === \"Unknown Author\") return attr.user.name;\n          return attr.user.name;\n        };\n\n        // Determine article type\n        const currentDomain = getHostname(page.url);\n        const isJpDomain = currentDomain === \"scp-jp.wikidot.com\";\n        const hasJpTag = page.wikidotInfo.tags.includes(\"jp\");\n\n        // Find the original article and check if current is original\n        const originalArticle = findOriginalArticle(page);\n        const isOriginalArticle = (() => {\n          if (isJpDomain) return hasJpTag;\n\n          if (!originalArticle) {\n            // If no original article is found, check if this page has translations\n            return page.translations?.length > 0;\n          }\n\n          // Check if the current hostname matches the oldest article's hostname\n          const oldestHostname = getHostname(originalArticle.url);\n          return oldestHostname === currentDomain;\n        })();\n\n        if (\n          showOriginal &&\n          !isOriginalArticle &&\n          originalArticle?.wikidotInfo\n        ) {\n          content += `原語版タイトル: ${escapeHtml(\n            originalArticle.wikidotInfo.title\n          )}`;\n          if (originalArticle.alternateTitles?.length > 0) {\n            content += ` - ${escapeHtml(\n              originalArticle.alternateTitles[0].title\n            )}`;\n          }\n          content += \"\\n\";\n        }\n\n        // Handle attribution section\n        if (isOriginalArticle) {\n          // This is an original article\n          const authors = page.attributions\n            .map((attr) => {\n              if (attr.type === \"REWRITE\") {\n                return `${getUserName(attr)}(改稿者)`;\n              }\n              return getUserName(attr);\n            })\n            .filter(Boolean)\n            .join(\", \");\n\n          content += `作者: ${authors}\\n`;\n        } else {\n          // This is a translation\n          const translators = page.attributions\n            .filter((attr) => {\n              if (isJpDomain && !hasJpTag) {\n                // For JP translations, consider AUTHOR, TRANSLATOR, and SUBMITTER as translators\n                return (\n                  attr.type === \"TRANSLATOR\" ||\n                  attr.type === \"SUBMITTER\" ||\n                  attr.type === \"AUTHOR\"\n                );\n              }\n              // For other translations, only consider TRANSLATOR and SUBMITTER\n              return attr.type === \"TRANSLATOR\" || attr.type === \"SUBMITTER\";\n            })\n            .map(getUserName);\n\n          // If we have no explicit translators but we have an AUTHOR in a JP translation\n          if (translators.length === 0 && isJpDomain && !hasJpTag) {\n            const authors = page.attributions\n              .filter((attr) => attr.type === \"AUTHOR\")\n              .map(getUserName);\n            content += `訳者: ${authors.join(\", \") || \"不明\"}\\n`;\n          } else {\n            content += `訳者: ${translators.join(\", \") || \"不明\"}\\n`;\n          }\n\n          if (showOriginal && originalArticle?.attributions) {\n            const originalAuthors = originalArticle.attributions\n              .map((attr) => {\n                if (attr.type === \"REWRITE\") {\n                  return `${getUserName(attr)}(改稿者)`;\n                }\n                if (attr.type === \"AUTHOR\" || attr.type === \"SUBMITTER\") {\n                  return getUserName(attr);\n                }\n                return null;\n              })\n              .filter(Boolean)\n              .join(\", \");\n\n            content += `原語版作者: ${originalAuthors}\\n`;\n          }\n        }\n\n        // Source URLs\n        const sourceUrl = page.adultSplashPage?.url || page.url;\n        content += `ソース: <a href='${escapeHtml(\n          sourceUrl\n        )}' target='_blank'>${escapeHtml(sourceUrl)}</a>\\n`;\n\n        if (showOriginal && !isOriginalArticle && originalArticle) {\n          const originalSourceUrl =\n            originalArticle.adultSplashPage?.url || originalArticle.url;\n          content += `原語版ソース: <a href='${escapeHtml(\n            originalSourceUrl\n          )}' target='_blank'>${escapeHtml(originalSourceUrl)}</a>\\n`;\n        }\n\n        // License and year\n        const licenseVersion = page.wikidotInfo.source?.includes(\"credit:cc4\")\n          ? \"4.0\"\n          : \"3.0\";\n        content += `ライセンス: CC BY-SA ${licenseVersion}\\n`;\n\n        if (document.getElementById(\"toggle-year\").checked) {\n          content += `作成年: ${new Date(\n            page.wikidotInfo.createdAt\n          ).getFullYear()}\\n`;\n          if (!isOriginalArticle && originalArticle?.wikidotInfo) {\n            content += `原語版作成年: ${new Date(\n              originalArticle.wikidotInfo.createdAt\n            ).getFullYear()}\\n`;\n          }\n        }\n\n        return content;\n      };\n\n      const createLicenseBox = (page, isTranslation, originalTranslation) => {\n        const box = document.createElement(\"div\");\n        box.className = \"box\";\n        box.id = urlToId(extractPathFromUrl(page.url));\n\n        const content = document.createElement(\"p\");\n        content.className = \"license-text\";\n        content.innerHTML = generateLicenseContent(\n          page,\n          isTranslation,\n          originalTranslation\n        );\n\n        box.appendChild(content);\n        return box;\n      };\n\n      const handleFormSubmit = async (event) => {\n        event.preventDefault();\n        const input = document\n          .getElementById(\"license-input\")\n          .value.split(\"\\n\")\n          .filter(Boolean)\n          .map(normalizeUrl);\n\n        const licenseBoxes = document.getElementById(\"license-boxes\");\n        const htmlBoxes = document.getElementById(\"html-boxes\");\n        licenseBoxes.innerHTML = \"\";\n        htmlBoxes.innerHTML = \"\";\n\n        for (const url of input) {\n          try {\n            const response = await fetchPageData(url);\n            const page = response.data.page;\n\n            if (!page.wikidotInfo) {\n              showError(\n                `以下の記事は存在しません: <a href='${url}' target='_blank'>${url}</a>`\n              );\n              continue;\n            }\n\n            const isTranslation = page.translationOf !== null;\n            const originalTranslation = selectOriginalTranslation(\n              page,\n              isTranslation\n            );\n\n            const licenseBox = createLicenseBox(\n              page,\n              isTranslation,\n              originalTranslation\n            );\n            licenseBoxes.appendChild(licenseBox);\n\n            const htmlBox = document.createElement(\"div\");\n            htmlBox.className = \"box\";\n            htmlBox.innerHTML = `<pre>${escapeHtml(\n              licenseBox.textContent\n            )}</pre>`;\n            htmlBoxes.appendChild(htmlBox);\n          } catch (error) {\n            handleError(error);\n          }\n        }\n\n        removeDuplicateBoxes();\n        updateButtonStates();\n      };\n\n      const toggleView = (view) => {\n        const licenseBoxes = document.getElementById(\"license-boxes\");\n        const htmlBoxes = document.getElementById(\"html-boxes\");\n        const showHtmlButton = document.getElementById(\"show-html\");\n        const showRichTextButton = document.getElementById(\"show-rich-text\");\n\n        if (view === \"html\") {\n          licenseBoxes.style.display = \"none\";\n          htmlBoxes.style.display = \"block\";\n          showHtmlButton.disabled = true;\n          showRichTextButton.disabled = false;\n        } else {\n          licenseBoxes.style.display = \"block\";\n          htmlBoxes.style.display = \"none\";\n          showHtmlButton.disabled = false;\n          showRichTextButton.disabled = true;\n        }\n      };\n\n      const generateUrl = () => {\n        const boxes = Array.from(\n          document.getElementById(\"license-boxes\").children\n        );\n        const ids = boxes.slice(0, MAX_URL_GENERATIONS).map((box) => box.id);\n\n        const urlParams = ids\n          .map((id, index) => `p${index}_fullname/${id}/p${index}_limit/1/`)\n          .join(\"\");\n\n        const url = `${DEFAULT_WIKI}authorssearch/${urlParams}`;\n        document.getElementById(\"url-form\").textContent = url;\n      };\n\n      const receiveRequest = (url) => {\n        const input = document.getElementById(\"license-input\");\n        const inputArray = [\n          ...new Set(input.value.split(\"\\n\").filter(Boolean)),\n        ];\n\n        if (!inputArray.includes(url)) {\n          inputArray.push(url);\n          input.value = inputArray.join(\"\\n\");\n        }\n\n        document.getElementById(\"license-boxes\").innerHTML = \"\";\n        document\n          .getElementById(\"license-form\")\n          .dispatchEvent(new Event(\"submit\"));\n      };\n\n      const extractPathFromUrl = (url) => {\n        try {\n          const urlObj = new URL(url);\n          let path = urlObj.pathname.slice(1);\n          const slashIndex = path.indexOf(\"/\");\n          return slashIndex > -1 ? path.substring(0, slashIndex) : path;\n        } catch (error) {\n          console.error(\"Error parsing URL:\", error);\n          return url;\n        }\n      };\n\n      const urlToId = (url) => url.replace(/[^a-z0-9-]/gi, \"_\");\n\n      const escapeHtml = (text) => {\n        const map = {\n          \"&\": \"&amp;\",\n          \"<\": \"&lt;\",\n          \">\": \"&gt;\",\n          '\"': \"&quot;\",\n          \"'\": \"&#039;\",\n        };\n        return text.replace(/[&<>\"']/g, (m) => map[m]);\n      };\n\n      const removeDuplicateBoxes = () => {\n        const boxes = Array.from(\n          document.getElementById(\"license-boxes\").children\n        );\n        const seen = new Set();\n\n        boxes.forEach((box) => {\n          if (seen.has(box.id)) {\n            box.remove();\n          } else {\n            seen.add(box.id);\n          }\n        });\n      };\n\n      const updateButtonStates = () => {\n        document.getElementById(\"show-html\").disabled = false;\n        document.getElementById(\"show-rich-text\").disabled = true;\n      };\n\n      const showError = (message) => {\n        const errorContainer = document.getElementById(\"error-container\");\n        errorContainer.innerHTML = `<h1 class=\"title\">Error:</h1><pre>${escapeHtml(\n          message\n        )}</pre>`;\n      };\n\n      const handleError = (error, source, lineno, colno) => {\n        const errorMessage =\n          `エラーが発生しました:\\n${error.message || error}\\n` +\n          (source ? `Source: ${source}\\n` : \"\") +\n          (lineno ? `Line: ${lineno}\\n` : \"\") +\n          (colno ? `Column: ${colno}\\n` : \"\");\n\n        showError(errorMessage);\n      };\n\n      // Initialize\n      window.isMainFrame = true;\n      window.receiveRequest = receiveRequest;\n      window.onerror = handleError;\n      setupEventListeners();\n    </script>\n  </body>\n</html>\n[[/html]]\n[[span class=\"loading_container\"]][[span class=\"loading\"]][[span]]L[[/span]][[span class=\"animate\"]]O[[/span]][[span class=\"animate\"]]A[[/span]][[span class=\"animate\"]]D[[/span]][[span]]I[[/span]][[span]]N[[/span]][[span]]G[[/span]][[/span]][[/span]]\n\n\n\n+* 警告\nURL共有はあくまで検査結果の共有のみに使用し，ライセンスを省略する目的で使用しないでください．\n\n+* 確認\n検索対象記事に「ライセンス: CC BY-SA 4.0」という表記が為された場合，その記事は[*https://creativecommons.org/licenses/by-sa/4.0/deed.ja CC BY-SA 4.0ライセンス]の下で提供されます．これに加えて，記事の作成者，著者，翻訳者，または編集者が著作権を有するコンテンツは，別段の定めがない限り[*https://creativecommons.org/licenses/by-sa/3.0/deed.ja CC BY-SA 3.0ライセンス]が付与されており，同ライセンスの下で利用することができます．\n\n「コンテンツ」とは，文章，画像，音声，音楽，動画，ソフトウェア，コードその他の情報のことをいいます．\n\n記事のディスカッションにアクセスしたうえで判断するようにしてください．\n\n\n\n+ 説明\n入力したページの作者名をCrom APIのデータに基づき検索します．\n\n翻訳記事に関しては原語版記事の情報を併記します．\n\n共著，改稿記事に関しては[[[attribution-metadata-jp|]]]に基づき表記されます．\n\n+ 使い方\n入力欄に作者名を調べたいページのURLを改行区切りで入力し，\"検索\"ボタンを押してください．\nURL以外にもPath({{@@http://scp-jp.wikidot.com/@@}}以下の部分)にも対応しています．\n\n\n\n+ その他\nわからない事やバグと思われる動作の報告はこのページのディスカッションにお願いします．バグ報告の場合は検索したページ（検索した語句をそのままコピペするのが望ましい）を記述していただけると幸いです．\n\n\n\n\n[[module ListPages fullname=\"@URL\" urlAttrPrefix=\"p0\" limit=\"@URL|0\"]]\n[[%%content{0}%%html]]\n<script>\nwindow.isSubFrame = true;\n\nArray.prototype.slice.call(parent.frames).forEach(function (frame) {\n    try {\n        if (frame.isMainFrame) {\n            frame.receiveRequest(\"%%fullname%%\");\n        }\n    } catch (error) {\n        if (!(error instanceof DOMException)) {\n            throw error;\n        }\n    }\n});\n\n</script>\n[[%%content{0}%%/html]]\n[[/module]]\n\n[[module ListPages fullname=\"@URL\" urlAttrPrefix=\"p1\" limit=\"@URL|0\"]]\n[[%%content{0}%%html]]\n<script>\nwindow.isSubFrame = true;\n\nArray.prototype.slice.call(parent.frames).forEach(function (frame) {\n    try {\n        if (frame.isMainFrame) {\n            frame.receiveRequest(\"%%fullname%%\");\n        }\n    } catch (error) {\n        if (!(error instanceof DOMException)) {\n            throw error;\n        }\n    }\n});\n\n</script>\n[[%%content{0}%%/html]]\n[[/module]]\n\n[[module ListPages fullname=\"@URL\" urlAttrPrefix=\"p2\" limit=\"@URL|0\"]]\n[[%%content{0}%%html]]\n<script>\nwindow.isSubFrame = true;\n\nArray.prototype.slice.call(parent.frames).forEach(function (frame) {\n    try {\n        if (frame.isMainFrame) {\n            frame.receiveRequest(\"%%fullname%%\");\n        }\n    } catch (error) {\n        if (!(error instanceof DOMException)) {\n            throw error;\n        }\n    }\n});\n\n</script>\n[[%%content{0}%%/html]]\n[[/module]]\n\n[[module ListPages fullname=\"@URL\" urlAttrPrefix=\"p3\" limit=\"@URL|0\"]]\n[[%%content{0}%%html]]\n<script>\nwindow.isSubFrame = true;\n\nArray.prototype.slice.call(parent.frames).forEach(function (frame) {\n    try {\n        if (frame.isMainFrame) {\n            frame.receiveRequest(\"%%fullname%%\");\n        }\n    } catch (error) {\n        if (!(error instanceof DOMException)) {\n            throw error;\n        }\n    }\n});\n\n</script>\n[[%%content{0}%%/html]]\n[[/module]]\n\n[[module ListPages fullname=\"@URL\" urlAttrPrefix=\"p4\" limit=\"@URL|0\"]]\n[[%%content{0}%%html]]\n<script>\nwindow.isSubFrame = true;\n\nArray.prototype.slice.call(parent.frames).forEach(function (frame) {\n    try {\n        if (frame.isMainFrame) {\n            frame.receiveRequest(\"%%fullname%%\");\n        }\n    } catch (error) {\n        if (!(error instanceof DOMException)) {\n            throw error;\n        }\n    }\n});\n\n</script>\n[[%%content{0}%%/html]]\n[[/module]]\n\n\n[[module css]]\n/*\nSmall CSS Loading Animation\nIzzy Skye @chrysokitty\nhttps://codepen.io/chrysokitty/pen/JoZyoW\nMIT License\n*/\n@keyframes spin {\n    0% {\n     top: 0;\n    }\n    50% {\n     top: 100%;\n     opacity: 0;\n    }\n    51% {\n     top: -100%;\n    }\n    100% {\n     top: 0;\n     opacity: 1;\n    }\n}\n@-webkit-keyframes spin {\n    0% {\n     top: 0;\n    }\n    50% {\n     top: 100%;\n     opacity: 0;\n    }\n    51% {\n     top: -100%;\n    }\n    100% {\n     top: 0;\n     opacity: 1;\n    }\n}\n\n#page-content>p {\n    position: relative;\n    width: 100%;\n}\niframe.html-block-iframe {\n    margin-bottom: 330px;\n}\niframe.html-block-iframe[style] {\n    margin: 0;\n}\n\niframe.html-block-iframe[style]+*+.loading_container {\n    z-index: -1;\n    opacity: 0;\n    background: white;\n}\n\n.loading_container {\n    padding: 230px 0;\n    display: block;\n    position: absolute;\n    width: 100%;\n    top: 0;\n    transition: opacity 300ms, z-index 500ms;\n    opacity: 1;\n    z-index: 0;\n}\n.loading {\n    position: relative;\n    width: 100%;\n    text-align: center;\n    display: block;\n    line-height: 2em;\n}\n.loading span {\n    color: #000;\n    font-size: 2em;\n}\n.loading .animate {\n    position: absolute;\n    top: 0;\n}\n.loading span:nth-child(2) {\n    color: #0088cc;\n    animation: spin 1.5s linear infinite;\n    -webkit-animation: spin 1.5s linear infinite;\n}\n.loading span:nth-child(3) {\n    margin-left: 25px;\n    color: #e23069;\n    animation: spin 1s linear infinite;\n    -webkit-animation: spin 1s linear infinite;\n}\n.loading span:nth-child(4) {\n    margin-left: 50px;\n    color: #F0E300;\n    animation: spin 1.25s linear infinite;\n    -webkit-animation: spin 1.25s linear infinite;\n}\n.loading span:nth-child(5) {\n    padding-left: 77px;\n}\n[[/module]]\n\n\n++* Change Log\n[[div class=\"code\"]]\nCreated by R74 2023\nMIT License: @@https://r74tech.com/license.txt@@\n\n[3.1.0] - 2025-01-25\n- Revised the logic for obtaining the original language version.\n- Reverted the display method of search results to the version prior to 2.1.0.\n\n[3.0.1] - 2025-01-22\n- Fixed the logic for obtaining the original language version.\n\n[3.0.0] - 2025-01-21\n- When displaying the original language version using URLs from branches other than JP, display only the author information.\n- When translating from one branch to another, accurately display the translator and original language version author in the original language version.\n\n[2.1.0] - 2024-09-12\n- Added ability to toggle display of creation year for both original and translated articles.\n\n[2.0.0] - 2023-07-09\n- Added URL sharing feature\n\n[1.2.1] - 2023-07-08\n- Added logic for deleting original articles.\n- Refactoring performed\n\n[1.2.0] - 2023-07-08\n- Added handling of deletion of original articles.\n\n[1.1.1] - 2023-07-08\n- Fixed RU branch URL to be current domain\n\n[1.1.0] - 2023-07-08\n- Added ability to hide original version information.\n- Fixed URL warnings and content of adult articles\n- Fixed display of non-original pages\n\n[1.0.0] - 2023-07-07\n- Initial release\n[[/div]]",
  "tags": [
    "jp",
    "外部連携",
    "管理"
  ],
  "author": "R74",
  "created_at": "2023-07-07T12:20:18+00:00",
  "updated_at": "2025-02-09T14:57:02+00:00",
  "rating": 32,
  "_site": "scp-jp",
  "_fullname": "authorssearch"
}
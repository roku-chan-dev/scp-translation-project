{
  "title": "SCP-CN-1919-J",
  "content": "[[module CSS]]\n.email-example .collapsible-block-folded a.collapsible-block-link {\n    animation: blink 0.8s ease-in-out infinite alternate;\n}\n@keyframes blink {\n    0% { color: transparent; }\n    50%, 100% { color: #b01; }\n}\n.email {border: solid 2px #000000; width: 88%; padding: 1px 15px; margin: 10px; box-shadow: 0 1px 3px rgba(0,0,0,.5)}\n.email-example a.collapsible-block-link {font-weight: bold;}\n.tofrom {margin-left: 10px; margin-top: 5px; padding: 1px 15px; border-left: solid 3px maroon}\n[[/module]]\n[[module css]]\n.page {\n    display: block;\n    overflow: hidden;\n    font-family: \"Monotype Corsiva\", \"Bradley Hand ITC\", sans-serif;\n    font-style: normal;\n\n    background-attachment: scroll;\n    background-clip: border-box;\n    background-color: transparent;\n    background-image: linear-gradient(to top ,rgb(202, 219, 228) 0%, rgb(231, 233, 220) 8%);\n    background-origin: padding-box;\n    background-position: 0px 8px;\n    background-repeat: repeat;\n    background-size: 100% 20px;\n\n    border: 1px solid #CCC;\n    border-radius: 10px;\n    padding: 10px 10px;\n    margin-bottom: 10px;\n\n    box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.2)\n    }\n.page p,\n.page ul {\n    line-height: 20px;\n    margin: 0;\n}\n[[/module]]\n\n[[module CSS]]\n.fakeprot .mailform-box .buttons{display:none;}\n.fakeprot + .collapsible-block .collapsible-block-link {padding: 0.1em 0.5em;text-decoration: none;background-color: #F4F4F4;border: 1px solid #AAA;color: #000;}\n.fakeprot + .collapsible-block .collapsible-block-link:hover {background-color: #DDD;color: #000;}\n.fakeprot + .collapsible-block .collapsible-block-link:active {background-color: #DDD;color: #000;}\n.fakeprot + .collapsible-block .collapsible-block-unfolded-link{margin:0.5em 0;text-align: center;}\n.fakeprot + .collapsible-block .collapsible-block-folded{margin:0.5em 0;text-align: center;}\n.fakeprot .passw input[type=text] {text-security:disc;-webkit-text-security:disc;-mox-text-security:disc;}\n.mailform-box td:first-child {width: 80px;}\n[[/module]]\n\n[[>]]\n[[module rate]]\n[[/>]]\n\n[[div class=\"page\"]]\n今天，我将尝试一项之前从未有人达成过的挑战，至今为止，SCP-CN-1919-J已被发现5年，尚未有人完成其项目文档的编写。这真的可能吗？真的能被达成吗？\n[[>]]\n[[module ListUsers users=\".\"]]\n%%title%%\n[[/module]]\n[[/>]]\n[[/div]]\n\n----\n[[=]]\n+ 基金会在线编辑系统\n[[/=]]\n\n[[div class=\"fakeprot\"]]\n[[module MailForm to=\"aaaa (DUMMY)\" button=\"\"]]\n# name\n * title: ID\n * default: 你的名字\n * type: text\n * rules:\n  * required: true\n  * maxLength:10\n  * minLength: 100\n[[/module]]\n[[div class=\"passw\"]]\n[[module MailForm to=\"aaaa (DUMMY)\" button=\"\"]]\n# affiliation\n * title: 密码\n * default: ・・・・・・・・・\n * rules:\n  * required: true\n  * maxLength:10\n  * minLength: 100\n[[/module]]\n[[/div]]\n[[/div]]\n[[collapsible show=\"开始编辑\" hide=\"停止编辑\"]]\n[[html]]\n<!DOCTYPE html>\n<html lang=\"en\" xmlns=\"\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>SCP-CN-1919-J</title>\n    <!-- SCP CSS样式 -->\n    <link rel=\"stylesheet\" href=\"https://d3g0gp89917ko0.cloudfront.net/v--b466fa696223/common--theme/base/css/style.css\">\n    <link rel=\"stylesheet\" href=\"https://sigma9.scpwikicn.com/cn/cn/sigma9_ch.min.css\">\n\n    <!-- SCP JavaScript -->\n    <script type=\"text/javascript\" src=\"https://d3g0gp89917ko0.cloudfront.net/v--b466fa696223/common--javascript/init.combined.js\"></script>\n    <script type=\"text/javascript\" src=\"https://d3g0gp89917ko0.cloudfront.net/v--b466fa696223/common--javascript/WIKIDOT.combined.js\"></script>\n\n    <style>\n        #typing {\n            overflow: hidden;\n        }\n\n        @keyframes cursorImg {\n            0%, 100% { opacity: 0; }\n            50% { opacity: 1; }\n        }\n\n        #typing::after {\n            content: \"\";\n            display: inline-block;\n            width: 2px;\n            height: 1em;\n            animation: cursorImg 1s infinite steps(1, start);\n            vertical-align: bottom;\n            background-color: black;\n        }\n    </style>\n\n\n</head>\n<body>\n<div id=\"typing\"></div>\n\n\n</body>\n<!-- Typer JavaScript-->\n<script>\nclass TextContent {\n    constructor(text, typingDelay = 150, lineDelay = 1000, deleteIndex = -1, shouldLineBreak = true) {\n        this.text = text;\n        this.typingDelay = typingDelay;\n        this.lineDelay = lineDelay;\n        this.deleteIndex = deleteIndex;\n        this.shouldLineBreak = shouldLineBreak;\n        this.nextOptions = [];\n        this.isEnd = false;\n        this.parseTextContent();\n    }\n\n    parseTextContent() {\n        const regex = /<[^>]*>|./g;\n        this.tokens = this.text.match(regex);\n    }\n\n    addNextOption(nextTextContent, probability) {\n        this.nextOptions.push({ content: nextTextContent, probability });\n    }\n\n    setEnd(){\n        this.isEnd = !this.isEnd;\n    }\n\n    getNext() {\n        if (this.nextOptions.length === 0) {\n            return null;\n        }\n\n        const random = Math.random();\n        let cumulativeProbability = 0;\n\n        for (const option of this.nextOptions) {\n            cumulativeProbability += option.probability;\n            if (random < cumulativeProbability) {\n                return option.content;\n            }\n        }\n\n        return this.nextOptions[this.nextOptions.length - 1].content; // Fallback in case of rounding errors\n    }\n\n    getText() {\n        return this.text;\n    }\n\n    getTypingDelay() {\n        return this.typingDelay;\n    }\n\n    getLineDelay() {\n        return this.lineDelay;\n    }\n\n    getDeleteIndex() {\n        return this.deleteIndex;\n    }\n\n    shouldBreakLine() {\n        return this.shouldLineBreak;\n    }\n}\n\nclass TypingEffect {\n    constructor(element, firstTextContent, timeoutCallback, useTimer) {\n        this.element = element;\n        this.currentTextContent = firstTextContent;\n        this.currentCharIndex = 0;\n        this.contentBuffer = '';\n        this.isDeleting = false;\n        this.timeoutCallback = timeoutCallback; // 用于重启全文的回调函数\n        this.isStopped = false; // 标记，用于判断是否停止当前打字过程\n        this.timerSet = !useTimer; // 计时器是否已经设置\n    }\n\n    startTyping() {\n        if (!this.timerSet) {\n            this.startTimer();\n            this.timerSet = true;\n        }\n        this.typeCharacter();\n    }\n\n    startTimer() {\n        this.resetTimer = setTimeout(() => {\n            console.log(\"3分钟内未触发终点，追加新的内容。\");\n            this.stopTyping();\n            this.timeoutCallback();\n        }, 180000); // 180,000 毫秒 = 3 分钟\n    }\n\n    stopTyping() {\n        this.isStopped = true;\n    }\n\n    typeCharacter() {\n        if (this.isStopped) return;\n\n        if (this.currentTextContent) {\n            const tokens = this.currentTextContent.tokens;\n\n            if (this.currentCharIndex < tokens.length && !this.isDeleting) {\n                const token = tokens[this.currentCharIndex];\n                this.contentBuffer += token;\n                this.currentCharIndex++;\n\n                this.updateElementContent();\n                setTimeout(() => this.typeCharacter(), Math.random() * this.currentTextContent.getTypingDelay() + 25);\n            } else if (this.currentTextContent.getDeleteIndex() !== -1 && this.currentCharIndex > this.currentTextContent.getDeleteIndex()) {\n                this.isDeleting = true;\n                setTimeout(() => this.deleteCharacter(), Math.random() * this.currentTextContent.getTypingDelay() + 25);\n            } else {\n                this.currentCharIndex = 0;\n                this.isDeleting = false;\n\n                // 如果当前文本是结束文本，则清除计时器\n                if (this.currentTextContent.isEnd) {\n                    console.log(\"提前抵达终点\")\n                    this.clearTimer();\n                }\n\n                setTimeout(() => {\n                    if (this.currentTextContent.shouldBreakLine()) {\n                        this.contentBuffer += '<br>';\n                    }\n                    this.currentTextContent = this.currentTextContent.getNext();\n                    this.updateElementContent();\n                    this.typeCharacter();\n                }, this.currentTextContent.getLineDelay());\n            }\n        }\n    }\n\n    deleteCharacter() {\n        if (this.isStopped) return; // 如果已停止，则不继续删除\n\n        const deleteIndex = this.currentTextContent.getDeleteIndex();\n\n        if (this.currentCharIndex > deleteIndex) {\n            const tokens = this.currentTextContent.tokens;\n\n            this.currentCharIndex--;\n            const token = tokens[this.currentCharIndex];\n\n            this.contentBuffer = this.contentBuffer.slice(0, -token.length);\n\n            this.updateElementContent();\n            setTimeout(() => this.deleteCharacter(), Math.random() * this.currentTextContent.getTypingDelay() + 50);\n        } else {\n            // 删除完成，进入下一段文本\n            this.currentCharIndex = 0;\n            this.isDeleting = false;\n            setTimeout(() => {\n                if (this.currentTextContent.shouldBreakLine()) {\n                    this.contentBuffer += '<br>';\n                }\n                this.currentTextContent = this.currentTextContent.getNext();\n                this.updateElementContent();\n                this.typeCharacter();\n            }, this.currentTextContent.getLineDelay());\n        }\n    }\n\n    updateElementContent() {\n        this.element.innerHTML = this.contentBuffer;\n    }\n\n    appendTyping(newEffect) {\n        this.stopTyping();\n        newEffect.startTyping();\n    }\n\n    clearTimer() {\n        if (this.resetTimer) {\n            clearTimeout(this.resetTimer);\n        }\n    }\n}\n\nfunction helpLink(textContentList){\n    for (let i = 0; i < textContentList.length - 1; i ++){\n        textContentList[i].addNextOption(textContentList[i+1], 1)\n    }\n}\n</script> <!-- https://eddy114514.github.io/htmlRepo/typerSim/typerSim.js-->\n\n<script>\nconst stdCtime = 50;\nconst stdLtime = 300;\nfunction extractNextOptions(from) {\n    const contentList = [];\n    const probList = [];\n\n    for (let i = 0; i < from.nextOptions.length; i++) {\n        contentList.push(from.nextOptions[i].content);\n        probList.push(from.nextOptions[i].probability);\n    }\n\n    return { contentList, probList };\n}\n\nfunction helpInsert(from, insert){\n    const { contentList, probList } = extractNextOptions(from);\n    helpAssign(insert, contentList, probList);\n    from.nextOptions = [{ content: insert, probability: 1 }];\n}\n\nfunction insertWProb(from, insert, prob) {\n    const { contentList, probList } = extractNextOptions(from);\n\n    helpAssign(insert, contentList, probList);\n\n    const totalExistingProb = probList.reduce((sum, p) => sum + p, 0);\n\n    if (prob < 0 || prob > 1) {\n        throw new Error(\"Probability 'prob' must be between 0 and 1.\");\n    }\n    if (totalExistingProb === 0) {\n        from.nextOptions = [{ content: insert, probability: prob }];\n        return;\n    }\n    const scale = (totalExistingProb - prob) / totalExistingProb;\n\n    if (scale < 0) {\n        throw new Error(\"The sum of existing probabilities is less than the new probability 'prob'.\");\n    }\n\n    let newNext = [];\n    for (let i = 0; i < contentList.length; i++) {\n        const adjustedProb = probList[i] * scale;\n        newNext.push({\n            content: contentList[i],\n            probability: adjustedProb\n        });\n    }\n\n    from.nextOptions = newNext;\n\n    from.addNextOption(insert, prob);\n}\n\n\nfunction helpAssign(from, toList, probList) {\n    let existingTotalProb = from.nextOptions.reduce((sum, option) => sum + option.probability, 0);\n\n    let newTotalProb = probList.reduce((sum, p) => sum + p, 0);\n\n    let totalProb = existingTotalProb + newTotalProb;\n\n    if (totalProb <= 1) {\n        for (let i = 0; i < toList.length; i++) {\n            from.addNextOption(toList[i], probList[i]);\n        }\n    } else {\n\n        let scale = 1 / totalProb;\n\n        for (let option of from.nextOptions) {\n            option.probability *= scale;\n        }\n\n        for (let i = 0; i < toList.length; i++) {\n            let adjustedProb = probList[i] * scale;\n            from.addNextOption(toList[i], adjustedProb);\n        }\n\n        let adjustedTotalProb = from.nextOptions.reduce((sum, option) => sum + option.probability, 0);\n        if (adjustedTotalProb !== 1) {\n            let correction = 1 - adjustedTotalProb;\n            // 将修正值加到第一个选项的概率上\n            from.nextOptions[0].probability += correction;\n        }\n    }\n}\n\nfunction helpConclude(fromList, to){\n    for(let i = 0; i < fromList.length; i++){\n        fromList[i].addNextOption(to, 1);\n    }\n}\n\n\nfunction helpConcludeWprob(fromList, to, probList){\n    for(let i = 0; i < fromList.length; i++){\n        fromList[i].addNextOption(to, probList[i]);\n    }\n}\n\nfunction createCorrectionSequence(original, corrections) {\n    let current = original;\n    corrections.forEach(correction => {\n        current.addNextOption(correction, 1);\n        current = correction;\n    });\n    return current;\n}\n\nfunction linkContents(contents) {\n    for (let i = 0; i < contents.length - 1; i++) {\n        contents[i].addNextOption(contents[i + 1], 1);\n    }\n}\n\n\n\n\nfunction reload1C(){\n    return new TextContent(\"今天，我将尝试一项之前从未有人达成过的挑战，\", stdCtime, stdLtime, -1, false);\n}\n\nfunction reload2C(){\n    return [new TextContent(\"至今为止，SCP-CN-1919-J已被发现5年，尚未有人完成其项目文档的编写。\", stdCtime,stdLtime,-1,false),\n        new TextContent(\"至今为止，SCP-CN-1919-J已被发现九年，尚未有人完成其项目文档的编写。\", stdCtime,stdLtime,-1,false),\n        new TextContent(\"至今为止，SCP-CN-1919已被发现5年，尚未有人完成其项目文档的编写。\", stdCtime,stdLtime,-1,false)];\n}\n\nfunction reload3C(){\n    return new TextContent(\"这真的可能吗？真的能被达成吗？<br>\", stdCtime,stdLtime,-1,true);\n}\n\nfunction reload11C(){\n    return new TextContent(\"今天，\", stdCtime, stdLtime, -1, false);\n}\n\nfunction itemSetup(){\n    let reload1 = reload1C();\n    let [reload2, reload21,reload22] = reload2C();\n    let reload3 = reload3C();\n    let reload4 = reload11C();\n\n    reload4.addNextOption(reload3, 1);\n\n    helpAssign(reload1,[reload2,reload21,reload22, reload3], [0.3,0.3,0.3, 0.1]);\n    helpConcludeWprob([reload2,reload21,reload22],reload3,[0.5,0.5,0.5]);\n\n    const item= new TextContent(\"<b>项目编号：</b> SCP-CN-1919-J<br>\", stdCtime,stdLtime, -1, true);\n    const item1 = new TextContent(\"<b>项目编号：</b> <br>\", stdCtime,stdLtime, -1, true);\n    const item2= new TextContent(\"<b>项目编号：</b> SCP-CN-1919-J<br>\", stdCtime,stdLtime, 7, true);\n\n\n    helpConclude([item1,item2], reload1);\n\n    return [item,item1,item2,reload1, reload2,reload3,reload4]\n}\n\nfunction objSetup(){\n    let reload1 = reload1C();\n    let [reload2, reload21,reload22] = reload2C();\n    let reload3 = reload3C();\n\n    let reload4 = reload11C();\n\n    reload4.addNextOption(reload3, 1);\n\n    helpAssign(reload1,[reload2,reload21,reload22, reload3], [0.3,0.3,0.3, 0.1]);\n    helpConcludeWprob([reload2,reload21,reload22],reload3,[0.5,0.5,0.5]);\n\n    const objClass = new TextContent(\"<b>项目等级：</b> Safe <br>\", stdCtime,stdLtime, -1, true);\n    const objClass1 = new TextContent(\"<b>项目等级：</b><br>\", stdCtime,stdLtime, -1, true);\n    const objClass2 = new TextContent(\"<b>项目等级：</b> Safe <br>\", stdCtime,stdLtime, 7, true);\n    const objClass3 = new  TextContent(\"<b>项目等级：</b> SCP-CN-1919-J <br>\", stdCtime,stdLtime,-1,true);\n\n\n    helpConclude([objClass1,objClass2], reload1);\n\n    return [objClass,objClass1,objClass2, objClass3, reload1, reload2,reload3, reload4]\n\n}\n\nfunction helpLink2(textContentList, prob){\n    for (let i = 0; i < textContentList.length - 1; i ++){\n        textContentList[i].addNextOption(textContentList[i+1], prob)\n    }\n}\n\n\nfunction getPeriod(){\n    return new TextContent(\"。\", stdCtime,500,0,false);\n}\n\nfunction getComma(){\n    return new TextContent(\"，\", stdCtime,500,0,false);\n}\n\nfunction helpAct(toList, probList){\n    let res = new TextContent(\" <br>\", 0, 0, -1, true);\n    for(let i = 0; i<toList.length; i++){\n        res.addNextOption(toList[i], probList[i]);\n    }\n    return res;\n}\n</script> <!-- https://eddy114514.github.io/htmlRepo/typerSim/typerHelper.js-->\n\n<script>\n    document.addEventListener(\"DOMContentLoaded\", () => {\n    const stdCtime = 50;\n    const stdLtime = 300;\n    const typingElement = document.getElementById(\"typing\");\n\n    const periodProb1 = new TextContent(\"。\", stdCtime,500,0,false);\n    const commaProb1 = new TextContent(\"，\", stdCtime, 500, 0, false);\n\n    const S = new TextContent(\" \", 100,100,-1,false);\n\n\n    let [i1,i2,i3,ir1, ir2, ir3, ir4] = itemSetup();\n    let [c1,c2,c3,c4,cr1, cr2, cr3, cr4] = objSetup();\n\n    const scp = new TextContent(\" \", 0, 0, -1, false);\n\n    const scProcedureFalse0 = new TextContent(\"<b>特殊收容措施：</b>SCP-CN-1919-J被收容于Site-CN-19的一个异常模因物品收容室中，基于项目的异常性质，任何对于SCP-CN-1919-J的实验需提前向项目主管或收容专家提交书面申请。\", stdCtime, stdLtime, -1, false);\n    const scProcedureFalse01 = new TextContent(\"<b>特殊收容措施：</b>SCP-CN-1919-J被收容于Site-CN-19的一个异常模因物品收容室中，基于项目的异常性质，任何对于SCP-CN-1919-J的实验需提前向项目主管或收容专家提交书面申请。\", stdCtime, stdLtime, 60, false);\n\n\n    const scProcedureFalse1 = new TextContent(\"任何相关实验在进行时，必须确保至少两名以上接受过异常模因对抗训练的安保人员在场\", stdCtime, stdLtime, 19, false);\n    const scPF1Correction1 = new TextContent(\"接受过异常模因对抗训练的安保人员在场，\", stdCtime, stdLtime, -1, false);\n\n    const scPC2 = new TextContent(\"且至少一名不在场的基金会人员知晓实验的存在，并实时地监控直至结束。\", stdCtime, stdLtime, -1, false);\n\n    const scProcedureFalse2 = new TextContent(\"且至少一名不在场的基金会人员知晓实验的存在，并实时地监控并等待实验的结束\",stdCtime,stdLtime, 28, false);\n    const scPF2Correction1 = new TextContent(\"且等待实验的结束。\", stdCtime,5000,0,false);\n    const scPF2Correction2 = new TextContent(\"并等待实验的\", stdCtime,3000,0,false);\n    const scPF2Correction3 = new TextContent(\"以及等待实验的结束。\", stdCtime,stdLtime,-1,false);\n    const scPF2Correction31 = new TextContent(\"直至结束。\", stdCtime,stdLtime, -1, false);\n    const scPF2Correction4 = new TextContent(\"MTF-天植-11“网络工程师”已投入使用，该机动特遣队将于全球范围内对SCP-CN-1919-J的相关信息传播进行限制。任何参与SCP-CN-1919-J相关实验的基金会人员于实验后有权采用最高B级的记忆强化措施，且无需经过站点主任审批。\", stdCtime,stdLtime, -1, false);\n\n    const scPF2Correction5 = new TextContent(\"必须注意的是，根据至今为止的试验记录，任何人员都不被建议于实验或接触项目的过程中采用任何记忆强化措施。<br>\", stdCtime, stdLtime, -1, true);\n    const scPF2Correction51 = new TextContent(\"必须注意的是，根据至今为止的试验记录，任何人员都不被建议于实验或接触项目的过程中采用任何记忆强化措施。<br>\", stdCtime, stdLtime, 7, true);\n\n\n\n    const scProcedureCorrect = new TextContent(\"<b>特殊收容措施：</b>SCP-CN-1919-J被收容于Site-CN-19的一个异常模因物品收容室中，基于项目的异常性质，任何对于SCP-CN-1919-J的实验需提前向项目主管或收容专家提交书面申请。任何相关实验在进行时，必须确保至少两名接受过异常模因对抗训练的安保人员在场，且至少一名不在场的基金会人员知晓实验的存在，并实时地监控以及等待实验的结束。MTF-天植-11“网络工程师”已投入使用，该机动特遣队将于全球范围内对SCP-CN-1919-J的相关信息传播进行限制。任何参与SCP-CN-1919-J相关实验的基金会人员于实验后有权采用最高B级的记忆强化措施，且无需经过站点主任审批。必须注意的是，根据至今为止的试验记录，任何人员都不被建议于实验或接触项目的过程中采用任何记忆强化措施。<br>\",150,1000, -1, true)\n\n\n\n    const description1 = new TextContent(\"<b>描述： </b>SCP-CN-1919-J是一类具备逆模因性质的异常模因实体，现阶段的研究认为项目不具备任何形式的智能。在大部分情况下，接触SCP-CN-1919-J的相关信息将导致人员产生可逆转的近似痴呆的症状，其中，大部分症状都集中表现为显著的记忆力退化\",stdCtime,stdLtime, 113, false);\n    const description1Correction = new TextContent(\"表现为显著的记忆力退化。受SCP-CN-1919-J影响的人员，下称SCP-CN-1919-J-A，将无法准确认知自身的行为状态以及短期内的行为历史，或失去短期内的记忆。\",stdCtime,stdLtime, -1, false);\n    const description11 = new TextContent(\"因此，至今为止撰写项目文档的尝试均以失败告终，与SCP-CN-1919-J相关的实验结果的准确性亦无法验证。<br>\",stdCtime,stdLtime, -1, true);\n\n    const description2 = new TextContent(\"目前，SCP-CN-1919-J的项目文档仍未被编写完成，数名项目研究组人员被指令独立地编写文档。\",stdCtime,stdLtime, -1, false);\n    const description21 = new TextContent(\"SCP-CN-1919-J的文档编写被认为是极其困难和耗时，且近似于无法完成的。\",stdCtime,stdLtime,-1,false);\n    const description22 = new TextContent(\"同时，考虑到SCP-CN-1919-J的异常性质，任何人员在查阅项目文档时都可能被项目影响，进而被转化为SCP-CN-1919-J-A。尽管该转化进程被确认为可逆转的，被转化人员的工作效率以及热情都将被极大程度地削弱。\",stdCtime,stdLtime,-1,true);\n    const description23 = new TextContent(\"因此，管理委员会仍在对是否停止SCP-CN-1919-J相关研究的议题进行讨论。\",stdCtime,stdLtime,-1,true);\n\n    description23.setEnd();\n\n    helpAssign(S, [i1,i2,i3], [0.7,0.15,0.15]);\n\n    helpAssign(i1, [c1,c2,c3, c4], [0.25,0.5,0.2, 0.05]);\n    helpAssign(ir3, [i1,c1,c2,c3,c4], [0.75,0.1,0.05,0.05, 0.05]);\n\n    helpAssign(c1,[scp,scProcedureCorrect], [0.95,0.05]);\n    helpAssign(c4,[scp,scProcedureCorrect], [0.95,0.05]);\n    helpAssign(cr3,[c1,scp,scProcedureCorrect], [0.75,0.2,0.05]);\n\n    // SCP area\n\n    helpAssign(scp, [scProcedureFalse0, scProcedureFalse01], [0.8,0.2]);\n    helpAssign(scProcedureFalse0, [scProcedureFalse1, ir4, cr2], [0.7,0.15, 0.15]);\n    helpAssign(scProcedureFalse01, [ir2, ir4, cr2, cr4], [0.25, 0.25, 0.25, 0.25]);\n\n    helpAssign(scProcedureFalse1, [scPF1Correction1, ir1, c2, cr3, cr2], [0.7,0.1, 0.05, 0.1, 0.05])\n    helpAssign(scPF1Correction1, [scPC2,scProcedureFalse2, cr1, i3, c3], [0.2,0.5,0.1, 0.1, 0.1]);\n    insertWProb(scPF1Correction1, commaProb1, 0.05);\n\n    helpAssign(scPC2, [scPF2Correction4, ir1], [0.7, 0.3]);\n    insertWProb(scPC2, periodProb1, 0.05);\n\n    helpAssign(scProcedureFalse2, [scPF2Correction1, cr1], [0.7,0.3]);\n    helpAssign(scPF2Correction1, [scPF2Correction2, cr2], [0.6,0.4]);\n    helpAssign(scPF2Correction2, [scPF2Correction3,scPF2Correction31, cr2, cr3], [0.4,0.3,0.2,0.1]);\n\n    helpAssign(scPF2Correction3, [scPF2Correction4, cr2, helpAct([scProcedureFalse0,scProcedureFalse01], [0.66, 0.33])], [0.6, 0.2, 0.3]);\n    helpAssign(scPF2Correction31, [scPF2Correction4, cr3, helpAct([scProcedureFalse0,scPF2Correction2], [0.5, 0.5])], [0.6, 0.2,0.2]);\n\n    helpAssign(scPF2Correction4, [scPF2Correction5, scPF2Correction51], [0.6, 0.4]);\n\n    scPF2Correction51.addNextOption(cr2, 1);\n\n    // description area\n\n    helpAssign(scProcedureCorrect, [description1, cr4], [0.8, 0.2]);\n    helpAssign(scPF2Correction5, [description1, cr1], [0.6, 0.4]);\n\n    helpAssign(description1,[description1Correction,description11, c2, c3, cr3, helpAct([scProcedureFalse1,scProcedureCorrect],[0.5,0.5])], [0.3, 0.3, 0.1,0.1,0.1, 0.1]);\n\n    helpAssign(description1Correction, [description2, cr1], [0.6,0.4]);\n    helpAssign(description11, [description2, cr2], [0.6,0.4])\n\n    helpAssign(description2, [description21, ir1, ir2, description1Correction, description1, description11, cr3], [0.4, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1]);\n    helpAssign(description21, [description22, ir1, ir2, ir3, description11, description2, cr3], [0.4, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1]);\n    helpAssign(description22, [description23, ir4, ir2, ir3, description2, description21, cr3], [0.4, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1]);\n\n\n\n    helpAssign(description23, [new TextContent(\" \", 0, 0, -1, true), S, ir3, cr3, i2, c2, i3, c3, cr2], [0.2,0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1]);\n\n\n    function endTyping(){\n        const end = new TextContent(\" \", 0, 0, -1, true);\n        const item= new TextContent(\"<b>项目编号：</b> SCP-CN-1919-J<br>\", stdCtime,stdLtime, -1, true);\n        const objClass = new TextContent(\"<b>项目等级：</b> Safe <br>\", stdCtime,stdLtime, -1, true);\n        const SCP = new TextContent(\"<b>特殊收容措施：</b>SCP-CN-1919-J被收容于Site-CN-19的一个异常模因物品收容室中，基于项目的异常性质，任何对于SCP-CN-1919-J的实验需提前向项目主管或收容专家提交书面申请。任何相关实验在进行时，必须确保至少两名接受过异常模因对抗训练的安保人员在场，且至少一名不在场的基金会人员知晓实验的存在，并实时地监控以及等待实验的结束。MTF-天植-11“网络工程师”已投入使用，该机动特遣队将于全球范围内对SCP-CN-1919-J的相关信息传播进行限制。任何参与SCP-CN-1919-J相关实验的基金会人员于实验后有权采用最高B级的记忆强化措施，且无需经过站点主任审批。必须注意的是，根据至今为止的试验记录，任何人员都不被建议于实验或接触项目的过程中采用任何记忆强化措施。<br>\",stdCtime,stdLtime, -1, true);\n        const description1 = new TextContent(\"<b>描述：</b>SCP-CN-1919-J是一类具备逆模因性质的异常模因实体，现阶段的研究认为项目不具备任何形式的智能。在大部分情况下，接触SCP-CN-1919-J的相关信息将导致人员产生可逆转的近似痴呆的症状，其中，大部分症状都表现为显著的记忆力退化。受SCP-CN-1919-J影响的人员，下称SCP-CN-1919-J-A，将无法准确认知自身的行为状态以及短期内的行为历史，或失去短期内的记忆。因此，至今为止撰写项目文档的尝试均以失败告终，与SCP-CN-1919-J相关的实验结果的准确性亦无法验证。<br>\",stdCtime,stdLtime, -1, true);\n        const description2 = new TextContent(\"目前，SCP-CN-1919-J的项目文档仍未被编写完成，数名项目研究组人员被指令独立地编写文档。SCP-CN-1919-J的文档编写被认为是极其困难和耗时，且近似于无法完成的。同时，考虑到SCP-CN-1919-J的异常性质，任何人员在查阅项目文档时都可能被项目影响，进而被转化为SCP-CN-1919-J-A。尽管该转化进程被确认为可逆转的，被转化人员的工作效率以及热情都将被极大程度地削弱。因此，管理委员会仍在对是否停止SCP-CN-1919-J相关研究的议题进行讨论。<br>\", stdCtime,stdLtime, -1, true);\n\n        const talk = new TextContent(\"很难想象！我居然完成了SCP-CN-1919-J的编写，我要立即向站点研究组报\", 150, 2000, -1, false);\n\n        talk.addNextOption(ir1, 1);\n\n        helpLink([end, item,objClass,SCP,description1,description2,talk]);\n        const EndEffect = new TypingEffect(typingElement, end, null, false);\n        typingEffect.appendTyping(EndEffect);\n    }\n\n    const typingEffect = new TypingEffect(typingElement, S, endTyping, true);\n    typingEffect.startTyping();\n});\n</script> <!-- https://eddy114514.github.io/htmlRepo/typerSim/typerAction.js-->\n</html>\n[[/html]]\n[[/collapsible]]",
  "tags": [
    "safe",
    "scp",
    "site-cn-19",
    "原创",
    "搞笑"
  ],
  "author": "Eddy_G",
  "created_at": "2024-10-22T18:50:42+00:00",
  "updated_at": "2024-11-13T02:19:46+00:00",
  "rating": 25,
  "_site": "scp-wiki-cn",
  "_fullname": "scp-cn-1919-j"
}
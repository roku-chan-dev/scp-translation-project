{
  "title": "もっと生物系SCPが読みた～い",
  "content": "[[include credit:start |mode=no-rate]]\n**タイトル:** もっと生物系SCPが読みた～い\n**作者:** [[*user Yukth]]\n**作成年:** 2024\n[[include credit:end]]\n\n[[*user Yukth]]の著者ページ。タイトルはこのサイトでの原動力。\n映画も好き([https://discord.com/channels/286871252784775179/1294860261450321981 財団公式Discordに自己収容済])\n[[collapsible show=\"2024/09 まともに活動してからちょうど1年！\" hide=\"次の1年でやりたいこと！\"]]\n# コンテストに参加しよう。人見知りしてる場合じゃないぞ。\n# [http://scp-jp.wikidot.com/wilson-s-wildlife-solutions-hub ウィルソンズ・ワイルドライフ・ソリューションズ] を翻訳しよう。\n# 6/9に[https://scp-wiki.wikidot.com/scp-7069 SCP-7069] を翻訳しよう。(リンクするtale含めるとマジで長ぇ！)\n# [http://scp-jp.wikidot.com/scp-anthology-hub 死のABC] を翻訳しよう。(生物学・生物系タグで) (どれも文章が長ぇ！)\n # [[[SCP-7091]]] Bは[[span class=\"ruby\"]]血液感染[[span class=\"rt\"]]Blood-Borne[[/span]][[/span]]のB- [[*user Marceline_Raynes]]\n # [[[SCP-7533]]] Nは[[span class=\"ruby\"]]ネオン[[span class=\"rt\"]]Neon[[/span]][[/span]]のN - [[*user Necrokitten]] - [[*user Billith]] - [[*user EmotionalEntropy]]\n # [[[SCP-7603]]] Pは[[span class=\"ruby\"]]以前は[[span class=\"rt\"]]Previously [[/span]][[/span]][[span class=\"ruby\"]]冥王星[[span class=\"rt\"]]Pluto[[/span]][[/span]]、[[span class=\"ruby\"]]今は[[span class=\"rt\"]] Presently[[/span]][[/span]][[span class=\"ruby\"]]桜草[[span class=\"rt\"]]Primrose[[/span]][[/span]]のP - [[*user fantem]] - [[*user opossumistic]]\n # [[[SCP-7660]]] Qは[[span class=\"ruby\"]]疑問[[span class=\"rt\"]] Questions[[/span]][[/span]]のQ - [[*user a random day]]\n # [[[SCP-7931]]] Xは[[span class=\"ruby\"]]異種移植[[span class=\"rt\"]] Xenotransplantation[[/span]][[/span]]のX - [[*user Arcydziegiel]]\n# \"[http://scp-jp.wikidot.com/system:page-tags/tag/%E7%94%9F%E7%89%A9%E5%AD%A6#pages 生物学]\" \"[http://scp-jp.wikidot.com/system:page-tags/tag/%E6%98%A0%E7%94%BB#pages 映画]\" タグで執筆しよう。(誰も書かないなら自分で書く。誰か書いてくれるなら自分では書かない)\n # ぶどう子とおなり神\n # マズローvsケンリック / 財団vs馬の国\n # 小児性異食症\n # ポテトチップス セクスデキュプルコンソメパンチ味\n # ヤギの瞳孔が四角い理由byオロバス\n # 脊柱寄生の金太郎あめ\n # 人生はリアリティショー（トゥルーマン・ショーでもサウスパークでも擦られたネタなのに、それでも君は書くのかい？）\n[[/collapsible]]\nテレキル未翻訳一覧 -- [[[http://scp-jp.wikidot.com/forum/t-13021924/scp-series-6|シリーズⅥ]]] / [[[http://scp-jp.wikidot.com/forum/t-14144488/scp-series-7|シリーズⅦ]]] / [[[http://scp-jp.wikidot.com/forum/t-15133014/scp-series-8|シリーズⅧ]]]\n##Transparent|いつか飽きて去ってしまうまでは真面目に活動しよう##\n[[tabview]]\n[[tab 記録]]\n\n[[=]]\n+++ 翻訳\n[[/=]]\n[[module ListPages created_by=\"Yukth\" separate=\"no\" tags=\"+en -フラグメント\" order=\"created\" category=\"*\" prependLine=\"||~ SCP ||~ Rating ||~ Comments ||~ Created ||~ Last Comment ||\"]]\n|| %%title_linked%% || %%rating%% || %%comments%% || %%created_at%% || %%commented_at%% ||\n[[/module]]\n[[=]]\n+++ SCPs\n[[/=]]\n[[module ListPages created_by=\"Yukth\" separate=\"no\" tags=\"+scp +jp\" order=\"created\" category=\"*\" prependLine=\"||~ SCP ||~ Rating ||~ Comments ||~ Created ||~ Last Comment ||\"]]\n|| %%title_linked%% || %%rating%% || %%comments%% || %%created_at%% || %%commented_at%% ||\n[[/module]]\n[[=]]\n+++ Tales\n[[/=]]\n[[module ListPages created_by=\"Yukth\" separate=\"no\" tags=\"tale +jp\" order=\"created\" category=\"*\" prependLine=\"||~ Tale ||~ Rating ||~ Comments ||~ Created ||~ Last Comment ||\"]]\n|| %%title_linked%% || %%rating%% || %%comments%% || %%created_at%% || %%commented_at%% ||\n[[/module]]\n[[=]]\n+++ Others / Delete\n[[/=]]\n[[module ListPages created_by=\"Yukth\" separate=\"no\" tags=\"-scp -author -tale -著者ページ -ハブ\" order=\"created\" category=\"*\" prependLine=\"||~ Others ||~ Rating ||~ Comments ||~ Created ||~ Last Comment ||\"]]\n|| %%title_linked%% || %%rating%% || %%comments%% || %%created_at%% || %%commented_at%% ||\n[[/module]]\n[[/tab]]\n[[tab 紹介]]\n\n++++ 箇条書きで自分の話\n* 2018年にサイト登録して1本翻訳投稿、5年ほぼ放置、2023年に再没入\n* The Cabin in the Woods → Lobotomy Corporation → SCP Foundation という絶妙に少数派っぽい流れ。\n* サイト登録から長いこと放置してたのでなんか微妙なポジション... 仲良くしてくれたら嬉しいです😂\n* [http://scp-jp.wikidot.com/scp-579-jp SCP-579-JP] / [http://scp-jp.wikidot.com/scp-587-jp SCP-587-JP] / [http://scp-jp.wikidot.com/scp-1283-jp SCP-1283-JP] あたりを最初に読んだ気がする。\"SCPらしさ\" の刷り込み完了、たまに読み替えそう。\n* 一方で [http://scp-jp.wikidot.com/taboo Taboo] / [http://scp-jp.wikidot.com/pitch-haven-hub Pitch Heaven] / [http://scp-jp.wikidot.com/scp-1000-jp SCP-1000-JP] あたりを読んで (よぐわがんね...) っていったん離れた覚えがある、もう一度挑戦しよう。\n* 戻ってきて初めに読んだ [http://scp-jp.wikidot.com/scp-5031 SCP-5031] で (面白れぇ！) って感銘を受けたので宝探し感覚で翻訳しようと思った。**ℳ𝒶𝓈𝓉ℯ𝓇𝓅𝒾ℯ𝒸ℯ** \n* [http://scp-jp.wikidot.com/integration-program-hub \"統合プログラム\"]って何だ？気になる\n* [http://scp-jp.wikidot.com/scp-3166-jp SCP-3166-JP] でも (面白れぇ！) ってなったので自分でも書き始めた。その時々の考えを吐き捨てる日記みたいなものが多い。\n* 読むのも書くのも慣れない、遅い。下書き批評も30分で読み切るので精一杯。それでも仲良くして嬉😂\n----\n++++ 本当に関係ない話\n* ProjecMoon作品の攻略Wiki (とは名ばかりのデータ置き場) ([https://lobotomy-corporation.fandom.com/ja/wiki/Lobotomy_Corporation%E6%94%BB%E7%95%A5_Wiki#.E7.B7.A8.E9.9B.86.E5.B8.8C.E6.9C.9B.E8.80.85.E3.83.BB.E8.A8.98.E4.BA.8B.E7.B7.A8.E9.9B.86.E8.80.85.E3.81.AE.E6.96.B9.E3.80.85.E3.81.B8 LC] / [https://library-of-ruina.fandom.com/ja/wiki/Library_Of_Ruina_%E6%94%BB%E7%95%A5_Wiki LOR] / [https://wikiwiki.jp/lcbwiki/ LCB]) でちょくちょく出現してるのでそっちで見かけたって人も仲良嬉😂\n* 上記コンテンツが化け物メイン→人間メインになって、\"not for me\" 成分が増えてきて、悲しくって、だからこっちで息抜きしてるのかもしれない。\n* 『オリジナルの化け物を考えよう』ってのを (独りで...) やってたので、SCP執筆もその延長上で楽しい。アイコンもその時の[https://lobotomy-corporation.fandom.com/ja/wiki/%E3%83%A6%E3%83%BC%E3%82%B6%E3%83%BC%E3%83%96%E3%83%AD%E3%82%B0:Yukth/%E7%A9%BA%E6%83%B3%EF%BC%9AO-02-34%E3%80%814%E7%BE%BD%E7%9B%AE%E3%81%AE%E9%BB%92%E3%81%84%E6%A3%AE%E3%81%AE%E4%BB%B2%E9%96%93 オリジナル化け物]から。誰かに評価されるって乙なもんですな (プラスでもマイナスでも)\n* 謎の文字列 [[span style=\"color:gold; background-color:darkred;\"]]Y544122193[[/span]] 仲😂\n----\n++++ 翻訳/自著\n[[collapsible show=\"翻訳が楽しかった作品振り返り(202309-202408)\"]]\n* [[[SCP-039]]] - モンキー・ブレイン\n * 人間ってなんだ？\n* [[[SCP-5650]]] - 角度でサケを切り分ける\n * サーモン=サーモンの定理ってなんだ？\n* [[[SCP-5338]]] - マルハナバチの早わざ\n * 集団遺伝学しゅき。[[*user PeppersGhost]]しゅきしゅき。熱入れすぎ。footnoteつけすぎ。\n* [[[SCP-5870]]] - 雨の中コアラを空に飛ばすには\n * 想像する絵面が可愛い。3色の意味が分かると特にエモい。\n* [[[SCP-3409]]] - チョコレート工場\n* [[[SCP-3974]]] - こんなにも甘く切なく\n * 異常性はまあまあスタンダード、インタビューログで筆が走った。\n* [[[SCP-6432]]] - 眼を喰む者\n* [[[working-dogs|Working Dogs]]]\n * 生きづらく生まれた人向け。コミック翻訳は枠の中に入れるので一苦労。\n* [[[SCP-5045]]] - すぐに慣れるよ\n* [[[SCP-6080]]] - カートゥーン・ネットワーク\n * ゲーム/カートゥーンものも好きかも。探索系も楽しいね。\n* [[[SCP-4969]]] - マジでクラゲのコンドーム\n * **6/9投稿**、このスケベ！\n* [[[but-a-dream|ただの夢 ハブ]]]\n * この作品群のテイストが好き。書き方タブ>執筆アドバイス の内容は自分の執筆スタイルに似てると思うので親近感。\n[[/collapsible]]\n\n[[collapsible show=\"自著はEnのNoに肖って採番(202309-202409)\"]]\n* [[[SCP-2419-JP]]] - ブロブ\n * [[[SCP-2419]]] - 笑う人たち リスペクト。巨大ウツボとの時代の間の話。研究者の敗北と哀愁。\n* [[[SCP-3127-JP]]] - 冒涜的、より理想的な\n * [[[SCP-3127]]] - 19歳のジェシカ・ランバートと異常な大きさの雌豚よ、永遠に リスペクト。財団に尊厳を踏みにじられた女性の話なら、自分で自分の尊厳を踏みにじるのはどうだろう？肥大化した自己意識を持て余した現代のSNSモンスターってたまにいるよね\n* [[[SCP-3943-JP]]] - 献##Transparent|身的な関係を##審##Transparent|判する##柱\n * [[[SCP-3943]]] - タコスマン リスペクト。執筆者にしか分からない、意味不明なもの・設定でも書いていいんだ。##Transparent|絶対に許さない##\n* [[[SCP-3969-JP]]] - I Dreamed a Dream\n * [http://scp-jp.wikidot.com/old:scp-3969 SCP-3969](削除) - ホフマンの悪夢 リスペクト。夢の世界を。自分が泣くために。映画ネタ満載で。描写も映像作品チックに。画像を足したい。(来年のうちに)\n[[/collapsible]]\n@@ @@\n[[/tab]]\n[[tab 翻訳/未翻訳_自動判定]]\n以下の自動判定コードは[[*user R74]]さんよりご協力いただきました。ありがとうございます！\n※\"翻訳済\"が\"未翻訳\"判定されるかもしれないことに留意。\n\n++++ SCP-EN\n||||||||||~ 押下して遷移 (読込時間大) ||\n|| [http://scp-jp-sandbox3.wikidot.com/draft:3846037-58-7591 0001-0999] || [http://scp-jp-sandbox3.wikidot.com/draft:3846037-57-63d1 1000-1999] || [http://scp-jp-sandbox3.wikidot.com/draft:3846037-56-ba6d 2000-2999] || [http://scp-jp-sandbox3.wikidot.com/draft:3846037-54-8559 3000-3999] || [http://scp-jp-sandbox3.wikidot.com/draft:3846037-54-aa21 4000-4999] ||\n|| [http://scp-jp-sandbox3.wikidot.com/draft:3846037-53-7552 5000-5999] || [http://scp-jp-sandbox3.wikidot.com/draft:3846037-51-b8e6 6000-6999] || [http://scp-jp-sandbox3.wikidot.com/draft:3846037-51-e4ac 7000-7999] || [http://scp-jp-sandbox3.wikidot.com/draft:3846037-50-2476 8000-8999] || 9000-9999 ||\n\n@@ @@\n\n++++ シリーズもの (押下して展開)\n----\n[[collapsible show=\"ウィルソンズ・ワイルドライフ・ソリューションズ\"]]\n\n[[html lang=\"en\"]]\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>SCP Table</title>\n    <script type=\"text/javascript\" src=\"https://gc.kis.v2.scr.kaspersky-labs.com/FD126C42-EBFA-4E12-B309-BB3FDD723AC1/main.js?attr=OylU24sF4TvfuyAqd4R-YtAQf3zdbbOhPHh3GMWhAaP9hngYroSNwxWY2WsDIiHQMteMisox1mAcYsJU2nn8s2-qTRiIetRttCciMsmVRsLBP6Lm3LwDl0ZlcP_tKCZgB-GETPY20gk1yJZ0VBKzGzlnrS9kWH3F6hUY79D3u80AeAhLnv-26G8r5007OE8JGljNf06IUBj8LXgKpY4nij1PVug7_Of6VwBsY_J7kEaln0QQThsJa2RYM2MSLB3USWDCw6QVk-5gKJnam-IoqQ\" charset=\"UTF-8\"></script><link rel=\"stylesheet\" crossorigin=\"anonymous\" href=\"https://gc.kis.v2.scr.kaspersky-labs.com/E3E8934C-235A-4B0E-825A-35A08381A191/abn/main.css?attr=aHR0cHM6Ly9jZG4uZGlzY29yZGFwcC5jb20vYXR0YWNobWVudHMvMTI3NTQwNTM5NjExODMzOTY4NS8xMjg1MTkzNjA3NTI3MjcyNTAwL2Nyb20uaHRtbD9leD02NmVlYTc1MSZpcz02NmVkNTVkMSZobT05NTBkN2U1NGM1MTJmZTg1ODA5ZGYyNDM1YjgzOTgzZWY0ODY1MzUyNjA2MGVlMDE0MmYzODI2NjU2YTBkNTFkJg\"/><script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery.tablesorter/2.31.3/js/jquery.tablesorter.min.js\"></script>\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/jquery.tablesorter/2.31.3/css/theme.default.min.css\">\n    <link href=\"http://d3g0gp89917ko0.cloudfront.net/v--4b961b7cc327/common--theme/base/css/style.css\" rel=\"stylesheet\">\n    <link href=\"https://scp-jp.github.io/files/util/main/styles/sigma-9.min.css\" rel=\"stylesheet\">\n</head>\n\n<body>\n    <div id=\"tableContainer\">\n        <p>Loading data...</p>\n    </div>\n    <script>\n        // GraphQL query\n        const query = `\n    fragment MiniCardPageFragment on Page {\n      url\n      wikidotInfo {\n        title\n        createdAt\n        rating\n        tags\n      }\n      alternateTitles {\n        title\n      }\n      attributions {\n        user {\n          name\n        }\n      }\n      translations {\n        url\n      }\n      translationOf {\n        url\n        translations {\n          url\n        }\n      }\n    }\n    query Search($filter: QueryPagesFilter!, $sort: QueryPagesSort, $after: ID, $before: ID, $first: Int, $last: Int) {\n      pages(\n        filter: $filter\n        sort: $sort\n        after: $after\n        before: $before\n        first: $first\n        last: $last\n      ) {\n        pageInfo {\n          hasPreviousPage\n          hasNextPage\n          startCursor\n          endCursor\n        }\n        edges {\n          node {\n            ...MiniCardPageFragment\n          }\n        }\n      }\n    }\n    `;\n\n        // Function to fetch data from the API\n        async function fetchData(after = null) {\n            const response = await fetch('https://api.crom.avn.sh/graphql', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    query,\n                    variables: {\n                        filter: {\n                            _and: [\n                                {\n                                    wikidotInfo: {\n                                        tags: {\n                                            eq: \"_wilsons-wildlife\"\n                                        }\n                                    }\n                                },\n                                {\n                                    url: {\n                                        startsWith: \"http://scp-wiki.wikidot.com/\"\n                                    }\n                                }\n                            ]\n                        },\n                        sort: {\n                            key: \"URL\",\n                            order: \"ASC\"\n                        },\n                        after: after,\n                        first: 75,\n                    }\n                }),\n            });\n\n            return response.json();\n        }\n\n        // Function to get all entries\n        async function getAllEntries() {\n            let allEntries = [];\n            let hasNextPage = true;\n            let after = null;\n\n            while (hasNextPage) {\n                const data = await fetchData(after);\n                allEntries = allEntries.concat(data.data.pages.edges);\n                hasNextPage = data.data.pages.pageInfo.hasNextPage;\n                after = data.data.pages.pageInfo.endCursor;\n            }\n\n            return allEntries;\n        }\n\n        // Function to create table row\n        function createTableRow(entry) {\n            const node = entry.node;\n            const isJpTranslationAvailable = hasJpTranslation(node);\n\n            const enLink = node.url;\n            const enPath = new URL(enLink).pathname;\n            const jpLink = `http://scp-jp.wikidot.com${enPath}`;\n            const rating = node.wikidotInfo.rating;\n            const author = node.attributions[0]?.user.name || 'Unknown';\n            const tags = node.wikidotInfo.tags;\n            const mainTags = tags.filter(tag => !['_cc', '_wilsons-wildlife', '_licensebox', 'goi-format'].includes(tag)).join(', ');\n            const alternateTitle = node.alternateTitles[0]?.title || '';\n\n            return `\n    <tr>\n      <td><a href=\"${enLink}\" target=\"_blank\">${enPath.slice(1)}</a></td>\n      <td>${alternateTitle}</td>\n      <td><a href=\"${jpLink}\" class=\"${isJpTranslationAvailable ? '' : 'newpage'}\" target=\"_blank\">${isJpTranslationAvailable ? '翻訳済' : '未翻訳'}</a></td>\n      <td>${rating}</td>\n      <td>${author}</td>\n      <td>${tags.length}</td>\n      <td>${mainTags}</td>\n    </tr>\n  `;\n        }\n\n        function hasJpTranslation(node) {\n            const jpInTranslations = node.translations?.some(t => t.url.includes('scp-jp'));\n            const jpInTranslationOf = node.translationOf?.translations?.some(t => t.url.includes('scp-jp'));\n            return jpInTranslations || jpInTranslationOf;\n        }\n\n\n        // Function to create and populate the table\n        function createTable(entries) {\n            const tableBody = entries.map(createTableRow).join('');\n\n            const table = `\n    <table id=\"scpTable\" class=\"tablesorter\">\n      <thead>\n        <tr>\n          <th>EN</th>\n          <th>メタタイトル</th>\n          <th>翻訳状況</th>\n          <th>ﾚｰﾄ</th>\n          <th>作者</th>\n          <th>ﾀｸﾞ数</th>\n          <th>主要ﾀｸﾞ</th>\n        </tr>\n      </thead>\n      <tbody>\n        ${tableBody}\n      </tbody>\n    </table>\n  `;\n\n            document.getElementById('tableContainer').innerHTML = table;\n\n            // Apply tablesorter with custom parser for En link\n            $(document).ready(function () {\n                $.tablesorter.addParser({\n                    id: 'scpPath',\n                    is: function (s) {\n                        return false;\n                    },\n                    format: function (s) {\n                        const match = s.match(/scp-(\\d+)/i);\n                        return match ? parseInt(match[1], 10) : s;\n                    },\n                    type: 'text'\n                });\n\n                $(\"#scpTable\").tablesorter({\n                    headers: {\n                        0: { sorter: 'scpPath' }\n                    }\n                });\n            });\n        }\n\n        // Main function to run everything\n        async function main() {\n            const entries = await getAllEntries();\n            createTable(entries);\n        }\n\n        // Run the main function when the page loads\n        window.onload = main;\n    </script>\n</body>\n\n[[/html]]\n[[/collapsible]]\n----\n[[collapsible show=\"死のABC\"]]\n\n[[html lang=\"en\"]]\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>SCP Table</title>\n    <script type=\"text/javascript\" src=\"https://gc.kis.v2.scr.kaspersky-labs.com/FD126C42-EBFA-4E12-B309-BB3FDD723AC1/main.js?attr=OylU24sF4TvfuyAqd4R-YtAQf3zdbbOhPHh3GMWhAaP9hngYroSNwxWY2WsDIiHQMteMisox1mAcYsJU2nn8s2-qTRiIetRttCciMsmVRsLBP6Lm3LwDl0ZlcP_tKCZgB-GETPY20gk1yJZ0VBKzGzlnrS9kWH3F6hUY79D3u80AeAhLnv-26G8r5007OE8JGljNf06IUBj8LXgKpY4nij1PVug7_Of6VwBsY_J7kEaln0QQThsJa2RYM2MSLB3USWDCw6QVk-5gKJnam-IoqQ\" charset=\"UTF-8\"></script><link rel=\"stylesheet\" crossorigin=\"anonymous\" href=\"https://gc.kis.v2.scr.kaspersky-labs.com/E3E8934C-235A-4B0E-825A-35A08381A191/abn/main.css?attr=aHR0cHM6Ly9jZG4uZGlzY29yZGFwcC5jb20vYXR0YWNobWVudHMvMTI3NTQwNTM5NjExODMzOTY4NS8xMjg1MTkzNjA3NTI3MjcyNTAwL2Nyb20uaHRtbD9leD02NmVlYTc1MSZpcz02NmVkNTVkMSZobT05NTBkN2U1NGM1MTJmZTg1ODA5ZGYyNDM1YjgzOTgzZWY0ODY1MzUyNjA2MGVlMDE0MmYzODI2NjU2YTBkNTFkJg\"/><script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery.tablesorter/2.31.3/js/jquery.tablesorter.min.js\"></script>\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/jquery.tablesorter/2.31.3/css/theme.default.min.css\">\n    <link href=\"http://d3g0gp89917ko0.cloudfront.net/v--4b961b7cc327/common--theme/base/css/style.css\" rel=\"stylesheet\">\n    <link href=\"https://scp-jp.github.io/files/util/main/styles/sigma-9.min.css\" rel=\"stylesheet\">\n</head>\n\n<body>\n    <div id=\"tableContainer\">\n        <p>Loading data...</p>\n    </div>\n    <script>\n        // GraphQL query\n        const query = `\n    fragment MiniCardPageFragment on Page {\n      url\n      wikidotInfo {\n        title\n        createdAt\n        rating\n        tags\n      }\n      alternateTitles {\n        title\n      }\n      attributions {\n        user {\n          name\n        }\n      }\n      translations {\n        url\n      }\n      translationOf {\n        url\n        translations {\n          url\n        }\n      }\n    }\n    query Search($filter: QueryPagesFilter!, $sort: QueryPagesSort, $after: ID, $before: ID, $first: Int, $last: Int) {\n      pages(\n        filter: $filter\n        sort: $sort\n        after: $after\n        before: $before\n        first: $first\n        last: $last\n      ) {\n        pageInfo {\n          hasPreviousPage\n          hasNextPage\n          startCursor\n          endCursor\n        }\n        edges {\n          node {\n            ...MiniCardPageFragment\n          }\n        }\n      }\n    }\n    `;\n\n        // Function to fetch data from the API\n        async function fetchData(after = null) {\n            const response = await fetch('https://api.crom.avn.sh/graphql', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    query,\n                    variables: {\n                        filter: {\n                            _and: [\n                                {\n                                    wikidotInfo: {\n                                        tags: {\n                                            eq: \"abcs-of-death\"\n                                        }\n                                    }\n                                },\n                                {\n                                    url: {\n                                        startsWith: \"http://scp-wiki.wikidot.com/\"\n                                    }\n                                }\n                            ]\n                        },\n                        sort: {\n                            key: \"URL\",\n                            order: \"ASC\"\n                        },\n                        after: after,\n                        first: 75,\n                    }\n                }),\n            });\n\n            return response.json();\n        }\n\n        // Function to get all entries\n        async function getAllEntries() {\n            let allEntries = [];\n            let hasNextPage = true;\n            let after = null;\n\n            while (hasNextPage) {\n                const data = await fetchData(after);\n                allEntries = allEntries.concat(data.data.pages.edges);\n                hasNextPage = data.data.pages.pageInfo.hasNextPage;\n                after = data.data.pages.pageInfo.endCursor;\n            }\n\n            return allEntries;\n        }\n\n        // Function to create table row\n        function createTableRow(entry) {\n            const node = entry.node;\n            const isJpTranslationAvailable = hasJpTranslation(node);\n\n            const enLink = node.url;\n            const enPath = new URL(enLink).pathname;\n            const jpLink = `http://scp-jp.wikidot.com${enPath}`;\n            const rating = node.wikidotInfo.rating;\n            const author = node.attributions[0]?.user.name || 'Unknown';\n            const tags = node.wikidotInfo.tags;\n            const mainTags = tags.filter(tag => !['_cc', 'abcs-of-death', '_licensebox'].includes(tag)).join(', ');\n            const alternateTitle = node.alternateTitles[0]?.title || '';\n\n            return `\n    <tr>\n      <td><a href=\"${enLink}\" target=\"_blank\">${enPath.slice(1)}</a></td>\n      <td>${alternateTitle}</td>\n      <td><a href=\"${jpLink}\" class=\"${isJpTranslationAvailable ? '' : 'newpage'}\" target=\"_blank\">${isJpTranslationAvailable ? '翻訳済' : '未翻訳'}</a></td>\n      <td>${rating}</td>\n      <td>${author}</td>\n      <td>${tags.length}</td>\n      <td>${mainTags}</td>\n    </tr>\n  `;\n        }\n\n        function hasJpTranslation(node) {\n            const jpInTranslations = node.translations?.some(t => t.url.includes('scp-jp'));\n            const jpInTranslationOf = node.translationOf?.translations?.some(t => t.url.includes('scp-jp'));\n            return jpInTranslations || jpInTranslationOf;\n        }\n\n\n        // Function to create and populate the table\n        function createTable(entries) {\n            const tableBody = entries.map(createTableRow).join('');\n\n            const table = `\n    <table id=\"scpTable\" class=\"tablesorter\">\n      <thead>\n        <tr>\n          <th>EN</th>\n          <th>メタタイトル</th>\n          <th>翻訳状況</th>\n          <th>ﾚｰﾄ</th>\n          <th>作者</th>\n          <th>ﾀｸﾞ数</th>\n          <th>主要ﾀｸﾞ</th>\n        </tr>\n      </thead>\n      <tbody>\n        ${tableBody}\n      </tbody>\n    </table>\n  `;\n\n            document.getElementById('tableContainer').innerHTML = table;\n\n            // Apply tablesorter with custom parser for En link\n            $(document).ready(function () {\n                $.tablesorter.addParser({\n                    id: 'scpPath',\n                    is: function (s) {\n                        return false;\n                    },\n                    format: function (s) {\n                        const match = s.match(/scp-(\\d+)/i);\n                        return match ? parseInt(match[1], 10) : s;\n                    },\n                    type: 'text'\n                });\n\n                $(\"#scpTable\").tablesorter({\n                    headers: {\n                        0: { sorter: 'scpPath' }\n                    }\n                });\n            });\n        }\n\n        // Main function to run everything\n        async function main() {\n            const entries = await getAllEntries();\n            createTable(entries);\n        }\n\n        // Run the main function when the page loads\n        window.onload = main;\n    </script>\n</body>\n\n[[/html]]\n[[/collapsible]]\n\n----\n\n[[collapsible show=\"ただの夢ハブ\"]]\n\n[[html lang=\"en\"]]\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>SCP Table</title>\n    <script type=\"text/javascript\" src=\"https://gc.kis.v2.scr.kaspersky-labs.com/FD126C42-EBFA-4E12-B309-BB3FDD723AC1/main.js?attr=OylU24sF4TvfuyAqd4R-YtAQf3zdbbOhPHh3GMWhAaP9hngYroSNwxWY2WsDIiHQMteMisox1mAcYsJU2nn8s2-qTRiIetRttCciMsmVRsLBP6Lm3LwDl0ZlcP_tKCZgB-GETPY20gk1yJZ0VBKzGzlnrS9kWH3F6hUY79D3u80AeAhLnv-26G8r5007OE8JGljNf06IUBj8LXgKpY4nij1PVug7_Of6VwBsY_J7kEaln0QQThsJa2RYM2MSLB3USWDCw6QVk-5gKJnam-IoqQ\" charset=\"UTF-8\"></script><link rel=\"stylesheet\" crossorigin=\"anonymous\" href=\"https://gc.kis.v2.scr.kaspersky-labs.com/E3E8934C-235A-4B0E-825A-35A08381A191/abn/main.css?attr=aHR0cHM6Ly9jZG4uZGlzY29yZGFwcC5jb20vYXR0YWNobWVudHMvMTI3NTQwNTM5NjExODMzOTY4NS8xMjg1MTkzNjA3NTI3MjcyNTAwL2Nyb20uaHRtbD9leD02NmVlYTc1MSZpcz02NmVkNTVkMSZobT05NTBkN2U1NGM1MTJmZTg1ODA5ZGYyNDM1YjgzOTgzZWY0ODY1MzUyNjA2MGVlMDE0MmYzODI2NjU2YTBkNTFkJg\"/><script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery.tablesorter/2.31.3/js/jquery.tablesorter.min.js\"></script>\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/jquery.tablesorter/2.31.3/css/theme.default.min.css\">\n    <link href=\"http://d3g0gp89917ko0.cloudfront.net/v--4b961b7cc327/common--theme/base/css/style.css\" rel=\"stylesheet\">\n    <link href=\"https://scp-jp.github.io/files/util/main/styles/sigma-9.min.css\" rel=\"stylesheet\">\n</head>\n\n<body>\n    <div id=\"tableContainer\">\n        <p>Loading data...</p>\n    </div>\n    <script>\n        // GraphQL query\n        const query = `\n    fragment MiniCardPageFragment on Page {\n      url\n      wikidotInfo {\n        title\n        createdAt\n        rating\n        tags\n      }\n      alternateTitles {\n        title\n      }\n      attributions {\n        user {\n          name\n        }\n      }\n      translations {\n        url\n      }\n      translationOf {\n        url\n        translations {\n          url\n        }\n      }\n    }\n    query Search($filter: QueryPagesFilter!, $sort: QueryPagesSort, $after: ID, $before: ID, $first: Int, $last: Int) {\n      pages(\n        filter: $filter\n        sort: $sort\n        after: $after\n        before: $before\n        first: $first\n        last: $last\n      ) {\n        pageInfo {\n          hasPreviousPage\n          hasNextPage\n          startCursor\n          endCursor\n        }\n        edges {\n          node {\n            ...MiniCardPageFragment\n          }\n        }\n      }\n    }\n    `;\n\n        // Function to fetch data from the API\n        async function fetchData(after = null) {\n            const response = await fetch('https://api.crom.avn.sh/graphql', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    query,\n                    variables: {\n                        filter: {\n                            _and: [\n                                {\n                                    wikidotInfo: {\n                                        tags: {\n                                            eq: \"but-a-dream\"\n                                        }\n                                    }\n                                },\n                                {\n                                    url: {\n                                        startsWith: \"http://scp-wiki.wikidot.com/\"\n                                    }\n                                }\n                            ]\n                        },\n                        sort: {\n                            key: \"URL\",\n                            order: \"ASC\"\n                        },\n                        after: after,\n                        first: 75,\n                    }\n                }),\n            });\n\n            return response.json();\n        }\n\n        // Function to get all entries\n        async function getAllEntries() {\n            let allEntries = [];\n            let hasNextPage = true;\n            let after = null;\n\n            while (hasNextPage) {\n                const data = await fetchData(after);\n                allEntries = allEntries.concat(data.data.pages.edges);\n                hasNextPage = data.data.pages.pageInfo.hasNextPage;\n                after = data.data.pages.pageInfo.endCursor;\n            }\n\n            return allEntries;\n        }\n\n        // Function to create table row\n        function createTableRow(entry) {\n            const node = entry.node;\n            const isJpTranslationAvailable = hasJpTranslation(node);\n\n            const enLink = node.url;\n            const enPath = new URL(enLink).pathname;\n            const jpLink = `http://scp-jp.wikidot.com${enPath}`;\n            const rating = node.wikidotInfo.rating;\n            const author = node.attributions[0]?.user.name || 'Unknown';\n            const tags = node.wikidotInfo.tags;\n            const mainTags = tags.filter(tag => !['_cc', 'but-a-dream', '_licensebox'].includes(tag)).join(', ');\n            const alternateTitle = node.alternateTitles[0]?.title || '';\n\n            return `\n    <tr>\n      <td><a href=\"${enLink}\" target=\"_blank\">${enPath.slice(1)}</a></td>\n      <td>${alternateTitle}</td>\n      <td><a href=\"${jpLink}\" class=\"${isJpTranslationAvailable ? '' : 'newpage'}\" target=\"_blank\">${isJpTranslationAvailable ? '翻訳済' : '未翻訳'}</a></td>\n      <td>${rating}</td>\n      <td>${author}</td>\n      <td>${tags.length}</td>\n      <td>${mainTags}</td>\n    </tr>\n  `;\n        }\n\n        function hasJpTranslation(node) {\n            const jpInTranslations = node.translations?.some(t => t.url.includes('scp-jp'));\n            const jpInTranslationOf = node.translationOf?.translations?.some(t => t.url.includes('scp-jp'));\n            return jpInTranslations || jpInTranslationOf;\n        }\n\n\n        // Function to create and populate the table\n        function createTable(entries) {\n            const tableBody = entries.map(createTableRow).join('');\n\n            const table = `\n    <table id=\"scpTable\" class=\"tablesorter\">\n      <thead>\n        <tr>\n          <th>EN</th>\n          <th>メタタイトル</th>\n          <th>翻訳状況</th>\n          <th>ﾚｰﾄ</th>\n          <th>作者</th>\n          <th>ﾀｸﾞ数</th>\n          <th>主要ﾀｸﾞ</th>\n        </tr>\n      </thead>\n      <tbody>\n        ${tableBody}\n      </tbody>\n    </table>\n  `;\n\n            document.getElementById('tableContainer').innerHTML = table;\n\n            // Apply tablesorter with custom parser for En link\n            $(document).ready(function () {\n                $.tablesorter.addParser({\n                    id: 'scpPath',\n                    is: function (s) {\n                        return false;\n                    },\n                    format: function (s) {\n                        const match = s.match(/scp-(\\d+)/i);\n                        return match ? parseInt(match[1], 10) : s;\n                    },\n                    type: 'text'\n                });\n\n                $(\"#scpTable\").tablesorter({\n                    headers: {\n                        0: { sorter: 'scpPath' }\n                    }\n                });\n            });\n        }\n\n        // Main function to run everything\n        async function main() {\n            const entries = await getAllEntries();\n            createTable(entries);\n        }\n\n        // Run the main function when the page loads\n        window.onload = main;\n    </script>\n</body>\n\n[[/html]]\n[[/collapsible]]\n@@ @@\n[[/tab]]\n[[/tabview]]\n\nおススメしたい生物系記事 (自著/他著問わず) があればディスカッションにどうぞ\n##Transparent|確かな+1票がここにいるぞ！##",
  "tags": [
    "jp",
    "著者ページ"
  ],
  "author": "Yukth",
  "created_at": "2024-09-26T21:31:04+00:00",
  "updated_at": "2024-11-01T20:44:38+00:00",
  "rating": 0,
  "_site": "scp-jp",
  "_fullname": "author:yukth"
}
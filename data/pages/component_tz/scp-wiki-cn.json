{
  "title": "时区转换器",
  "content": "[[iftags +组件]]\n\n[[include :scp-wiki-cn:component:croqstyle]]\n\n[[module CSS]]\ntd { vertical-align: top; }\n.options table.wiki-content-table td { border: none; padding: 0.7em 1em; }\n[[/module]]\n\n[[div style=\"border: 1px solid #ddd; padding: 1em;\"]]\n+ 这是什么\n\n一个可以显示读者所在时区的给定时间和/或日期的组件。\n\n读者的时区将被自动计算。你所需要作的就是将你所需时间的时区输入到页面之中。\n\n如果你的时区能够匹配读者的时区，那么该组件将不会出现。这是故意的！如果读者需要的话它还是会出现的。\n\n请注意以下夏令时制为例外：当“EST”[[footnote]]**译注：**即美国东部时间，为西五区时间，比北京时间慢 13 个小时。[[/footnote]]与“EDT”[[footnote]]**译注：**即美国东部夏令时间，为西四区时间，比北京时间慢 12 个小时。[[/footnote]]被输入到该组件中时，其将会转换为美国/纽约时区，然后再根据一年中的时间转换为 EST 或者 EDT。“BST”[[footnote]]**译注：**即英国夏令时间，为东一区时间，比北京时间慢 7 个小时。[[/footnote]]将会转换为欧洲/伦敦时区，然后再根据一年中的时间转换为 GMT[[footnote]]**译注：**即格林尼治标准时间，比北京时间慢 8 个小时。[[/footnote]] 或者 BST。为避免此种混乱，**请避免使用非常依赖夏令时的时区！**使用如 UTC[[footnote]]**译注：**即协调世界时，比北京时间慢 8 个小时。[[/footnote]] 这样的静态时区。\n\n[[=]]\n[http://scpsandboxcn.wikidot.com/tz-demo >>> 演示 <<<]\n[[/=]]\n\n+ 用法\n\n将以下代码复制到你的页面中：\n\n[[div class=\"code\"]]\n##blue|**[[include :scp-wiki-cn:component:tz**##\n##blue|**|**## ##green|time####blue|**=**##18:00\n##blue|**|**## ##green|tz####blue|**=**##UTC\n##blue|**]]**##\n[[/div]]\n\n以//斜体//所示的设置为//可选项//。其它所有设置均为必填。如果你省略了一个//可选//设置，那么它将会使用其默认值。如果你省略了一个非可选的设置，那么就不要期望组件能够正常运作了。\n\n若需省略设置，仅需将其完全留空即可。\n\n[[div class=\"options\"]]\n|| **time** || 事件所发生的时间。这个时间应该是两个数字，后跟一个半角冒号“:”，再后跟两个数字。“18:30”是可以的。“1830”、“下午 6:30”以及“傍晚六点三十分”是不可以的。 ||\n|| **//tz//** _\n//（可选）// || 你所输入的时间所在的的时区。 _\n//默认值：UTC// ||\n|| **//date//** _\n//（可选）// || 以 ISO 格式 YYYY-MM-DD 输入的事件日期。 _\n日期可能可以在某些时候被用以计算“直至某时”之类的事情，但是现在还没有这么用过。 _\n//默认值：今天// ||\n|| **//text_before//** _\n//（可选）// || 在被转换的时间之前的文本。 _\n//默认值：\"${time} ${tz} 即 \"// ||\n|| **//text_after//** _\n//（可选）// || 在被转换的时间之后的文本。 _\n//默认值：\"。\"// ||\n[[/div]]\n\n[[/div]]\n\n-----\n\n[[/iftags]]\n\n[[div_ class=\"timezone-thingy\"]]\n[[html]]\n<head>\n  <script type=\"text/javascript\">\n    let date = \"{$date}\";\n    let time = \"{$time}\";\n    let tz = \"{$tz}\";\n    let text_before = \"{$text_before}\";\n    let text_after = \"{$text_after}\";\n  </script>\n  <script src=\"https://scp-wiki.wdfiles.com/local--files/component%3Atz/moment.min.js\"></script>\n  <script src=\"https://scp-wiki.wdfiles.com/local--files/component%3Atz/moment-timezone-with-data-10-year-range.min.js\"></script>\n  <script src=\"https://scp-wiki-cn.wikidot.com/local--code/component%3Atz/1\"></script>\n  <link href=\"https://d3g0gp89917ko0.cloudfront.net/v--edac79f846ba/common--theme/base/css/style.css\" rel=\"stylesheet\">\n  <link href=\"https://scp-wiki.wikidot.com/local--code/component%3Atheme/1\" rel=\"stylesheet\">\n  <link href=\"https://scp-wiki.wikidot.com/local--code/component%3Atz/3\" rel=\"stylesheet\">\n</head>\n<body>\n  <div id=\"wrapper\">\n    <p><img src=\"https://scp-wiki.wdfiles.com/local--files/component%3Atz/world.png\"><img src=\"https://scp-wiki.wdfiles.com/local--files/component%3Atz/clock.png\"> <span id=\"text_before\"></span><span id=\"text_converted\"></span><span id=\"text_after\"></span></p>\n  </div>\n</body>\n[[/html]]\n[[/div]]\n\n[[module CSS]]\n@import url(https://scp-wiki.wikidot.com/local--code/component%3Atz/2);\n[[/module]]\n\n[[iftags +组件]]\n~~~~~\n\n-----\n\n+ 代码库\n\n++ 转换器的 HTML 结构\n\n很不幸它被掩盖在源代码之中——你得自己去挖掘了！\n\n++ 用以运作转换器的 JS\n[[code type=\"javascript\"]]\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n  console.log(date);\n  date = date === \"{$date}\" ? moment().format(\"Y-MM-DD\") : date;\n  console.log(date);\n  tz = tz === \"{$tz}\" ? \"UTC\" : tz;\n  tz = tz === \"EST\" ? \"America/New_York\" : tz;\n  tz = tz === \"EDT\" ? \"America/New_York\" : tz;\n  tz = tz === \"BST\" ? \"Europe/London\" : tz;\n\n  given_time = moment.tz(date + \" \" + time, tz);\n  tz = given_time.format(\"z\");\n\n  text_before = text_before === \"{$text_before}\" ? \"${time} ${tz} 即 \" :\ntext_before;\n  text_after = text_after === \"{$text_after}\" ? \"。\" : text_after;\n  // eval is used here to convert text strings to template literals\n  // variables of the form ${var} will be parsed\n  text_before = eval('`' + text_before + '`');\n  text_after = eval('`' + text_after + '`');\n\n  user_tz = Intl.DateTimeFormat().resolvedOptions().timeZone;\n  converted_time = given_time.tz(user_tz);\n  converted_time_tz = converted_time.format(\"HH:mm z\");\n\n  console.log(given_time);\n  console.log(converted_time);\n\n  document.getElementById(\"text_before\").textContent = text_before;\n  document.getElementById(\"text_converted\").textContent = converted_time_tz;\n  document.getElementById(\"text_after\").textContent = text_after;\n\n  if (converted_time.format(\"z\") === tz) {\n    // e.g. displaying an EST time to an EST user - that's pointless!\n    document.documentElement.style.display = 'none';\n  }\n});\n[[/code]]\n\n++ 用以修改输出外部样式的 CSS\n[[code type=\"css\"]]\n.timezone-thingy { margin-top: -0.5rem; }\n.timezone-thingy iframe { border: none; max-height: 3.5rem; }\n[[/code]]\n\n++ 用以修改输出内部样式的 CSS\n[[code type=\"css\"]]\n#wrapper {\n  padding: 0.5rem !important;\n  border: 1px solid #660000;\n  border-radius: 10px;\n  box-shadow: 0 2px 6px rgba(102,0,0,.5);\n  background: white;\n  margin: 0.5rem 0;\n  display: inline-block;\n  position: relative;\n  left: 50%;\n  transform: translateX(-50%);\n}\n#wrapper p {\n  margin: 0;\n}\n#wrapper img {\n  height: 1rem;\n  vertical-align: text-top;\n}\n[[/code]]\n\n[[/iftags]]",
  "tags": [
    "组件"
  ],
  "author": "hoah2333",
  "created_at": "2021-11-26T18:21:27+00:00",
  "updated_at": "2021-11-26T18:27:37+00:00",
  "rating": 4,
  "_site": "scp-wiki-cn",
  "_fullname": "component:tz"
}
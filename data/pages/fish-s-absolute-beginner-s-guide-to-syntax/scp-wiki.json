{
  "title": "Fish's Absolute Beginner's Guide To Syntax",
  "content": "[[include :scp-wiki:component:toggle-sidebar]]\n[[module css]]\n#page-title{display:none}\n.hover:hover{background:pink}\n.kill a{color:blue}\n.killa a{color:purple}\n.happy {color: blue;}\n.happy:before {content: \"HI! \";}\n.happy:after {content: \" ACAB!\";}\n[[/module]]\n\n[[>]]\n[[module rate]]\n[[/>]]\n[[include :scp-wiki:component:author-label-source start=--\n|name=Fish^12]]\nSecond essay. And this is my [http://scp-wiki.wikidot.com/hotfish| Author Page]!\n[[include :scp-wiki:component:author-label-source end=--]]\n\nHey kid.\n\nI’m [[*user Fish^12]]. Wanna learn CSS? This is the second installment of my CSS series. Make sure you're [https://scp-wiki.wikidot.com/fish-s-absolute-beginner-s-guide-to-css properly caught up] before reading this guide.\n\nThis time, we're going to be talking about the more technical aspects of CSS. Very boring stuff, I know, but you're gonna need to know this stuff before we can move on to the cool shit, like making themes.\n\n**Preface:** This guide is intended for beginners. If you know how selectors, classes, and :root works, you can downvote this guide.\n\n@@ @@\n\n@@ @@\n\n[[=]]\n+ THE SYNTAX\n[[/=]]\n\nLast time, we covered the period in the syntax of a div. There's also a variant which uses the octothorpe (#), or uses nothing at all. Observe.\n\n[[div style=\"border:2px dashed grey; padding:0 1em;margin:auto;line-height:1.1;\"]]\n\n#page-title {\n@@ @@ @@ @@ @@ @@ text-indent: 1em;\n}\n\n[[/div]]\n\nThis is an ID. The octothorpe specifies an element that should //only// exist once per page, which also means that ID will override class. Generally speaking, you're not going to be making these things; instead, you're mostly going to be modifying them.\n\nExamples of other IDs.\n\n* #header\n* #top-bar\n* #side-bar\n* #toc\n* #footer\n* #license-area\n\nIf you're feeling like a detective, you can kind of guess what each ID is targeting based on its name. If you search around with inspect, you're bound to find some of these.\n\n[[div style=\"border:2px dashed grey; padding:0 1em;margin:auto;line-height:1.1;\"]]\n\n.blockquote {\n@@ @@ @@ @@ @@ @@ text-indent: 1em;\n}\n\n[[/div]]\n\nThis is a class. Class is generally used multiple times in a single page, which allows you to easily stylize multiple elements simultaneously. We've covered how to make your own in the previous essay.\n\nExamples of other classes. It's a bit more difficult to guess what each of these will do just based off of its name, so I will be elaborating on their use.\n\n* .owindow — Stylizes the pop up window when you click on someone's user profile, when you experience an error, or when you're saving your article.\n* .page-options-bottom — All the options at the bottom of the page, like Edit and History.\n* .yui-navset — Handles some of the formatting for tabs.\n* .page-widget-box — Stylizes the small boxes in the rating module.\n\n[[div style=\"border:2px dashed grey; padding:0 1em;margin:auto;line-height:1.1;\"]]\n\np {\n@@ @@ @@ @@ @@ @@ text-indent: 1em;\n}\n\n[[/div]]\n\n[[div style=\"text-indent:1em;\"]]\n\"Hi! I'm an indented paragraph.\"\n[[/div]]\n\nThis one is a tag which targets a specific type of element, in this case, p is short for paragraph. This is basically targeting each time you've got a line of text. Very helpful for stuff like adding a text-indent to the beginning of each paragraph for that novel look.\n\nExamples of other tags. I will also be elaborating on their use.\n\n* a — Stylizes links and other interactable text.\n* h1 — These are the header titles you can make with +. Goes all the way up to h5.\n* tr — Stands for table row. The table element also has td (data cells) and th (header cells), among others.\n* ul — Stands for unordered list. Used for creating lists. There's also ol (ordered list).\n* li — Stands for list item. This is the listed item that works with ul and ol.\n\n**Note:** You'll also find these tags on other sites; they are built in to HTML/CSS and their naming conventions are not specific to Wikidot. You can't make your own tags, unfortunately.\n\n----\n\nRemember how I said that the crux of these guides will be making a theme for yourself? What I just told you are all classes and selectors that are part of the base Sigma-10 theme. When you modify them, you'll directly affect the page.\n\nThis is a step towards making your own theme.\n\n@@ @@\n\n@@ @@\n\n[[=]]\n+ THE SYNTAX STRIKES BACK\n[[/=]]\n\nCSS has a powerful supplement to the standard classes called pseudo-classes. They generally add a lot of functionality/specificity beyond what standard selectors are capable of doing in a concise manner.\n\nPseudo-classes come in many flavors but we're only gonna be focusing on one particular pseudo-class today; it is the tool for setting up themes in a concise, organized, and consistent manner.\n\n[[div style=\"border:2px dashed grey; padding:0 1em;margin:auto;line-height:1.1;\"]]\n\n:root {\n@@ @@ @@ @@ @@ @@ -[[span style=\"display:none\"]]|[[/span]]-carbon: #323232;\n}\n\n.blockquote {\n@@ @@ @@ @@ @@ @@ background: var(-[[span style=\"display:none\"]]|[[/span]]-carbon);\n}\n\n[[/div]]\n\nThe :root pseudo-class allows you to set up custom variables for easy access. For example, in this case, we declared that the variable -[[span style=\"display:none\"]]|[[/span]]-carbon is equal to #323232, so whenever we use var(-[[span style=\"display:none\"]]|[[/span]]-carbon), it'll automatically take on that specific color.\n\nThis helps keep your code consistent across an entire page, let's you modify all elements that use those variables in a single edit, allows other people to easily see how your CSS is laid out, helps reduce the amount of CSS you have, and helps speed up the creation process.\n\nYou can also name the variable whatever you want; in this case, I've named it carbon, because I will remember that easily.\n\nVariables are also not limited to colors.\n\n[[div style=\"border:2px dashed grey; padding:0 1em;margin:auto;line-height:1.1;\"]]\n\n:root {\n@@ @@ @@ @@ @@ @@ -[[span style=\"display:none\"]]|[[/span]]-carbon: #323232;\n@@ @@ @@ @@ @@ @@ -[[span style=\"display:none\"]]|[[/span]]-customBorder: 0.4em double pink;\n@@ @@ @@ @@ @@ @@ -[[span style=\"display:none\"]]|[[/span]]-importedFont: \"Major Mono Display\";\n@@ @@ @@ @@ @@ @@ -[[span style=\"display:none\"]]|[[/span]]-standardWidth: \"2em\";\n}\n\n.blockquote {\n@@ @@ @@ @@ @@ @@ color: var(-[[span style=\"display:none\"]]|[[/span]]-carbon);\n@@ @@ @@ @@ @@ @@ border: var(-[[span style=\"display:none\"]]|[[/span]]-customBorder);\n@@ @@ @@ @@ @@ @@ font-family: var(-[[span style=\"display:none\"]]|[[/span]]-importedFont);\n@@ @@ @@ @@ @@ @@ padding: 10px var(-[[span style=\"display:none\"]]|[[/span]]-standardWidth);\n}\n\n[[/div]]\n\nHere, we've also got a custom border, a custom font, and a custom size.\n\nAdditionally, themes such as [https://scp-wiki.wikidot.com/component:sigma-plus Sigma Plus] and [https://scp-wiki.wikidot.com/theme:black-highlighter-theme Black Highlighter] both use variables to help style, so there are pre-existing variables that you can manipulate without having to modify entire classes.\n\nFor example, if you're using Sigma-10...\n\n[[div style=\"border:2px dashed grey; padding:0 1em;margin:auto;line-height:1.1;\"]]\n\n#header h1 a::before {\n@@ @@ @@ @@ @@ @@ content: \"SCP Foundation\" !important;\n}\n#header h2 span::before {\n@@ @@ @@ @@ @@ @@ content: \"Secure Contain Protect\" !important;\n}\n\n**Note:** The !important property overrides all other styles. The only way to override the !important property is to have //another// !important property of higher specificity. It is extremely intrusive and can quickly become messy when used, so it is better to never use this property!\n\n[[/div]]\n\n...instead of doing this to change the header text, you can instead...\n\n[[div style=\"border:2px dashed grey; padding:0 1em;margin:auto;line-height:1.1;\"]]\n\n:root {\n@@ @@ @@ @@ @@ @@ -[[span style=\"display:none\"]]|[[/span]]-header-title: \"SCP Foundation\";\n@@ @@ @@ @@ @@ @@ -[[span style=\"display:none\"]]|[[/span]]-header-subtitle: \"Secure Contain Protect\";\n}\n\n[[/div]]\n\n...do this. Easy and clean.\n\n:root is the single most important pseudo-class you can learn. It will be very important for making themes.\n\n@@ @@\n\n@@ @@\n\n[[=]]\n+ THE FORMATTING\n[[/=]]\n\nWhile there is no right or wrong way to write CSS, there are certainly better ways. Ideally, your work should look readable and accessible, which helps others interpret your code and helps you get back into your workflow whenever you leave and come back.\n\n**Note:** You only need //one// CSS module per page. That means all the CSS you do will fit inside that module, which means it can get messy extremely quickly if you don't take the proper steps to combat this.\n\n[[div style=\"border:2px dashed grey; padding:0 1em;margin:auto;line-height:1.1;\"]]\n\n#page-title,#footer,.blockquote{text-indent:1em;box-shadow:1px 1rem pink;background-color:red;border:solid 1px orange;padding:1em 2rem 1vw 1vh;margin:2vw 3px;text-shadow:0 0 5px purple;}\n\n[[/div]]\n\nHorrid! What the hell am I supposed to be looking at?\n\nIf I wanted to make this presentable, then it should look like this.\n\n[[div style=\"border:2px dashed grey; padding:0 1em;margin:auto;line-height:1.1;\"]]\n\n#page-title,\n#footer,\n.blockquote {\n@@ @@ @@ @@ @@ @@ text-indent: 1em;\n@@ @@ @@ @@ @@ @@ box-shadow: 1px 1rem pink;\n@@ @@ @@ @@ @@ @@ background-color: red;\n@@ @@ @@ @@ @@ @@ border: solid 1px orange;\n@@ @@ @@ @@ @@ @@ padding: 1em 2rem 1vw 1vh;\n@@ @@ @@ @@ @@ @@ margin: 2vw 3px;\n@@ @@ @@ @@ @@ @@ text-shadow: 0 0 5px purple;\n}\n\n[[/div]]\n\nThere we go. At a glance, we can immediately spot how the stylings being used here will apply to three different selectors; #page-title, #footer, and .blockquote. We can also see the separation between the declared selectors and their styles with the long spacing.\n\nIn order to create the spacings at the beginning of each styling, you can use the alt code Alt+09 or Tab to quickly insert a long space. Afterwards, every time to go to the next line, it will automatically add another long space for you. It is very convenient and I recommend you memorize this.\n\nAdditionally, you are encouraged to include comments into your CSS which allows everyone to better navigate your code, including yourself.\n\n[[div style=\"border:2px dashed grey; padding:0 1em;margin:auto;line-height:1.1;\"]]\n\n/*Hi! This is a comment! This will not be interpreted as formatting. This effectively allows you to add clarification or markers to your code to make it easier to navigate without affecting your CSS.*/\n\n.blockquote {\n@@ @@ @@ @@ @@ @@ text-indent: 1em; /*You can even add comments here!*/\n}\n\n/*And this stuff is for anything in the page header.*/\n\n#header {\n@@ @@ @@ @@ @@ @@ background-color: green;\n}\n#account-options {\n@@ @@ @@ @@ @@ @@ margin: 20px;\n}\n\n/*Proper spacing helps!*/\n\n[[/div]]\n\n**Note:** When I say anything, you can literally put in anything in your comments. Don't be the kind of person that puts in song lyrics that no one will ever understand except for yourself. The goal is to create easy access to your work, not be quirky.\n\n@@ @@\n\n@@ @@\n\n[[=]]\n+ CONCLUSION\n[[/=]]\n\nYou are now more familiar with how Wikidot set up its CSS. You also know how to begin setting up :root so that you can speed up your workflow. With this knowledge, you are now one more step towards making your own themes.\n\n[[div style=\"margin:400px\"]]\n[[/div]]\n\n[[include :scp-wiki:component:license-box-theme]]\n=====\n=====\n[[include :scp-wiki:component:license-box-end]]",
  "tags": [
    "_licensebox",
    "essay"
  ],
  "author": "Fish^12",
  "created_at": "2025-02-14T14:28:00+00:00",
  "updated_at": "2025-03-05T10:42:34+00:00",
  "rating": 32,
  "_site": "scp-wiki",
  "_fullname": "fish-s-absolute-beginner-s-guide-to-syntax"
}
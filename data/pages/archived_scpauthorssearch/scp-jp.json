{
  "title": "SCP作者検索-ARC",
  "content": "[[div style=\"display:none;\"]]\n[[module ListPages fullname=\"@URL\" category=\"*\" limit=\"1\"]]\n[[%%content{0}%%html]]\n<div id=\"autohor\">\n%%created_by%%\n</div>\n<div id=\"title\">\n%%title%%\n</div>\n<div id=\"fullname\">\nhttp://scp-jp.wikidot.com/%%fullname%%\n</div>\n<script type=\"text/javascript\" src=\"http://scp-jp.wdfiles.com/local--code/archived:scpauthorssearch/2\"></script>\n<script type=\"text/javascript\">\nfunction getJPSCP(){\n    var author = document.getElementById(\"autohor\").innerHTML.split(\"[[[*user \").join(\"\").split(\"]]]\").join(\"\").split(\"\\n\").join(\"\");\n    var title = document.getElementById(\"title\").innerHTML.split(\"\\n\").join(\"\");\n    var fullname = document.getElementById(\"fullname\").innerHTML.split(\"\\n\").join(\"\");\n    if((author.length + title.length) > 0){\n     author = convertExceptionAuthor(author,title);\n     return\"Author: \"+author+ ResultWrap+\"Title: \"+ title+ResultWrap+\"Source: \"+\n     '<a target=\"_blank\" href=\"' + fullname + '\">' + fullname + \"</a>\" + ResultWrap+\"CC BY-SA 3.0\"+ResultWrap;\n    }\n}\n\n// 特殊条件の作者名を出力する\nfunction convertExceptionAuthor(author,title){\n    var resultAuthor = author;\n    // 特殊作者リスト\n    var ExceptionList = {\n     'SCP-003-JP':{\n     Author:'jet0620',\n     Origin:'broken_bone'\n     },\n     'SCP-011-JP':{\n     Author:'jet0620',\n     Origin:'broken_bone'\n     },\n     'SCP-029-JP':{\n     Author:'jet0620',\n     Origin:'broken_bone'\n     },\n     'SCP-033-JP':{\n     Author:'jet0620',\n     Origin:'broken_bone'\n     },\n     'SCP-046-JP':{\n     Author:'C-take',\n     Origin:'broken_bone'\n     },\n     'SCP-060-JP':{\n     Author:'jet0620',\n     Origin:'broken_bone'\n     },\n     'SCP-070-JP':{\n     Author:'jet0620',\n     Origin:'broken_bone'\n     },\n     'SCP-073-JP':{\n     Author:'jet0620',\n     Origin:'broken_bone'\n     },\n     'SCP-315-JP':{\n     Author:'jet0620',\n     Origin:'broken_bone'\n     },\n     'SCP-492-JP':{\n     Author:'jet0620',\n     Origin:'broken_bone'\n     },\n     'SCP-717-JP':{\n     Author:'jet0620',\n     Origin:'broken_bone'\n     },\n     'SCP-1436-JP':{\n     Author:'jet0620',\n     Origin:'broken_bone'\n     },\n     'SCP-1945-JP':{\n     Author:'jet0620',\n     Origin:'broken_bone'\n     },\n     'SCP-0833-JP-J':{\n     Author:'jet0620',\n     Origin:'broken_bone'\n     },\n     'broken_boneの提言':{\n     Author:'jet0620',\n     Origin:'broken_bone'\n     }\n    }\n    if(title in ExceptionList){\n     if(author == ExceptionList[title].Author){\n     resultAuthor = ExceptionList[title].Origin;\n     }\n    }\n    return resultAuthor;\n}\n</script>\n[[/html]]\n[[%%content{0}%%embed]]\n<iframe name=\"isJPExist\"></iframe>\n[[/embed]]\n[[/module]]\n[[/div]]\n\n[[html]]\n<script type=\"text/javascript\">\n//検索ページのURLを格納\nvar baseURL = \"http://scp-jp.wikidot.com/archived:scpauthorssearch/\";\n</script>\n<style type=\"text/css\">\n@import url(http://scp-jp.wdfiles.com/local--files/japanese-syntax/scp-WikidotCss.css);\nform{\ndisplay:block;\nwidth:100%;\n}\nform input[type=\"radio\"]{\n    cursor:pointer;\n}\n\n#result{\n    width:100%;\n    border:solid #DDD 2px;\n    padding:3px;\n    height:200px;\n    margin:auto;\n    overflow-y:scroll;\n}\n\n#result2{\n    width:100%;\n    height:200px;\n    margin:auto;\n    border:solid #DDD 2px;\n}\n\n@media (max-width: 479px) {\n    #showTypeTitle{\n     display:block;\n    }\n}\n</style>\n<script type=\"text/javascript\" src=\"http://scp-jp.wdfiles.com/local--files/japanese-syntax/scpHTMLblockCtrl_ver1_ex.js\"></script>\n\n<div style=\"text-align:center;\" id=\"Prepara\"><!-- <span style=\"color:#999;\" class=\"fa fa-spinner fa-pulse fa-5x\"></span> -->\n</div>\n\n<div id=\"searchForm\" style=\"display:none;\">\n<b>SCP番号入力</b><br />\n<input type=\"text\" size=\"40\" maxlength=\"100\" onkeydown=\"(function(event){\nif(event.keyCode == 13){\nsetParametorAndReload();\n}\n})(event)\" id=\"searchWord\"></input><button style=\"cursor:pointer;\" onclick=\"setParametorAndReload();\" id=\"runButton\">検索</button>\n<span id=\"loading\"  style=\"color:#888;display:none;\"></span>\n<div style=\"width:85%;margin:auto;\">\n<br />\n<b id=\"Name1\">作品データ:</b>\n<div id=\"result\" style=\"display:block;\">\n</div>\n<textarea id=\"result2\" style=\"display:none;\" readonly>\n</textarea>\n<form name=\"display_result\" style=\"block\">\n<b id=\"showTypeTitle\">結果表示</b>\n<input type=\"radio\" name=\"showtype\" checked>リッチテキスト　<input type=\"radio\" name=\"showtype\">HTMLソース\n</form>\n<div id=\"ProcessStack\"></div>\n<b id=\"Name2\" style=\"display:none;\">001提言</b>\n<div id=\"ProposalList\">\n</div>\n</div>\n\n</div>\n<b>共有用URL:</b><br />\n<textarea style=\"width:90%;height:40px;display:block;margin:auto;border:solid #A55 2px;padding:2px;\" id=\"RestoreURL\" readonly></textarea>\n<div id=\"seamlessPageList\"></div>\n<div id=\"scpHTMLblockResizeSwitch\"></div>\n<script type=\"text/javascript\" src=\"https://scp-jp.wdfiles.com/local--code/archived:scpmetatitlesearch/1\"></script>\n<script type=\"text/javascript\" src=\"https://scp-jp.wdfiles.com/local--code/archived:scpmetatitlesearch/4\"></script>\n<script type=\"text/javascript\" src=\"http://scp-jp.wdfiles.com/local--code/archived:scpauthorssearch/1\"></script>\n<script type=\"text/javascript\" src=\"http://scp-jp.wdfiles.com/local--code/archived:scpauthorssearch/2\"></script>\n<script type=\"text/javascript\" src=\"http://scp-jp.wdfiles.com/local--code/archived:scpauthorssearch/3\"></script>\n<script type=\"text/javascript\">\nvar word;//検索語句入力欄\nvar resultCredit;//検索結果表示欄\nvar resultCreditSource;//HTMLソース表示欄\nvar SearchMachine;//検索用のiframeを格納\nvar CommonSCPTitle;//検索結果上部の表示\nvar ProposalTitle;//提言リスト時の検索結果上部の表示\nvar ProposalList;//提言リスト表示欄\n\n\nvar RunButton;//検索用ボタン\n\nvar ForeignCountriesParametor = \"OriginalSearch\";\nvar seamlessPageListArea;\nvar seamlessPageList;\nvar ProporsalParametor = \"Proporsal\";\nvar SubParts = \"OnlySubParts\";\n\n//表示すべきであり、なおかつ現在未表示のクレジットを格納する\nvar creditStack = new Array();\n//その回の検索で表示すべきクレジットの数を格納する\nvar creditStartingMax = 0;\n//表示し終えたクレジットの数をカウントする\nvar creditViewCount = 0;\n//先ほどまで持っていたクレジットの総数を記録する\nvar RegistCredit = -1;\n//検索すべきSCPのリスト\nvar serachSCPNumberList = new Array();\n//次の検索を可能にするかのフラグ\nvar PermitSearch = true;\n//検索に使われた語句を格納する\nvar ResultSearchWord = \"\";\n//メタタイトルリスト\nvar metaTitleList = new Array();\n//読み込み中を示すグルグル\nvar LoadingIndicator;\n\ndocument.addEventListener(\"DOMContentLoaded\",function(){\n\n    var url = document.referrer.split(baseURL).join(\"\");\n    RunButton = document.getElementById(\"runButton\");\n    if(url.indexOf(\"fullname\") == 0 && url.indexOf(SubParts) >= 0){\n     //サブパーツとして呼ばれた場合のみ動作\n    \n     //JP番号の検索　ListPagesから情報取得\n     var check = true;\n     var checkFrame;\n     try{\n     checkFrame = window.parent.window.isJPExist;\n     if(checkFrame == undefined){\n     check = false;\n     }\n     }catch(e){\n     check = false;\n     }\n     //該当のJP番号がある場合、内容を取得\n     if(check){\n     setUpJP();\n     }else{\n     //現在非表示のクレジットリストにスタックする（メインとして呼ばれている自分自身の変数にアクセス）\n     parent.parent.creditStack.push(nonHitResult);\n     }\n    }else if(url.indexOf(SubParts) < 0){\n     //検索機能及び検索結果表示に必要なHTML要素を取得する\n     word = document.getElementById(\"searchWord\");\n     resultCredit = document.getElementById(\"result\");\n     resultCreditSource = document.getElementById(\"result2\");\n     seamlessPageListArea = document.getElementById(\"seamlessPageList\");\n     LoadingIndicator = document.getElementById(\"loading\");\n     CommonSCPTitle = document.getElementById(\"Name1\");\n     ProposalTitle = document.getElementById(\"Name2\");\n     ProposalList = document.getElementById(\"ProposalList\");\n     //読み込み中のインジケータを生成\n     var actualIndicator=document.createElement(\"span\");\n     actualIndicator.setAttribute(\"class\", \"fa fa-spinner fa-pulse\" );\n     LoadingIndicator.appendChild(actualIndicator);\n     //iframe読み込み用ではない場合、自分自身を格納するiframeを作る\n     seamlessPageList = document.createElement(\"iframe\");\n     seamlessPageList.setAttribute(\"style\",\"display:none;\");\n     seamlessPageListArea.appendChild(seamlessPageList);\n     if((url.indexOf(ForeignCountriesParametor) == 0) || (url.indexOf(ProporsalParametor)==0)){\n     setUp(url,true);\n     }else {\n     setUp(url,false);\n     }\n     //ラジオスイッチにイベントを紐づける\n     for(var i = 0;i < document.display_result.showtype.length;i++){\n     document.display_result.showtype[i].setAttribute(\"onclick\",\"changeViewType();\");\n     }\n    }\n});\n\n//検索の始点\nfunction setParametorAndReload(){\n    //検索が許可されていない場合処理を止める\n    if(!PermitSearch){\n     return;\n    }\n    //検索終了まで次の検索を実行させない\n    setPermitSituation(false);\n    //クレジットリストの初期化\n    ResetSearchState();\n    //結果表示要素の初期化\n    showCommonSCPResultArea();\n    ResultSearchWord = \"\";\n    document.getElementById(\"ProcessStack\").innerHTML = \"\";\n    correctIframeSize();\n    //検索すべきSCPの番号をリスト化する\n    serachSCPNumberList = word.value.split(\",\");\n    if(!Array.isArray(serachSCPNumberList)){\n     serachSCPNumberList = new Array();\n    }\n    document.getElementById(\"ProcessStack\").innerHTML = \"表示タスク:\" + creditViewCount + \"/\" + creditStartingMax;\n    //検索すべきSCPの個数を記録\n    creditStartingMax = serachSCPNumberList.length;\n    //検索開始\n    searchMultiSCPNumber();\n    //検索結果表示\n    showStackCredit();\n}\n\n//リストを順次検索していく\nfunction searchMultiSCPNumber(){\n    //直前までに記録した結果スタックの数と現在の結果スタックの数に違いがあった場合、先ほどまでの検索が完了したと判定する\n    var checkCount = creditStack.length;\n    if(RegistCredit < checkCount){\n     //結果スタックの数を記録する\n     RegistCredit = checkCount;\n     if(RegistCredit < creditStartingMax){\n     if(isNullOrWhiteSpace(serachSCPNumberList[RegistCredit])){\n     //検索語句が空欄であった場合\n     creditStack.push(\"\");\n     }else{\n     //検索語句が存在する場合検索を行う\n     searchSingleSCPNumber(serachSCPNumberList[RegistCredit]);\n     }\n     }\n    }\n    //全検索スタックに対する処理が終わるまでこの処理を続ける\n    if(creditStartingMax > RegistCredit){\n     setTimeout(searchMultiSCPNumber,10);\n    }\n}\n\n\nfunction searchSingleSCPNumber(targetNumber){\n    //検索語の生成\n    var search = targetNumber;\n    var upperSearch = addPrefixZeroForSCP(search.toUpperCase().trim());\n    if(upperSearch == \"SCP-001-JP\"){\n     showingProposalList(\"SCP-001-JP\",SearchMachine.createList001JPProposalList());\n    }else if(isSCPJPRegex(upperSearch)){\n     //日本支部の通常もしくはEXのSCP　サブパーツとして自身に埋め込んだ自分自身にパラメータを送る\n     search = addPrefixZeroForSCP(search);\n     metaTitleList.push(searchCommonJP(search.toUpperCase().trim()));\n     seamlessPageList.src = baseURL + \"fullname/\" + search.toLowerCase() + \"/\" + SubParts;\n    }else if(isSCPJPJRegex(upperSearch)){\n     var resultObjJPJ = searchJPJ(deformPartiallyUpperCase(search));\n     metaTitleList.push(resultObjJPJ.metatitle);\n     //日本支部のJoke　サブパーツとして自身に埋め込んだ自分自身にパラメータを送る\n     seamlessPageList.src = baseURL + \"fullname/\" + resultObjJPJ.fullname + \"/\" + SubParts;\n    }else{\n     //SCP-[任意の文字]-JPでもSC[任意の文字]-JP-Jでもない場合\n     if((upperSearch.match(/^SCP\\-..\\-001/) || upperSearch.match(/^SCP\\-001/)) && !search.match(/\\-J$/)){\n     //本部もしくは海外支部のSCP-001の場合\n     searchCredit(ForeignCountriesParametor + \"/\" + search);\n     correctIframeSize();\n     }else{\n     //海外支部の通常もしくはEXのSCPNumber\n     searchCredit(ForeignCountriesParametor + \"/\" + search);\n     correctIframeSize();\n     }\n    }\n}\n\n//検索結果を表示する\nfunction showStackCredit(){\n    //検索結果のスタックを監視し、スタックにある結果を表示する\n    while(creditViewCount < creditStack.length){\n     //検索結果スタックに格納されていてなおかつ表示されていない結果がある場合は表示する\n     var resultRecord = creditStack[creditViewCount];\n     //メタタイトルを取得している場合、検索結果にメタタイトルを表示する\n     var ActualSearchWord = deformPartiallyUpperCase(serachSCPNumberList[creditViewCount]);\n     resultRecord = addMetaTitleResult(resultRecord,metaTitleList[creditViewCount],ActualSearchWord);\n     //今回追加する検索結果のコード\n     var resultWordSource = ((resultRecord==nonHitResult)?(ActualSearchWord+ResultWrap):\"\")+resultRecord;\n     resultCredit.innerHTML = resultCredit.innerHTML + resultWordSource;//リッチテキスト\n     resultCreditSource.value += resultWordSource;//ソースコード\n     ResultSearchWord += ActualSearchWord+\",\";//検索語句の修正\n     creditViewCount++;\n    }\n    document.getElementById(\"ProcessStack\").innerHTML = \"表示タスク:\" + creditViewCount + \"/\" + creditStartingMax;\n    if(creditViewCount < creditStartingMax){\n     //検索結果が全てできていない場合は監視を続ける\n     setTimeout(showStackCredit,10);\n    }else{\n     //検索結果が全て表示された場合は次の検索を有効にし、共有URLを作成する\n     setPermitSituation(true);\n     word.value = ResultSearchWord.substring(0,ResultSearchWord.length-1);\n     document.getElementById(\"RestoreURL\").value = baseURL + ForeignCountriesParametor + \"/\" + word.value;\n     correctIframeSize();\n    }\n}\n\n//SCP-001-JPの各提言を検索し表示する\nfunction searchProposalJP(pagename,metatitle){\n    //結果表示要素の初期化\n    showCommonSCPResultArea();\n    //次の検索を無効化し、検索すべきタスクが1つある状態にする\n    setPermitSituation(false);\n    ResetSearchState();\n    word.value = \"\";\n    ResultSearchWord = \"\";\n    serachSCPNumberList.push(\"scp-001-jp\");\n    if(!isNullOrWhiteSpace(metatitle)){\n     metaTitleList.push(trasrateWikidotToHtml(metatitle));\n    }else{\n     metaTitleList.push(trasrateWikidotToHtml(\"\"));\n    }\n    creditStartingMax = 1;\n    //iframeに格納した自分自身にパラメータを送り、ListPagesで検索を行う\n    seamlessPageList.src = baseURL + \"fullname/\"+ pagename + \"/\" + SubParts;\n    //検索結果表示\n    showStackCredit();\n}\n\n//SCP-JP,SCP-JP-EX,SCP-JP-ARCのメタタイトルを検索する\nfunction searchCommonJP(word){\n    return SearchMachine.getSCPJPmetaTitle(word);\n}\n\n//SCP-JP-Jを検索、検索用iframeからpagenameを取得しfullname検索にかける\nfunction searchJPJ(word){\n    return SearchMachine.getJPJPageName(word);\n}\n\n//JP以外の001の各提言を検索する\nfunction searchProposal(elm,branch){\n    if(branch!= \"JP\"){\n     searchCredit(ProporsalParametor+\"/\"+ branch+\"/\"+elm.innerHTML);\n     //parent.location.href = baseURL + ProporsalParametor+\"/\"+ branch+\"/\"+elm.innerHTML;\n    }\n}\n\n//画面が開かれたと同時に起動する。SearchMachineに検索用iframe格納\nfunction setUp(url,search){\n    var brotherSearch = window.parent.window.frames;\n    //検索用のデータ及び関数を保持するiframeの検索\n    for(var i = 0;i<brotherSearch.length;i++){\n     try{\n     if(typeof(brotherSearch[i].getCredit) == \"function\"){\n     SearchMachine = brotherSearch[i];\n     break;\n     }\n     }catch(e){\n\n     }\n    }\n    if(!SearchMachine){\n     setTimeout(function(){setUp(url,search)},50);\n    }else{\n     document.getElementById(\"searchForm\").style.display = \"block\";\n     document.getElementById(\"Prepara\").style.display = \"none\";\n     //共有用URLによる自動検索\n     if(search){\n     if(url.indexOf(ForeignCountriesParametor) == 0){\n     var checkURL = url.split(ForeignCountriesParametor+\"/\").join(\"\");\n     word.value = decodeURIExtension(checkURL);\n     setParametorAndReload();\n     }\n    \n     }\n     //if(search)searchCredit(url);\n    }\n}\n\n/*呼び出し元:document.addEventListenerに組み込まれた無名関数\n発動条件:window.parent.window.isJPExistが存在する（該当のSCP-JPが存在する）\n動作:ListPagesから著者名等の取得*/\nfunction setUpJP(){\n    //この関数はサブパーツ（ListPagesの情報発信用のページ）として呼ばれた時に動く\n    var brotherSearch = window.parent.window.frames;\n    for(var i = 0;i<brotherSearch.length;i++){\n     try{\n     if(typeof(brotherSearch[i].getJPSCP) == \"function\"){\n     SearchMachine = brotherSearch[i];\n     break;\n     }\n     }catch(e){\n\n     }\n    }\n    if(!SearchMachine){\n     setTimeout(setUpJP,10);\n    }else{\n     //現在非表示のクレジットリストにスタックする (メインとして呼ばれている自分自身の変数にアクセス)\n     parent.parent.creditStack.push(SearchMachine.getJPSCP() + ResultWrap);\n    }\n}\n\nfunction searchCredit(url){\n    //従来は検索を行うごとにパラメータを含んだページに遷移する仕組みであった為、その名残としてURL解析の後がある\n    \n    var isProposal = false;\n    var branch = \"EN\";\n    var ParametorName;\n    var wordEnd;\n    var targetpoint;\n    var creditWord;\n    if(url.indexOf(ForeignCountriesParametor) == 0){\n     //通常SCP番号（SCP-001そのものはこの検索を掛けられる）\n     ParametorName = ForeignCountriesParametor + \"/\";\n     wordEnd = ParametorName.length;\n     targetpoint = url.indexOf(ParametorName)+wordEnd;\n     for(var i = targetpoint;i < url.length;i++){\n     if(url.charAt(i).match(/#|\\//))break;\n     }\n     //検索文字列を大文字にし、端部のスペースを除去する\n     creditWord = deformPartiallyUpperCase(url.substring(targetpoint,i));\n    }else if(url.indexOf(ProporsalParametor)==0){\n     //各001提言の検索\n     isProposal = true;\n     ParametorName = ProporsalParametor + \"/\";\n     wordEnd = ParametorName.length;\n     targetpoint = url.indexOf(ParametorName)+wordEnd;\n     for(var i = targetpoint;i < url.length;i++){\n     if(url.charAt(i).match(/#|\\//))break;\n     }\n     branch = url.substring(targetpoint,i).toUpperCase();\n     for(targetpoint=(i+1);targetpoint<url.length;targetpoint++){\n     if(url.charAt(targetpoint).match(/#|\\//))break;\n     }\n     creditWord = decodeURIExtension(url.substring(i+1,targetpoint));\n    }\n    var resultObject = SearchMachine.getCredit(creditWord,isProposal,branch);\n    if(!resultObject.List){\n    \n     if(isProposal){\n     //各提言を表示する場合\n     showCommonSCPResultArea();\n     resultCredit.innerHTML = addMetaTitleResult(resultObject.text,resultObject.metatitle,creditWord);\n     resultCreditSource.value = resultCredit.innerHTML;\n     }else{\n     //その他SCPの処理\n     creditStack.push(resultObject.text + ResultWrap);\n     metaTitleList.push(resultObject.metatitle);//メタタイトル格納\n     }\n    }else{\n     showingProposalList(creditWord,resultObject.text);\n    }\n}\n\n\n\n//検索状況を初期化する\nfunction ResetSearchState(){\n    creditStack = null;//Dispose\n    creditStack = new Array();\n    creditStartingMax = 0;\n    creditViewCount = 0;\n    serachSCPNumberList = null;//Dispose\n    serachSCPNumberList = new Array();\n    metaTitleList = null;//Dispose\n    metaTitleList = new Array();\n    RegistCredit = -1;\n}\n\nfunction setPermitSituation(isPermit){\n    var set = (isPermit)?100:50;\n    RunButton.style.filter = 'alpha(opacity='+ set + ')';\n    // Firefox用\n    RunButton.style.MozOpacity = set/100;\n    // Safari用\n    RunButton.style.opacity = set/100;\n    PermitSearch = isPermit;\n    LoadingIndicator.style.display = (isPermit)?\"none\":\"inline\";\n}\n\n//JokeSCPに関してはSCPという表記や支部及びEXやJ等の表記のみを大文字にする\nfunction deformPartiallyUpperCase(originalText){\n    originalText = originalText.trim();\n    var testUpperCase = originalText.toUpperCase();\n    \n    if(!testUpperCase.match(/\\-J$/)){\n     return addPrefixZeroForSCP(testUpperCase);\n    }\n    var textArray = testUpperCase.split(\"-\");\n    \n    if(textArray.length < 3){\n     return testUpperCase;\n    }\n    \n    //SCP-[支部]表記か判定\n    var checkMiddle = false;\n    var isBranch = false;\n    var middleBranch = [\"CN\",\"PL\",\"ES\"];\n    for(i = 0;i < middleBranch;i++){\n     if(textArray[1] == middleBranch[i]){\n     checkMiddle = true;\n     isBranch = true;\n     break;\n     }\n    }\n    \n    if(!checkMiddle){\n     if(textArray[textArray.length - 2].match(/^[A-Z]+$/)){\n     isBranch = true;\n     }\n    }\n    \n    //大文字にしない位置の選定を行う\n    var TextPartsNum = 3;\n    if(isBranch){\n     TextPartsNum = 4;\n    }\n    //SCウォアアア…対策　節目の数が規定数と合っていないなら全てを大文字にした文字列を返す\n    if(textArray.length != TextPartsNum){\n     return testUpperCase;\n    }\n    var result = \"\";\n    var OriginalArray = originalText.split(\"-\");\n    var NonDeform = (checkMiddle)?2:1;\n    for(i = 0;i < textArray.length;i++){\n     if(i == NonDeform){\n     result += OriginalArray[i] + ((i < (textArray.length-1))?\"-\":\"\");\n     }else{\n     result += textArray[i] + ((i < (textArray.length-1))?\"-\":\"\");\n     }\n    }\n    return result;\n}\n\n//通常SCPの表示領域を表示する\nfunction showCommonSCPResultArea(){\n    //提言リスト表示領域を非表示にする\n    ProposalList.innerHTML = \"\";\n    ProposalTitle.style.display = \"none\";\n    //通常SCP検索結果表示領域を表示し検索結果をクリアする\n    document.display_result.style.display = \"block\";\n    CommonSCPTitle.style.display = \"inline\";\n    changeViewType();\n    resultCredit.innerHTML = \"\";\n    resultCreditSource.value = \"\";\n}\n\n//001提言リストを表示可否　及び表示を行う\nfunction showingProposalList(creditWord,resultText){\n     if(creditStartingMax < 2){\n     //通常SCP検索結果表示領域を消す\n     document.display_result.style.display = \"none\";\n     resultCredit.style.display = \"none\";\n     resultCreditSource.style.display = \"none\";\n     CommonSCPTitle.style.display = \"none\";\n     //SCP-001の検索結果の場合各提言リストを表示する\n     ProposalTitle.style.display = \"inline\";\n     ProposalTitle.innerHTML = creditWord + \"提言リスト\";\n     ProposalList.innerHTML = resultText;\n     creditStack.push(\"\");\n     metaTitleList.push(\"\");\n     }else{\n     //検索語が2以上の場合はリストを表示しない\n     metaTitleList.push(\"\");\n     creditStack.push(creditWord+\"は単独で検索してください\" + ResultWrap2);\n     }\n\n}\n\n//表示の仕方を切り替える\nfunction changeViewType(){\n    if(document.display_result.style.display == \"none\"){\n     return;\n    }\n    var showType = 0;\n    for(var i = 0;i < document.display_result.showtype.length;i++){\n     if(document.display_result.showtype[i].checked){\n     showType = i;\n     }\n    }\n    switch(showType){\n     case 0:\n     //リッチテキスト\n     if(resultCredit.style.display == \"block\"){\n     return;\n     }\n     resultCredit.style.display = \"block\";\n     resultCreditSource.style.display = \"none\";\n     break;\n     case 1:\n     //HTMLソース\n     if(resultCreditSource.style.display == \"block\"){\n     return;\n     }\n     resultCredit.style.display = \"none\";\n     resultCreditSource.style.display = \"block\";\n     break;\n    \n    }\n}\n\n//メタタイトルを適切な位置にとりつける\nfunction addMetaTitleResult(resultText,metatitle,searchWord){\n    if(resultText == nonHitResult){\n     return searchWord + ResultWrap +resultText;\n    }\n    if(!isNullOrWhiteSpace(metatitle)){\n     var tmpAnalysis = resultText.split(ResultWrap);\n     if(tmpAnalysis[1].indexOf(\"Title:\") == 0){\n     tmpAnalysis[1] += metatitle;\n     }else{\n     for(var i = 2;i < tmpAnalysis.length;i++){\n     if(tmpAnalysis[i].indexOf(\"Title:\") == 0){\n     tmpAnalysis[i] += metatitle;\n     break;\n     }\n     }\n     }\n     resultText = tmpAnalysis.join(ResultWrap);\n    }\n    return resultText;\n}\n\n</script>\n\n\n\n[[/html]]\n\n[[div style=\"display:none;\"]]\n[[module ListPages range=\".\"]]\n[[%%content{0}%%html]]\n<div style=\"display:none;\">\n<div id=\"scp-jp001-999\">\n[[include :scp-jp:scp-series-jp]]\n</div>\n<div id=\"scp-jp1000-1999\">\n[[include :scp-jp:scp-series-jp-2]]\n</div>\n<div id=\"scp-jp2000-2999\">\n[[include :scp-jp:scp-series-jp-3]]\n</div>\n<div id=\"scp-jp-ex\">\n[[include :scp-jp:scp-jp-ex]]\n</div>\n<div id=\"scp-jp-arc\">\n[[include :scp-jp:archived-scps-jp]]\n</div>\n<div id=\"scp001-999\">\n[[include :scp-jp:credits-scp-001-999]]\n</div>\n<div id=\"scp1000-1999\">\n[[include :scp-jp:credits-scp-1000-1999]]\n</div>\n<div id=\"scp2000-2999\">\n[[include :scp-jp:credits-scp-2000-2999]]\n</div>\n<div id=\"scp3000-3999\">\n[[include :scp-jp:credits-scp-3000-3999]]\n</div>\n<div id=\"scp4000-4999\">\n[[include :credits-scp-4000-4999]]\n</div>\n<div id=\"scp5000-5999\">\n[[include :credits-scp-5000-5999]]\n</div>\n<div id=\"otherBranch\">\n[[include :scp-jp:credits-scp-international]]\n</div>\n<div id=\"scp-variety-series\">\n[[include :scp-jp:credits-scp-others]]\n</div>\n<div id=\"SCP-001-JP\">\n[[include :scp-jp:scp-001-jp]]\n</div>\n<div id=\"SCP-JP-J\">\n[[include :scp-jp:joke-scps-jp]]\n</div>\n</div>\n<div id=\"decodeZone\">\n</div>\n<!-- 作者不明等を含めた例外時の作者不明表記を格納するDBもどき -->\n<table id=\"ExceptionExpressTable\">\n<!--\n 作者名表記(string),リンク構文の有無(bool),\n他項目名(項目が1つだけの場合は設定しないカンマ区切りで指定),\n項目ごとのリンクの有無(0か1で表記。特にない、もしくは同一の場合は設定しない、、設定する場合はカンマ区切り)\n各項目において改行が必要か\n汎用化が難しい場合　0 汎用　1 特殊\n上記が1の場合の専用の変換構文\n-->\n<tr><td>執筆者：</td><td>1</td><td>その後,英訳・改稿,執筆協力：,後に</td><td>1,1,1,1</td><td>1,1,1,1</td><td>0</td><td>none</td></tr>\n<tr><td>執筆者:</td><td>1</td><td>その後,英訳・改稿,執筆協力：,後に</td><td>1,1,1,1</td><td>1,1,1,1</td><td>0</td><td>none</td></tr>\n<tr><td>//不明(アカウント削除済)//と[[user Roget]]の共同制作</td><td>0</td><td> </td><td> </td><td>0</td><td>1</td><td>不明、Roget　<br />※ 共同制作</td></tr>\n<tr><td>執筆者: [[user qipajun]] [[user fuban]]</td><td>0</td><td> </td><td> </td><td>0</td><td>1</td><td>qipajun（文）、fuban（プログラム）</td></tr>\n</table>\n\n<script type=\"text/javascript\" src=\"https://scp-jp.wdfiles.com/local--code/archived:scpmetatitlesearch/1\"></script>\n<script type=\"text/javascript\" src=\"http://scp-jp.wdfiles.com/local--code/archived:scpauthorssearch/1\"></script>\n<script type=\"text/javascript\" src=\"http://scp-jp.wdfiles.com/local--code/archived:scpauthorssearch/2\"></script>\n<script type=\"text/javascript\" src=\"http://scp-jp.wdfiles.com/local--code/archived:scpauthorssearch/3\"></script>\n<script type=\"text/javascript\">\n\n//検索結果を格納するエンティティ\nvar resultObjectEntity = function(){\n    this.List=false;\n    this.text=nonHitResult2;\n    this.metatitle=\"\";\n}\n\n    //作者不明を含めた例外の作者表記項目雛形\n    var exceptionExpress = function(AuthorName,LinkExist,ContentsArray,ContentsExceptionArray,ContentWrapArray,isSpecialSentence,specialT){\n     /*構成\n     Author:string:表記\n     Link:bool:リンク構文の有無\n     Contents:Array(string):他項目名\n     ContentException:Array(bool):項目に応じてリンクの有無が変わる場合\n     ContentWrap:他項目に対し改行を行うか\n     IsSpecial:bool(汎用化できるか)\n     SpecialTranslate:string*/\n     this.Author = AuthorName;\n     this.Link = LinkExist;\n     this.Contents = ContentsArray.slice();\n     this.ContentException = ContentsExceptionArray.slice();\n     this.ContentWrap = ContentWrapArray.slice();\n     this.IsSpecial = isSpecialSentence;\n     this.SpecialTranslate = specialT;\n    }\n    \n    //例外表記を格納する配列(雛形と組み合わせるとC#のListに近い構造になる)\n    var exceptionExpressList = new Array();\n\n//クレジットページから該当記事の著者名等を抽出する\nfunction getCredit(target,isProposal,branchName){\n\n    //例外リストを生成　※初回起動時のみ\n    if(exceptionExpressList.length == 0){\n     createExceptionExpressList();\n    }\n    \n    //検索結果のインスタンスをたてる\n    var resultObject = new resultObjectEntity();\n    //加工をする前の著者名表記\n    var RowAuthorText = \"\";\n    //検索する支部を検索\n    var SorceObject = getResultSorce(target);\n    //SCP-XXX等をscp-xxx表記に変換\n    var SearchParam = target.toLowerCase();\n    var idName = \"scp001-999\";\n    //検索すべき構文が格納されている範囲を取得\n    idName = getTextAreaName(SearchParam,SorceObject.branch);\n    var textArea = document.getElementById(idName).innerHTML;\n    \n    var Sorce = SorceObject.url;\n    var point = textArea.indexOf(target);\n    if(point<0){\n     return text = resultObject;\n    }\n    var authorArea;\n    var Cright = \"CC BY-SA 3.0\";\n    if(target.match(/\\-RU$/) || target.match(/\\-RU\\-J$/)){\n     Cright = \"CC BY-SA 3.0\";\n    }\n    \n    if((target.match(/^SCP\\-..\\-001/) || target.match(/^SCP\\-001/)) && !target.match(/\\-J$/)){\n     //001提言\n     resultObject.List = true;\n     for(var i = point;i < textArea.length;i++){\n     if(textArea.charAt(i) == \"\\n\" || textArea.charAt(i) == \"/\"){\n     break;\n     }\n     }\n     textArea = textArea.substring(i,textArea.length);\n     textArea = textArea.substring(0,textArea.indexOf(\"* [[[SCP\"));\n     resultObject.text = replasticProporsal(textArea,SorceObject.branch);\n    }else{\n     var RowStartPoint = 0;//行の始まりの位置\n     var RowEndPoint = 0;//行の終りの位置\n     //検索ワードから行の終りの改行文字の座標を取得\n     var searchContinue = true;\n     while(searchContinue){\n     for(var checkI = point;checkI >= 0;checkI--){\n     if(textArea.charAt(checkI) == \"]\"){\n     textArea = textArea.substring(point + target.length,textArea.length);\n     point = textArea.indexOf(target);\n     break;\n     }else if(textArea.charAt(checkI) == \"[\"){\n     if(decideTargetRow(target,textArea,checkI)){\n     searchContinue = false;\n     break;\n     }else{\n     textArea = textArea.substring(point + target.length,textArea.length);\n     point = textArea.indexOf(target);\n     }\n     }\n     if(checkI == 0){\n     point = -1;\n     }\n     }\n     if(point < 0){\n     return resultObject;\n     }\n     }\n     for(var i = point;i < textArea.length;i++){\n     if(textArea.charAt(i) == \"\\n\"){\n     RowEndPoint = i;\n     break;\n     }\n     }\n\n     //行の始まりの位置を取得\n     for(i = point;i >= 0;i--){\n     if(textArea.charAt(i) == \"\\n\" || i == 0){\n     RowStartPoint = i;\n     break;\n     }\n     }\n\n     //対象となる行を取り出す\n     var targetRow = ConvertNormalAuthorLink(textArea.substring(RowStartPoint,RowEndPoint));\n     //リンク先URLを取得する\n     var pagename = getPageNameLink(targetRow,SearchParam);\n     //[[user hogehoge]]という形を想定した解析\n     getAuthorName();\n     if(isNullOrWhiteSpace(authorArea)){\n     return new resultObjectEntity();\n     }\n     target = getLinkName(target,targetRow);\n     resultObject.text = \"Author: \"+(authorArea.split(\"[[user \").join(\"\").split(\"//\").join(\"\"))+ ResultWrap+\"Title: \"+ target+ResultWrap+\"Source: \"+ '<a target=\"_blank\" href=\"' + Sorce+ pagename + '\">' + Sorce + pagename+ \"</a>\"  + ResultWrap+\n     Cright+ResultWrap;\n     resultObject.metatitle = trasrateWikidotToHtml(getMetaTitle());\n    }\n    return resultObject;  \n\n        function getLinkName(target,targetRow){\n             if(targetRow.match(/\\[\\[\\[.*\\|[^\\|]*\\]\\]\\]/)){\n                 var found = targetRow.match(/\\[\\[\\[.*\\|[^\\|]*\\]\\]\\]/);\n                 found = found[0].replace(/\\]\\]\\].*/,'');\n                 return found.split('|')[1];\n             }\n             return target;\n\n        }\n    \n    function decideTargetRow(targetWord,allText,number){\n     var replastic = allText.substring(number,allText.length);\n     for(var i = 0;i < replastic.length;i++){\n     if(replastic.charAt(i) == \"]\"){\n     replastic = replastic.substring(0,i);\n     }\n     }\n     replastic = replastic.split(\"[\").join(\"\");\n     replastic = replastic.split(\"]\").join(\"\");\n     var resultTarget = false;\n     if(replastic.indexOf(\"|\")){\n     var testCheck = replastic.split(\"|\");\n     for(var i = 0;i < testCheck.length;i++){\n     testCheck[i] = testCheck[i].trim();\n     if(testCheck[i] == targetWord){\n     resultTarget = true;\n     }\n     }\n     }else{\n     var testCheck = replastic.split(\" \");\n     for(var i = 0;i < testCheck.length;i++){\n     testCheck[i] = testCheck[i].trim();\n     if(testCheck[i] == targetWord){\n     resultTarget = true;\n     }\n     }\n     }\n     return resultTarget;\n    }\n\n    //作品情報を取得する為のリストデータを選択\n    function getTextAreaName(targetParam,branch){\n     var analysisText = \"\";\n     var result = \"\";\n     if(isProposal){\n     switch(branchName){\n     case \"EN\":\n     result = \"scp001-999\";\n     break;\n     default:\n     result = \"otherBranch\";\n     break;\n     }\n     return result;\n     }\n     if(targetParam.match(/^scp\\-\\d*$/)){\n     analysisText = Number(targetParam.split(\"scp-\").join(\"\"));\n     if(analysisText < 1000){\n     result = \"scp001-999\";\n     }else if(analysisText < 2000){\n     result = \"scp1000-1999\";\n     }else if(analysisText < 3000){\n     result = \"scp2000-2999\";\n     }else if(analysisText < 4000){\n     result = \"scp3000-3999\";\n     }else if(analysisText < 5000){\n     result = \"scp4000-4999\";\n     }else if(analysisText < 6000){\n             result = \"scp5000-5999\";\n     }else{\n     //ない場合\n     result = \"scp001-999\";\n     }\n     }else if(branch == \"EN\"){\n     //ENのJoke等\n     result = \"scp-variety-series\";\n     }else{\n     //他の海外支部\n     result = \"otherBranch\";\n     }\n     return result;\n    }\n    \n    \n    //各支部におけるメインURLの取得\n    function getResultSorce(targetParam){\n     var resultObject = {\n     url:\"http://www.scp-wiki.net/\",\n     branch:\"EN\"\n     }\n     if(isProposal){\n     resultObject.branch = branchName;\n     switch(branchName){\n     case \"KO\":\n     resultObject.url = \"http://ko.scp-wiki.net/\";\n     break;\n     case \"RU\":\n     resultObject.url = \"http://fondationscp.wikidot.com/\";\n     break;\n     case \"FR\":\n     resultObject.url = \"http://fondationscp.wikidot.com/\";\n     break;\n     case \"DE\":\n     resultObject.url = \"http://scp-wiki-de.wikidot.com/\";\n     break;\n     case \"IT\":\n     resultObject.url = \"http://fondazionescp.wikidot.com/\";\n     break;\n     case \"TH\":\n     resultObject.url = \"http://scp-th.wikidot.com/\";\n     break;\n     case \"CN\":\n     resultObject.url = \"http://scp-wiki-cn.wikidot.com/\";\n     break;\n     case \"ES\":\n     resultObject.url = \"http://lafundacionscp.wikidot.com/\";\n     break;\n     case \"PL\":\n     resultObject.url = \"http://scp-wiki.net.pl/\";\n     break;\n     case \"UA\":\n     resultObject.url = \"http://scp-ukrainian.wikidot.com/\";\n     break;\n     case \"PT\":\n     resultObject.url = \"http://scp-pt-br.wikidot.com/\";\n     break;\n    \n     }\n     return resultObject;\n     }\n     //JP、EN以外の支部かを判定する\n     resultObject = getSCPOtherBranchRegex(targetParam,resultObject);\n     return resultObject;\n    }\n    \n    function replasticProporsal(targetText,branch){\n     var startIndex = 0;\n     var endIndex = 0;\n     var link = \"\";\n     while(targetText.indexOf(\"|\") >= 0){\n     startIndex = targetText.indexOf(\"|\");\n     endIndex = targetText.indexOf(\"]]]\");\n     link += '<span class=\"fake-link\" onclick=\"searchProposal(this,'+\"'\"+branch+\"'\"+')\">'+targetText.substring(startIndex+1,endIndex)+\"</span>\" + ResultWrap;\n     targetText = targetText.substring(endIndex+3,targetText.length);\n     }\n     return link;\n    \n    }\n    \n    //作者不明等を含めた例外的な作者名表記のリストを作る\n    function createExceptionExpressList(){\n     //Bodyにあるテーブル要素から例外リストを生成する\n     var DBTble = document.getElementById(\"ExceptionExpressTable\");\n     var Records = DBTble.getElementsByTagName(\"tr\");\n     var Column;//各列の値を格納\n     var newRecord;\n     var Name;\n     var Link;\n     var NameArray;\n     var LinkArray;\n     var WrapArray;\n     var IsSpecial;\n     var SpecialTranslate;\n     for(var i = 0;i < Records.length;i++)\n     {\n     Column = Records[i].getElementsByTagName(\"td\");\n     Name = Column[0].innerHTML;\n     Link = (Number(Column[1].innerHTML) > 0);\n     NameArray = Column[2].innerHTML.split(\",\").slice();\n     if(!Array.isArray(NameArray)){\n     NameArray = new Array();\n     }\n     LinkArray = Column[3].innerHTML.split(\",\").slice();\n     if(!Array.isArray(LinkArray)){\n     LinkArray = new Array();\n     }\n     for(var j = 0;j < LinkArray.length;j++){\n     LinkArray[j] = (Number(LinkArray[j]) > 0);\n     }\n     WrapArray = Column[4].innerHTML.split(\",\").slice();\n     if(!Array.isArray(WrapArray)){\n     WrapArray = new Array();\n     }\n     for(j = 0;j < WrapArray.length;j++){\n     WrapArray[j] = (Number(WrapArray[j]) > 0);\n     }\n\n     IsSpecial = (Number(Column[5].innerHTML) > 0);\n     SpecialTranslate = Column[6].innerHTML.split(\"\\n\").join(\"\");\n     SpecialTranslate = SpecialTranslate.split(\"<br />\").join(ResultWrap);\n     SpecialTranslate = SpecialTranslate.split(\"<br>\").join(ResultWrap);\n     exceptionExpressList.push(new exceptionExpress(Name,Link,NameArray,LinkArray,WrapArray,IsSpecial,SpecialTranslate));\n     }\n     //表記の文字数が多い順にソートする\n     exceptionExpressList.sort(function(v1,v2){\n     return v2.Author.length - v1.Author.length;\n     });\n    \n    }\n    \n    //SCP-CNにおける特殊なリンク先を[[user hogehoge]]に変換する\n    function ConvertNormalAuthorLink(sentence){\n     //例外リンク先\n     var exceptionLinks = [\"http://tieba.baidu.com/home/main\",\"http://scpfoundation.123ubb.com\"];\n     for(var i = 0;i < exceptionLinks.length;i++){\n     while(sentence.indexOf(exceptionLinks[i]) >= 0){\n     var LinkPosition = sentence.indexOf(exceptionLinks[i]);\n     var start = LinkPosition + exceptionLinks[i].length;\n     var space = -1;\n     var endLink = -1;\n     for(var j = start;j < sentence.length;j++){\n     var getChar = sentence.charAt(j);\n     if(getChar == \" \"){\n     if(space < 0)space = j;\n     }\n     if(getChar == \"]\"){\n     endLink = j;\n     }\n     if(space >= 0 && endLink >= 0){\n     break;\n     }\n     }\n     if(space >= 0 && endLink >= 0){\n     var EndedSentence = sentence.substring(endLink,sentence.length);\n     var StartSentence = sentence.substring(0,endLink);\n     sentence = StartSentence + \"]\" + EndedSentence;\n     EndedSentence = sentence.substring(space,sentence.length);\n     StartSentence = sentence.substring(0,LinkPosition);\n     sentence = StartSentence + \"[user \" + EndedSentence;\n\n     }else{\n     break;\n     }\n\n     }\n\n     }\n     return sentence;\n\n    }\n\n    //リンク先pagenameを取得する\n    function getPageNameLink(SearchRow,searchWord){\n     if(isNullOrWhiteSpace(SearchRow) || isNullOrWhiteSpace(searchWord)){\n     return searchWord;\n     }\n    \n     //検索語該当箇所を調べる\n     searchWord = searchWord.toLowerCase();\n     SearchRow = SearchRow.toLowerCase();\n     var startNumber = SearchRow.indexOf(searchWord);\n     if(startNumber < 0){\n     return searchWord;\n     }\n    \n     //リンク構文がただタイトルを打ち込んだものだけであった場合検索を終了する\n     for(var i = startNumber;i >= 0;i--){\n     if(SearchRow.charAt(i) == \"[\"){\n     for(var k = i;k < SearchRow.length;k++){\n     if(SearchRow.charAt(k) == \"]\"){\n     return searchWord;\n     }\n     if(SearchRow.charAt(k) == \" \" || SearchRow.charAt(k) == \"|\"){\n     i = k;\n     break;\n     }\n     }\n     }\n     if(SearchRow.charAt(i) == \" \" || SearchRow.charAt(i) == \"|\"){\n     break;\n     }\n     }\n     //リンク先URL取得用検索業を切り出す\n     var testSearch = SearchRow.substring(0,i);\n     //リンク構文の始点まで検索業を切り詰める\n     while(testSearch.length > 0){\n     if(testSearch.match(/^\\[/)){\n     break;\n     }else{\n     testSearch = testSearch.substring(1,testSearch.length);\n     }\n     }\n     if(testSearch.length == 0){\n     return searchWord;\n     }\n     //リンク構文視点を示す文字列が終わるまで行を切りつける\n     while(testSearch.match(/^\\[/)){\n     testSearch = testSearch.substring(1,testSearch.length);\n     }\n     if(isNullOrWhiteSpace(testSearch)){\n     return searchWord;\n     }\n     testSearch = testSearch.trim();\n     return replasticPageName(testSearch);\n    \n    }\n    \n    //条件付きの変換法則に則り作者名を取得する\n    function getAuthorName(){\n    \n     //予め設定したキーワードに基づいた作者名検索を行う\n     var isGetAuthorName = searchCommonSCP();\n     //上記のキーワード検索で作者名が見つかり、なおかつ001提言ではない場合処理を止める\n     if(!isProposal && isGetAuthorName)return;\n\n     //キーワードによる作者名検索が成功していない場合\n     if(!isGetAuthorName){\n     runRoughlySearch();\n     }\n     //001提言の場合表示するURLを取得する\n     if(isProposal){\n     for(i = point;i >= 0;i--){\n     if((textArea.charAt(i) == \"|\") || (textArea.charAt(i) == \" \") )break;\n     }\n     for(j = i;j >= 0;j--){\n\n     if(textArea.charAt(j) == \"[\")break;\n     }\n     if((textArea.charAt(i-1) == \"|\")){\n     i--;\n     }\n     SearchParam = replasticPageName(textArea.substring(j+1,i));\n     }\n    \n    \n     function searchCommonSCP(){\n     //例外に含まれる執筆者名表記か検索\n     var EvaluationString = targetRow.substring(target.length,targetRow.length).trim();\n     var checkValue = \"\";\n     for(var checkChar = EvaluationString.length-1;checkChar >= 0;checkChar--){\n     //例外指定した作者表記がないか検索する\n     checkValue = EvaluationString.charAt(checkChar) + checkValue;\n    \n     for(var exceptionString = 0;exceptionString < exceptionExpressList.length;exceptionString++){\n     if(exceptionExpressList[exceptionString].Author.length <= checkValue.length){\n    \n     var checkIndex = checkValue.indexOf(exceptionExpressList[exceptionString].Author);\n     if(checkIndex >= 0){\n     if(exceptionExpressList[exceptionString].IsSpecial){\n     RowAuthorText = exceptionExpressList[exceptionString].Author;\n     authorArea = exceptionExpressList[exceptionString].SpecialTranslate;\n     return true;\n     }else{\n     //それ以外の場合、特殊表記に合わせて作者名を抽出する\n     RowAuthorText = checkValue;\n     getAuthorNames(exceptionExpressList[exceptionString],checkIndex,checkValue);\n     return true;\n     }\n    \n     }\n     }\n     }\n     }\n     return false;\n     }\n     function getAuthorNames(checkExcept,targetNumber,checkValue){\n     authorArea = checkValue.substring(targetNumber,checkValue.length);\n     if(checkExcept.Link){\n     //余分な文字等を除去し、作者名のみ抽出する\n     authorArea = authorArea.substring(checkExcept.Author.length,authorArea.legnth);\n     var isNormal = true;\n     if(checkExcept.Contents.length > 0){\n     var checkLintEnd = (checkMultAuthorLink())?authorArea.indexOf(\"]]\") + 2:0;\n     for(var anotherN = 0;anotherN < checkExcept.Contents.length;anotherN++){\n     var anotherIndex = authorArea.indexOf(checkExcept.Contents[anotherN]);\n     if(anotherIndex >= checkLintEnd){\n     if(checkExcept.ContentWrap){\n     authorArea = authorArea.substring(0,anotherIndex) + ResultWrap + authorArea.substring(anotherIndex,authorArea.length);\n     }\n     isNormal = false;\n     }\n    \n     }\n     }\n     var multiAuthorCheck = false;\n     if(isNormal){\n     multiAuthorCheck = checkMultAuthorLink();\n     }\n    \n     var checker = (multiAuthorCheck)?(ResultWrap+\"※共同制作\"):\"\";\n     authorArea = authorArea.split(\"]]\").join(\"\");\n     checker = (authorArea.indexOf(\"改稿\") > 0)?\"\":checker;\n     authorArea += checker;\n    \n     function checkMultAuthorLink(){\n     var ArrayCheck = authorArea.split(\"[[user \");\n     if(Array.isArray(ArrayCheck)){\n     return (ArrayCheck.length > 2);\n     }\n     return false;\n    \n     }\n\n     }\n    \n     }\n     function runRoughlySearch(){\n     //[[user hogehoge]]という形を想定した解析　共著者は取得できない\n     var startSearchPoint = targetRow.indexOf(target)+target.length;\n     for(var i = startSearchPoint;i < targetRow.length;i++){\n     if(targetRow.charAt(i) == \"[\" || targetRow.charAt(i) == \"/\"){\n     break;\n     }\n     }\n    \n     for(var j = i;j < targetRow.length;j++){\n     if(targetRow.charAt(j) == \"]\" || targetRow.charAt(j) == \"/\" || j == targetRow.length-1){\n     if(j == targetRow.length-1){\n     j++\n     }\n     authorArea = targetRow.substring(i,j);\n     break;\n     }\n     }\n     RowAuthorText = targetRow.substring(i,targetRow.length);\n     }\n    }\n    \n    //メタタイトルを取得する\n    function getMetaTitle(){\n     var resultTitle = \"\";\n     resultTitle = targetRow.substring(targetRow.indexOf(\"]\"),targetRow.length);\n     while(resultTitle.indexOf(\"]\") == 0){\n     resultTitle = resultTitle.substring(1,resultTitle.length);\n     }\n     resultTitle = resultTitle.split(\"\\n\").join(\"\");\n    \n     resultTitle = resultTitle.substring(0,(resultTitle.length - RowAuthorText.length));\n     //メタタイトルの末尾にある-(ダッシュ)を消す\n     if(!isNullOrWhiteSpace(resultTitle)){\n     resultTitle = resultTitle.trim();\n     if(!isNullOrWhiteSpace(resultTitle)){\n     if(resultTitle.length > 2){\n     resultTitle = resultTitle.substring(0,resultTitle.length-1);\n     }\n     }\n     }\n     //メタタイトルの始点が\" -\"でなく\"-\"であるならば、半角スペースを付け足す\n     if(!resultTitle.match(/^ \\-/) && resultTitle.match(/^\\-/)){\n     resultTitle = \" \" + resultTitle;\n     }\n     return resultTitle;\n    }\n    \n}\n\n\nfunction createList001JPProposalList(){\n    var textArea = document.getElementById(\"SCP-001-JP\").innerHTML;\n    var target = '[[div class=\"content-panel standalone series\"]]';\n    textArea = textArea.substring(textArea.indexOf(target)+target.length,textArea.length);\n    var link = \"\";\n    var startIndex = 0;\n    var endIndex = 0;\n    var title = \"\";\n    var fullname = \"\";\n    var metatitle = \"\";\n    while(textArea.indexOf(\"[[[\") >= 0){\n     startIndex = textArea.indexOf(\"|\");\n     endIndex = textArea.indexOf(\"]]]\");\n     title = textArea.substring(startIndex+1,endIndex);\n     fullname = textArea.substring(textArea.indexOf(\"[[[\")+3,startIndex);\n     metatitle = getMetaTitleJP(textArea,textArea.indexOf(fullname));\n     fullname = replasticPageName(fullname);\n     link += '<span class=\"fake-link\" onclick=\"searchProposalJP('+\"'\"+fullname+\"','\"+metatitle.replace(/\"/g,'&quot;')+\"'\"+')\">'+title+\"</span><br />\";\n     textArea = textArea.substring(endIndex+3,textArea.length);\n    }\n    return link;\n    \n}\n\n//SCP-JPおよびSCP-JP-EXのメタタイトルを取得する\nfunction getSCPJPmetaTitle(name){\n    var result = \"\";\n    name = name.trim();\n    var number = 1;\n    var target = \"jp\";\n    if(name.match(/EX$/)){\n     target = \"jp-ex\";\n    }\n    if(name.match(/ARC$/)){\n     target = \"jp-arc\";\n    }\n    if(target == \"jp\"){\n     var analysisSCP = name.split(\"-\");\n     number = Number(analysisSCP[1].trim());\n    }\n    var allList;\n    switch(target){\n     case \"jp\":\n     if(number < 1000){\n     allList = document.getElementById(\"scp-jp001-999\").innerHTML;\n     }else if(number < 2000){\n     allList = document.getElementById(\"scp-jp1000-1999\").innerHTML;\n     }else if(number < 3000){\n     allList = document.getElementById(\"scp-jp2000-2999\").innerHTML;\n     }else{\n     allList = document.getElementById(\"scp-jp001-999\").innerHTML;\n     }\n     break;\n     case \"jp-arc\":\n     allList = document.getElementById(\"scp-jp-arc\").innerHTML;\n     break;\n     case \"jp-ex\":\n     allList = document.getElementById(\"scp-jp-ex\").innerHTML;\n     break;\n    }\n    var testResult = removeDummyNumber(name,allList);\n    if(testResult.index >= 0){\n     result = getMetaTitleJP(testResult.list,testResult.index);\n    }\n    return result;\n}\n\n//JP-Jの取得\nfunction getJPJPageName(name){\n    //Jp-Jのリストページの取得\n    var resultObject = {\n     fullname:\"\",\n     metatitle:\"\"\n    }\n    var targetArea = document.getElementById(\"SCP-JP-J\").innerHTML;\n    var start = targetArea.indexOf(name);\n    \n    if(start < 0){\n     resultObject.fullname = \"scp-jp-nothing\";\n     return resultObject;\n    }\n    resultObject.metatitle = getMetaTitleJP(targetArea,start);\n    //構文解析\n    var check = [0,0];\n    for(var i = (start+name.length);i < targetArea.length;i++){\n     if(targetArea.charAt(i) == \"]\"){\n     check[1]++;\n     if(check[0] < 1)check[0]++\n     }else{\n     if(check[0] > 0)break\n     }\n    }\n    //[[[<paraname>]]]もしくは[[[<pagename>|<pagetitle>]]]\n    if(check[1] == 3){\n     for(i = start;i > 0;i--){\n     if(targetArea.charAt(i) == \"|\"){\n     //[[[<pagename>|<pagetitle>]]]\n     splitAndGetPageName(\"|\"+name);\n     break;\n     }\n     if(targetArea.charAt(i) == \"[\"){\n     //[[[<pagename>]]]\n     targetArea = name;\n     break;\n     }\n     }\n    }\n    if(check[1] == 1){\n     for(i = start;i > 0;i--){\n     if(targetArea.charAt(i) == \" \"){\n     //[<pagename> <pagetitle>]\n     splitAndGetPageName(\" \"+name);\n     break;\n     }\n     if(targetArea.charAt(i) == \"[\"){\n     //[<pagename>]\n     targetArea = name;\n     break;\n     }\n     }\n    }\n    resultObject.fullname = replasticPageName(targetArea);\n    return resultObject;\n    \n    function splitAndGetPageName(word){\n     var list = targetArea.split(name);\n     for(var i = list[0].length;i--;i > 0){\n     if(list[0].charAt(i)==\"[\")break;\n     }\n     targetArea = list[0].substring(i+1,list[0].length-1);\n    }\n}\n\n//JP一覧のメタタイトルを取得する\nfunction getMetaTitleJP(allList,indexNumber){\n    allList = allList.substring(indexNumber,allList.length);\n    allList = (allList.split(\"\\n\"))[0];\n    var breakPoint = allList.indexOf(\"]\");\n    if(breakPoint >= 0){\n     allList = allList.substring(breakPoint,allList.length);\n    }\n    while(allList.indexOf(\"]\") == 0){\n     allList = allList.substring(1,allList.length);\n    }\n    return trasrateWikidotToHtml(allList);\n\n}\n\n\n//ページネームを成型する\nfunction replasticPageName(sentence){\n    var HomeTopBase = \"http://ja.scp-wiki.net/\";\n    var startDomain = sentence.indexOf(HomeTopBase);\n    if(startDomain >= 0){\n        sentence = sentence.substring((HomeTopBase.length+startDomain),sentence.length);\n    }\n    //最初の/を除去\n    if(sentence.charAt(0)==\"/\")sentence = sentence.substring(1,sentence.length);\n    //末尾のスペースを除去\n    while(sentence.charAt(sentence.length-1)==\" \")sentence = sentence.substring(0,sentence.length-1);\n    sentence = sentence.replace(/[^a-zA-Z0-9:\\]\\[]/g, \"-\");\n    while(sentence.match(/\\-\\-/g)){\n    sentence = sentence.replace(/\\-\\-/g, \"-\");\n    }\n    return sentence;\n}\n\n</script>\n[[/html]]\n[[/module]]\n[[/div]]\n\n\n[[include credit:start |mode=no-rate]]\n\n**タイトル:** SCP作者検索\n**著者:** SCP財団\n**作成年:** 2017\n----\n本ページはSCPコミュニティのために作成され、SCP財団に帰属します。本ページの管理は[[[meet-the-staff-jp|サイトスタッフ]]]に委任されています。\n\n[[include credit:end]]\n\n+ 説明\n指定したSCP記事の作者名を検索します。\n\nJP以外のSCP記事については\"[[[http://scp-jp.wikidot.com/credits|翻訳記事の著作者一覧]]]\"のページを検索して結果を表示します。\"翻訳記事の著作者一覧\"に作者名が記載されていない場合は検索にヒットしません。\n\nJPの記事についてはListPagesモジュールを使用し、そのページの作成者を作者として表示します。従ってJPにおいては共著及び改稿の表記には対応しておりません。ご了承ください。\n\n+ 使い方\nSCP番号入力欄に作者名を調べたいSCP番号を入力し、\"検索\"ボタンを押すかエンターキーを押してください。001とそれ以外のSCPで動作が異なるのでご留意ください。\n\n++ 一般SCP\n半角のカンマ（,）で区切って複数のSCPを同時に検索する事ができます。例として下記のURLで表示されるページのSCP番号入力（検索ワード）をご覧ください。\nhttp://ja.scp-wiki.net/archived:scpauthorssearch/OriginalSearch/SCP-106,SCP-173,SCP-682\n\n++ 各支部の001\n単独でしか検索する事ができません。検索語その支部の001提言のリストが表示されますので作者名を見たい001提言の名前をクリックしてください。\n\n+ その他\nわからない事やバグと思われる動作の報告はこのページのディスカッションにお願いします。バグ報告の場合は検索したSCP番号（検索した語句をそのままコピペするのが望ましい）を記述してくれると助かります。\n[!--\n[[code type=\"javascript\"]]\n//メタタイトルもしくはリンク文に異なるSCP番号があった際の検索を回避する\nfunction removeDummyNumber(name,allList){\n    //pagenameが一致したindexOf及び加工後のテキストデータを返す\n    //返って来るindexOfの値は加工後のテキストデータに対する値である事に注意\n    var search = false;\n    var TruthNumber = false;\n    var testList = \"\";\n    var resultSearch = {\n     index:-1,\n     list:\"\"\n    }\n    //テキストから該当の検索語句が見つかった場合その行が本当に正しい行か判定を行う\n    var startPoint = allList.indexOf(name);\n    if(startPoint >= 0){\n     search= true;\n    }\n    \n    while(search){\n     for(var i = startPoint;i >= 0;i--){\n     if(allList.charAt(i) == \" \" || allList.charAt(i) == \"|\"){\n     //検索該当行が[pagename pagetitle]か[[[pagename|pagetitle]]]の形式の場合pagenameの検査を行う\n     testList = allList.substring(0,i);\n     if(testList.indexOf(name) >= 0 || testList.indexOf(name.toLowerCase()) >= 0){\n     //一致していた場合検査を終了する\n     search = false;\n     TruthNumber = true;\n     break;\n     }else{\n     //pagenameが一致しない場合検索該当箇所より上部のテキストを削除し、また下方検索を行う。\n     allList = allList.substring(startPoint+name.length,allList.length);\n     startPoint = allList.indexOf(name);\n     if(startPoint < 0){\n     search = false;\n     }\n     }\n     }else if(allList.charAt(i) == \"[\"){\n     //リンク文章が含まれていない場合検査を終了する\n     search = false;\n     TruthNumber = true;\n     break;\n     }\n     }\n\n    }\n    if(TruthNumber){\n     //pagenameが一致する行を見つけた場合その結果を格納する\n     resultSearch.index = startPoint;\n     resultSearch.list = allList;\n    }\n    //値を返す\n    return resultSearch;\n\n}\n\n//100未満のSCP番号に対して、もし文頭に0の文字がついていない場合、付け足す\nfunction addPrefixZeroForSCP(originalText){\n    if(isNullOrWhiteSpace(originalText)){\n     return originalText;\n    }\n    //SCP番号格納セクション\n    var SCPNumberSection = 1;\n    \n    //SCP番号をセクションごとに分解\n    var analysisSCP = originalText.split(\"-\");\n    if(analysisSCP.length < 2){\n     return originalText;\n    }\n    //多くの場合のSCP番号格納セクション部から余白を除去\n    analysisSCP[SCPNumberSection] = analysisSCP[SCPNumberSection].trim();\n    analysisSCP[SCPNumberSection] = analysisSCP[SCPNumberSection].toUpperCase();\n    \n    //SCP-[支部]表記の支部\n    var middleBranch = [\"CN\",\"PL\",\"ES\"];\n    //上記の支部のSCPであるか検索\n    for(var i = 0;i < middleBranch.length;i++){\n     if(analysisSCP[SCPNumberSection] == middleBranch[i]){\n     //中間に支部名があるSCPの場合番号格納セクションを更新する\n     SCPNumberSection = 2;\n     break;\n     }\n    }\n    if(isNullOrWhiteSpace(analysisSCP[SCPNumberSection])){\n     return originalText;\n    }\n    //番号変換を試みる\n    var testNan = Number(analysisSCP[SCPNumberSection]);\n    //番号変換が不可能な場合、値が100以上である場合、100未満でなおかつ3文字以上の文字列である場合処理を終える\n    if(isNaN(testNan)){\n     return originalText;\n    }\n    if(testNan >= 100){\n     return originalText;\n    }\n    if(analysisSCP[SCPNumberSection].length >= 3){\n     return originalText;\n    }\n    \n    //番号格納部の文頭に\"0\"を付けたし返す\n    while(analysisSCP[SCPNumberSection].length < 3){\n     analysisSCP[SCPNumberSection] = \"0\" + analysisSCP[SCPNumberSection];\n    }\n    return analysisSCP.join(\"-\");\n\n}\n\n//対象文字列がnullもしくは空白かを判定する\nfunction isNullOrWhiteSpace(text){\n    if(text == undefined){\n     return true;\n    }\n    if(typeof(text) != 'string'){\n     return true;\n    }\n    if(text == null){\n     return true;\n    }\n    var testText = text.split(\" \").join(\"\");//半角スペースを除去\n    testText = testText.split(\"　\").join(\"\");//全角スペースを除去\n    return (testText.length == 0);\n}\n[[/code]]\n[[code type=\"javascript\"]]\n//検索結果表示に使う規定文字列\n\n//検索結果表示に使う改行コード\nvar ResultWrap = \"<br />\\n\";\nvar ResultWrap2 = \"<br />\\n<br />\\n\";\n\n//検索結果該当なしの場合の規定値\nvar nonHitResult = \"SCP財団に該当なし\" + ResultWrap2;\nvar nonHitResult2 = \"SCP財団に該当なし\" + ResultWrap;\n[[/code]]\n[[code type=\"javascript\"]]\n//各支部におけるSCP番号パターン（正規表現）を格納\nvar SCPVarietyPatternRegex = {\n    \"Normal\":{\n     \"KO\":new Array(),\n     \"RU\":new Array(),\n     \"DE\":new Array(),\n     \"FR\":new Array(),\n     \"IT\":new Array(),\n     \"TH\":new Array(),\n     \"UA\":new Array(),\n     \"PT\":new Array()\n    },\n    \"Joke\":{\n     \"KO\":new Array(),\n     \"RU\":new Array(),\n     \"DE\":new Array(),\n     \"FR\":new Array(),\n     \"IT\":new Array(),\n     \"TH\":new Array(),\n     \"UA\":new Array(),\n     \"PT\":new Array()\n    },\n    \"ARC\":{\n     \"KO\":new Array(),\n     \"RU\":new Array(),\n     \"DE\":new Array(),\n     \"FR\":new Array(),\n     \"IT\":new Array(),\n     \"TH\":new Array(),\n     \"UA\":new Array(),\n     \"PT\":new Array()\n    },\n    \"Decommissioned\":{\n     \"KO\":new Array(),\n     \"RU\":new Array(),\n     \"DE\":new Array(),\n     \"FR\":new Array(),\n     \"IT\":new Array(),\n     \"TH\":new Array(),\n     \"UA\":new Array(),\n     \"PT\":new Array()\n    }\n}\n\n\n//渡された文字列がどの支部のSCPか、及び各支部のURLを返す\nfunction getSCPAllBranch(targetparam){\n    var resultObject = {\n     url:\"http://www.scp-wiki.net/\",\n     branch:\"EN\"\n    }\n    var upperParam = targetparam.toUpperCase().trim();\n    if(isSCPJPRegex(upperParam) || isSCPJPJRegex(upperParam)){\n     resultObject.url = \"http://ja.scp-wiki.net/\";\n     resultObject.branch = \"JP\";\n    }\n    return getSCPOtherBranchRegex(upperParam,resultObject);\n\n}\n\n\n//渡された文字列（SCP番号）がSCP-JPかを正規表現で判定する\nfunction isSCPJPRegex(upperSearch){\nreturn (upperSearch.match(/^SCP\\-.*\\-JP$/) || upperSearch.match(/^SCP\\-.*\\-JP\\-EX$/) || upperSearch.match(/^SCP\\-.*\\-JP\\-ARC$/)\n    || upperSearch.match(/^SCP\\-.*\\-JP\\-RE$/)|| upperSearch.match(/^SCP\\-.*\\-JP\\-HW$/)|| upperSearch.match(/^SCP\\-.*\\-JP\\-EX\\-RE$/) || upperSearch.match(/^AF\\-.*\\-JP$/) );\n}\n\n//渡された文字列（SCP番号）がSCP-JP-Jかを正規表現で判定する\nfunction isSCPJPJRegex(upperSearch){\n    return (upperSearch.match(/^SC.*\\-JP\\-J$/) || upperSearch.match(/^SC.*\\-JP\\-EX\\-J$/)\n     || upperSearch.match(/^SC.*\\-JP\\-J.$/) || upperSearch.match(/^SC.*\\-JP\\-J。$/)\n     || upperSearch.match(/^SCP\\-.*\\-JP\\-J\\-RE$/)|| upperSearch.match(/^SCP\\-.*\\-JP\\-EX\\-J\\-RE$/)\n     || upperSearch.match(/^SCP\\-.*\\-JP\\-J\\-EX$/)|| upperSearch.match(/^SCP\\-.*\\-JP\\-J\\-J\\-EX$/));\n}\n\nfunction getSCPOtherBranchRegex(targetParam,resultObject){\n    if(isTargetBranchsSCPNumber(targetParam,\"KO\")){\n     resultObject.url = \"http://ko.scp-wiki.net/\";\n     resultObject.branch = \"KO\";\n    }else if(isTargetBranchsSCPNumber(targetParam,\"RU\")){\n     resultObject.url = \"http://scpfoundation.ru/\";\n     resultObject.branch = \"RU\";\n    }else if(isTargetBranchsSCPNumber(targetParam,\"FR\")){\n     resultObject.url = \"http://fondationscp.wikidot.com/\";\n     resultObject.branch = \"FR\";\n    }else if(isTargetBranchsSCPNumber(targetParam,\"DE\")){\n     resultObject.url = \"http://scp-wiki-de.wikidot.com/\";\n     resultObject.branch = \"DE\";\n    }else if(isTargetBranchsSCPNumber(targetParam,\"IT\")){\n     resultObject.url = \"http://fondazionescp.wikidot.com/\";\n     resultObject.branch = \"IT\";\n    }else if(isTargetBranchsSCPNumber(targetParam,\"TH\")){\n     resultObject.url = \"http://scp-th.wikidot.com/\";\n     resultObject.branch = \"TH\";\n    }else if(isTargetBranchsSCPNumber(targetParam,\"UA\")){\n     resultObject.url = \"http://scp-ukrainian.wikidot.com/\";\n     resultObject.branch = \"UA\";\n    }else if(isTargetBranchsSCPNumber(targetParam,\"PT\")){\n     resultObject.url = \"http://scp-pt-br.wikidot.com/\";\n     resultObject.branch = \"PT\";\n    }else if(targetParam.match(/^SCP\\-CN\\-/)){\n     resultObject.url = \"http://scp-wiki-cn.wikidot.com/\";\n     resultObject.branch = \"CN\";\n    }else if(targetParam.match(/^SCP\\-ES\\-/)){\n     resultObject.url = \"http://lafundacionscp.wikidot.com/\";\n     resultObject.branch = \"ES\";\n    }else if(targetParam.match(/^SCP\\-PL\\-/)){\n     resultObject.url = \"http://scp-wiki.net.pl/\";\n     resultObject.branch = \"PL\";\n    }\n    return resultObject;\n\n}\n\nfunction isTargetBranchsSCPNumber(targetParam,Branch){\n    if(SCPVarietyPatternRegex[\"Normal\"][Branch].length == 0){\n     SCPVarietyPatternRegex[\"Normal\"][Branch] = createSCPBranchSearchPattern(Branch,\"\");\n    }\n    for(var i = 0;i < SCPVarietyPatternRegex[\"Normal\"][Branch].length;i++){\n     if(targetParam.match(SCPVarietyPatternRegex[\"Normal\"][Branch][i])){\n     return true;\n     }\n    }\n    if(SCPVarietyPatternRegex[\"Joke\"][Branch].length == 0){\n     SCPVarietyPatternRegex[\"Joke\"][Branch] = createSCPBranchSearchPattern(Branch,\"Joke\");\n    }\n    for(var i = 0;i < SCPVarietyPatternRegex[\"Joke\"][Branch].length;i++){\n     if(targetParam.match(SCPVarietyPatternRegex[\"Joke\"][Branch][i])){\n     return true;\n     }\n    }\n    if(SCPVarietyPatternRegex[\"ARC\"][Branch].length == 0){\n     SCPVarietyPatternRegex[\"ARC\"][Branch] = createSCPBranchSearchPattern(Branch,\"ARC\");\n    }\n    for(var i = 0;i < SCPVarietyPatternRegex[\"ARC\"][Branch].length;i++){\n     if(targetParam.match(SCPVarietyPatternRegex[\"ARC\"][Branch][i])){\n     return true;\n     }\n    }\n    if(SCPVarietyPatternRegex[\"Decommissioned\"][Branch].length == 0){\n     SCPVarietyPatternRegex[\"Decommissioned\"][Branch] = createSCPBranchSearchPattern(Branch,\"Decommissioned\");\n    }\n    for(var i = 0;i < SCPVarietyPatternRegex[\"Decommissioned\"][Branch].length;i++){\n     if(targetParam.match(SCPVarietyPatternRegex[\"Decommissioned\"][Branch][i])){\n     return true;\n     }\n    }\n    return false;\n}\n\nfunction createSCPBranchSearchPattern(BR,runType){\n    //全支部取得の命令の場合、再帰的に全支部の正規表現リストを獲得する\n    if(BR == \"AllBranch\"){\n     getAllBranchRegex();\n     return;\n    }\n    var preFix = \"\\-\" + BR;\n    var End = \"$\";\n    var PatternList = [\n     \"\\-EX$\",\n    \n    ];\n    var PatternListJoke = [\n     \"\\-J\",\n     \"\\-EX\\-J\",\n     \"\\-J\\-EX\"\n    ];\n    var PatternListARC = [\"\\-ARC\"];\n    var PatternListDecommissioned = [\n     \"\\-D\",\n     \"\\-V\"\n     ];\n    var count = 0;\n    var NewRegexs = new Array();\n    switch(runType){\n     case \"Joke\":\n     for(count = 0;count < PatternListJoke.length;count++){\n     NewRegexs.push(new RegExp(preFix + PatternListJoke[count] + End));\n     }\n     break;\n     case \"ARC\":\n     NewRegexs = combineSpecialNumber(PatternListARC,PatternList,0);\n     NewRegexs = NewRegexs.concat(combineSpecialNumber(PatternListARC,PatternListJoke,1));\n     break;\n     case \"Decommissioned\":\n     NewRegexs = combineSpecialNumber(PatternListDecommissioned,PatternList,0);\n     NewRegexs = NewRegexs.concat(combineSpecialNumber(PatternListDecommissioned,PatternListJoke,1));\n     break;\n     default:\n     for(count = -1;count < PatternList.length;count++){\n     if(count < 0){\n     NewRegexs.push(new RegExp(\"^SCP\\-.*\" + preFix + End));\n     }else{\n     NewRegexs.push(new RegExp(\"^SCP\\-.*\" + preFix + PatternList[count] + End));\n     }\n     }\n     break;\n    \n    }\n    return NewRegexs;\n    //DやARCの様に他のSCPナンバーの更に末尾につく符号についての正規表現を生成する\n    function combineSpecialNumber(SpecialSymbol,targetSymbol,runType){\n     var NewRegexs2 = new Array();\n     var startSearch = 0;\n     if(runType == 0)startSearch = -1;\n     for(var j = startSearch;j < targetSymbol.length;j++){\n     if(j < 0){\n     for(var i = 0;i < SpecialSymbol.length;i++){\n     NewRegexs2.push(new RegExp(preFix + SpecialSymbol[i] + End));\n     }\n     }else{\n     for(var i = 0;i < SpecialSymbol.length;i++){\n     NewRegexs2.push(new RegExp(preFix + targetSymbol[j] + SpecialSymbol[i] + End));\n     }\n     }\n     }\n     return NewRegexs2;\n    }\n    \n    //各支部のSCP判定パターン（正規表現）を獲得する\n    function getAllBranchRegex(){\n     var BranchList = new Array();\n     var RunTypeList = new Array();\n     for(var RunTYpeName in SCPVarietyPatternRegex){\n     RunTypeList.push(RunTYpeName);\n     }\n     for(var branchName in SCPVarietyPatternRegex[RunTypeList[0]]){\n     BranchList.push(branchName);\n     }\n     for(var runCount = 0;runCount < RunTypeList.length;runCount++){\n     for(var BranchCount = 0;BranchCount < BranchList.length;BranchCount++){\n     createSCPBranchSearchPattern(BranchList[BranchCount],RunTypeList[runCount]);\n     }\n     }\n    }\n}\n\n\n\n[[/code]]\n--]",
  "tags": [
    "jp",
    "アーカイブ済み",
    "管理"
  ],
  "author": "C-take",
  "created_at": "2017-12-03T13:17:22+00:00",
  "updated_at": "2023-10-28T15:27:19+00:00",
  "rating": 22,
  "_site": "scp-jp",
  "_fullname": "archived:scpauthorssearch"
}
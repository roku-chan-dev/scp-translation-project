{
  "title": "Croqstyle CSS",
  "content": "[[module CSS]]\n@import url(https://scp-wiki.wdfiles.com/local--code/component%3Acroqstyle/1);\n[[/module]]\n\n[!-- Begin metacomponent context detection --]\n[!-- How this works:\n- The iftags doesn't render its contents when included on most pages, so this half of the context detector starts a comment block, and the one at the bottom of the page ends it. The metacomponent's documentation gets commented out and doesn't render.\n- When included on a component page, the metacomponent should be included inside //its// iftags. Iftags inside iftags don't work, they just render as plaintext, so the documentation is still commented out.\n- When on a component page and not inside nested iftags (i.e. only on the actual source page), the iftags renders its contents and closes the comment block early. The documentation is not commented out, and renders normally. (This also happens when included on a component page but not inside iftags - so don't do that)\n--]\n[!-- -[[iftags +component]]-][[/iftags]]\n\n[[div class=\"croqstyle__documentation\"]]\n\n[[>]]\n[[module Rate]]\n[[/>]]\n\n[[module css]]\n.croqstyle__documentation :is(h1, h2) {\n  font-family: Inter, sans-serif;\n  font-weight: bold;\n}\n.croqstyle__documentation h1 ~ h1 { margin-top: 6rem }\n.croqstyle__documentation h1 ~ h2 { margin-top: 3rem }\n\n.croqstyle__documentation #toc,\n.croqstyle__description {\n  border: thin solid #ddd;\n  padding: 1em;\n  background-color: transparent;\n}\n[[/module]]\n\n[[toc]]\n\n[[div class=\"croqstyle__description\"]]\n\n+ About Croqstyle\n\nCroqstyle is a bunch of miscellaneous CSS tweaks and utilities that I, [[*user Croquembouche]], use a lot and want to share.\n\nThis component:\n\n* Makes a few behind-the-scenes changes that improve the reading or writing experience e.g. monospaced text in the editor\n* Adds a few utilities for documenting components and themes e.g. custom styling for code blocks\n* Adds a few opt-in features for regular pages e.g. special image blocks\n\nCroqstyle is basically compatible with any theme as far as I know.\n\n++ Usage\n\nOn any wiki:\n\n[[div class=\"code terminal\"]]\n**##var(--c-keyword)|[[##**##var(--c-operator)|include## ##var(--c-value)|:scp-wiki:component:croqstyle##**##var(--c-keyword)|]]##**\n[[/div]]\n\nFor normal pages: Croqstyle should be included before any other component or theme, so that they can override it.\n\nFor components/themes: Croqstyle can be used on other components for their documentation -- include it inside the component's {{@@[[iftags]]@@}} block, so that your component's users are not forced to use Croqstyle. ([[[theme:flopstyle | or don't]]])\n\nYou don't have to include it like this -- feel free to look through and use my CSS at a starting point for new stuff, or steal just the bits you like.\n[[/div]]\n\n+ Source code\n\nHere's the source CSS for Croqstyle:\n\n[[collapsible show=\"+ show source CSS\" hide=\"- hide source CSS\"]]\n[[code type=\"css\"]]\n/* CROQSTYLE CSS */\n/* Source: https://scp-wiki.wikidot.com/component:croqstyle */\n\n@import url('https://fonts.googleapis.com/css2?family=Fira+Code:wght@400;700&display=swap');\n\n\n/* Little improvements */\n\n/* 1. Reasonably-sized footnotes */\n.hovertip { max-width: 400px; }\n\n/* 2. No more big avatar hover thingies */\n.avatar-hover { display: none !important; }\n\n/* 3. Monospace editor + code blocks */\n:root { --mono-font: \"Fira Code\", Cousine, monospace; }\n#edit-page-textarea, .code pre, .code p, .code, tt, .page-source {\n  font-family: var(--mono-font);\n}\n.code pre * { white-space: pre; }\n.code *, .pre * { font-feature-settings: unset; }\n.change-textarea-size { padding-right: 3em; }\n\n/* 4. Better image block positioning */\n@media (max-width: 550px), (min-width: 768px) and (max-width: 850px) {\n  .scp-image-block:is(.block-right, .block-left) {\n    float: none;\n    margin-inline: auto;\n  }\n}\n\n\n/* Documentation helpers */\n\n/* 1. Teletype backgrounds */\ntt {\n  background-color: var(--swatch-something-bhl-idk-will-fix-later, #f4f4f4);\n  font-size: 85%;\n  padding: 0.2em 0.4em;\n  margin: 0;\n  border-radius: 6px;\n}\n\n/* 2. Code colours */\n:root {\n  --croqstyle-terminal-light-bg: #ffffff;\n  --croqstyle-terminal-light-syntax: #000000;\n  --croqstyle-terminal-light-comment: #008000;\n  --croqstyle-terminal-light-error: #e51602;\n  --croqstyle-terminal-light-value: #267f99;\n  --croqstyle-terminal-light-symbol: #795e26;\n  --croqstyle-terminal-light-string: #a31515;\n  --croqstyle-terminal-light-operator: #0000ff;\n  --croqstyle-terminal-light-builtin: #14238a;\n  --croqstyle-terminal-light-keyword: #af00db;\n  --croqstyle-terminal-light-border: 0.1rem solid #444444;\n\n  --croqstyle-terminal-dark-bg: #1f1f1f;\n  --croqstyle-terminal-dark-syntax: #d4d4d4;\n  --croqstyle-terminal-dark-comment: #6a9955;\n  --croqstyle-terminal-dark-error: #cd4343;\n  --croqstyle-terminal-dark-value: #4dc8af;\n  --croqstyle-terminal-dark-symbol: #d9d9a7;\n  --croqstyle-terminal-dark-string: #ce9178;\n  --croqstyle-terminal-dark-operator: #5294ca;\n  --croqstyle-terminal-dark-builtin: #9adafb;\n  --croqstyle-terminal-dark-keyword: #c384be;\n  --croqstyle-terminal-dark-border: 0.3rem solid #bbbbbb;\n}\n.code.terminal, .terminal > .code {\n  color: var(--c-syntax);\n  background-color: var(--c-bg);\n  border: var(--croqstyle-terminal-border);\n  border-radius: 0.3rem;\n  margin-inline: 1em;\n}\n:root, .terminal--light {\n  --c-bg: var(--croqstyle-terminal-light-bg);\n  --c-syntax: var(--croqstyle-terminal-light-syntax);\n  --c-comment: var(--croqstyle-terminal-light-comment);\n  --c-error: var(--croqstyle-terminal-light-error);\n  --c-value: var(--croqstyle-terminal-light-value);\n  --c-symbol: var(--croqstyle-terminal-light-symbol);\n  --c-string: var(--croqstyle-terminal-light-string);\n  --c-operator: var(--croqstyle-terminal-light-operator);\n  --c-builtin: var(--croqstyle-terminal-light-builtin);\n  --c-keyword: var(--croqstyle-terminal-light-keyword);\n  --croqstyle-terminal-border: var(--croqstyle-terminal-light-border);\n}\n.terminal--dark {\n  --c-bg: var(--croqstyle-terminal-dark-bg);\n  --c-syntax: var(--croqstyle-terminal-dark-syntax);\n  --c-comment: var(--croqstyle-terminal-dark-comment);\n  --c-error: var(--croqstyle-terminal-dark-error);\n  --c-value: var(--croqstyle-terminal-dark-value);\n  --c-symbol: var(--croqstyle-terminal-dark-symbol);\n  --c-string: var(--croqstyle-terminal-dark-string);\n  --c-operator: var(--croqstyle-terminal-dark-operator);\n  --c-builtin: var(--croqstyle-terminal-dark-builtin);\n  --c-keyword: var(--croqstyle-terminal-dark-keyword);\n  --croqstyle-terminal-border: var(--croqstyle-terminal-dark-border);\n}\n\n/* 3. Debug mode */\n.debug-mode, .debug-mode *, .debug-mode *::before, .debug-mode *::after {\n  outline: thin solid var(--debug-colour, red);\n  position: relative;\n}\n.debug-info {\n  position: absolute;\n  left: 50%;\n  transform: translateX(-50%);\n  font-family: 'Fira Code', monospace;\n  font-size: 1rem;\n  white-space: nowrap;\n}\n.debug-info.over { top: -2.5rem; }\n.debug-info.under { bottom: -2.5rem; }\n.debug-info p { margin: 0; }\n\n\n/* Opt-in features */\n\n/* 1. Improved image block */\n/* Custom image block with alt text, hover zoom, high res swap and WEBP support\n * Define low res (~300px wide) image via --image-url CSS var\n * Define high res (~1000px wide) image via --image-large-url CSS var (optional)\n * Define aspect ratio (as 'H / W') via --aspect-ratio CSS var\n */\n.croqstyle-image-block .scp-image-alt {\n  position: relative;\n  font-size: 0;\n  aspect-ratio: var(--aspect-ratio);\n}\n.croqstyle-image-block .scp-image-alt::before {\n  content: \"\"; position: absolute; inset: 0;\n  pointer-events: none;\n  background-image: var(--image-url);\n  background-size: cover, 0.6rem, cover;\n  background-position: center, left 0.3rem bottom 0.3rem, center;\n  background-repeat: no-repeat;\n  transition: transform 0.3s ease-in-out;\n}\n@media (prefers-reduced-motion) {\n  .croqstyle-image-block .scp-image-alt::before {\n    transition-duration: 0s;\n  }\n}\n@media (min-width: 670px) and (max-width: 767px), (min-width: 940px) {\n  .croqstyle-image-block .scp-image-alt:hover::before {\n    background-image: var(--image-large-url, var(--image-url)), url(https://scp-wiki.wdfiles.com/local--files/component%3Acroqstyle/loading.gif), var(--image-url);\n    transform: scale3d(1.6, 1.6, 1);\n    z-index: 1;\n  }\n}\n.croqstyle-image-block.block-right .scp-image-alt::before { transform-origin: 90% center }\n.croqstyle-image-block.block-left .scp-image-alt::before { transform-origin: 10% center }\n.croqstyle-image-block .scp-image-alt img {\n  width: 100%;\n  height: 100%;\n  object-fit: center;\n}\n\n/* 2. Image footnotes */\n/* Custom footnote that uses the same vars as the image block above */\n.croqstyle-img-footnote {\n  position: relative;\n  --croqstyle-img-footnote-link-color: rgb(var(--link-color, 187,0,17));\n  text-decoration: var(--croqstyle-img-footnote-link-color) dashed underline;\n  cursor: help;\n}\n.croqstyle-img-footnote::after {\n  content: \"\";\n  display: inline-block;\n  /* https://icon-sets.iconify.design/material-symbols/image-outline/ */\n  --croqstyle-img-footnote-icon-url: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='1em' height='1em' viewBox='0 0 24 24'%3E%3Cpath fill='%23000' d='M5 21q-.825 0-1.412-.587T3 19V5q0-.825.588-1.412T5 3h14q.825 0 1.413.588T21 5v14q0 .825-.587 1.413T19 21zm0-2h14V5H5zm1-2h12l-3.75-5l-3 4L9 13zm-1 2V5z'/%3E%3C/svg%3E\");\n  -webkit-mask-image: var(--croqstyle-img-footnote-icon-url);\n          mask-image: var(--croqstyle-img-footnote-icon-url);\n  -webkit-mask-size: cover;\n          mask-size: cover;\n  -webkit-mask-position: center;\n          mask-position: center;\n  background-color: var(--croqstyle-img-footnote-link-color);\n  width: 1em; height: 1em;\n  vertical-align: super;\n  font-size: smaller;\n  line-height: normal;\n}\n.croqstyle-img-footnote::before {\n  content: \"\";\n  display: block;\n  position: absolute;\n  aspect-ratio: var(--aspect-ratio);\n  height: 16rem;\n  border: thin solid grey;\n  background-color: white;\n  background-image: var(--image-url);\n  background-size: 92.5%;\n  background-position: center;\n  background-repeat: no-repeat;\n  bottom: 0; left: 50%;\n  --croqstyle-img-footnote-icon-offset: 0px;\n  transform: translate(-50%, calc(100% + var(--croqstyle-img-footnote-icon-offset)));\n  z-index: 20;\n  opacity: 0;\n  pointer-events: none;\n  transition: opacity 0.2s ease, transform 0.2s ease;\n}\n.croqstyle-img-footnote:hover { --croqstyle-img-footnote-link-color: purple; }\n.croqstyle-img-footnote:hover::before {\n  opacity: 1;\n  pointer-events: initial;\n  --croqstyle-img-footnote-icon-offset: 0.5em;\n}\n@media (max-width: 1200px) {\n  .croqstyle-img-footnote { position: static; }\n  .croqstyle-img-footnote::before {\n    bottom: auto;\n    left: 50%;\n    transform: translate(-50%, calc(0px + var(--croqstyle-img-footnote-icon-offset)));\n  }\n}\n\n/* 3. Simple responsive div */\n.croqstyle-responsive-div {\n  container-type: inline-size;\n}\n.croqstyle-responsive-div__desktop {\n  display: none;\n}\n.croqstyle-responsive-div__mobile table {\n  margin-left: 0; /* Left align for consistent header row placement */\n}\n@container (min-width: 550px) {\n  .croqstyle-responsive-div__desktop { display: revert !important }\n  .croqstyle-responsive-div__mobile { display: none }\n}\n\n/* 4. Reset tabview */\n/* Undoes base Wikidot tab styling. These reset styles are derived from Wikidot's base theme. They override and undo all the tab styles in the base theme, matching the selectors exactly to cancel them out.\n* It might look like these selectors can be simplified, merged, reduced in complexity - they can't, because otherwise they wouldn't cancel out the base theme styling.\n*/\n/* Entire tabview */\n:where(.croqstyle-reset-tabs) .yui-navset { padding: initial; position: initial }\n/* List of tabs */\n:where(.croqstyle-reset-tabs) .yui-nav { margin: initial; padding: initial; list-style: initial }\n:where(.croqstyle-reset-tabs) .yui-navset .yui-nav { width: initial; position: initial; border: initial }\n/* Internal wrapper for each tab */\n:where(.croqstyle-reset-tabs) .yui-nav li { margin: initial; padding: initial; list-style: initial }\n:where(.croqstyle-reset-tabs) .yui-navset .yui-nav li { display: initial; vertical-align: initial; cursor: initial; margin: initial; padding: initial }\n:where(.croqstyle-reset-tabs) .yui-navset .yui-nav .selected { margin: initial }\n/* Each tab */\n:where(.croqstyle-reset-tabs) .yui-navset .yui-nav li a { background: initial; border: initial; color: initial; position: initial; text-decoration: initial; display: initial; vertical-align: initial }\n/* Selected tab */\n:where(.croqstyle-reset-tabs) .yui-navset .yui-nav .selected a { border-color: initial }\n/* Hovered tab */\n:where(.croqstyle-reset-tabs) .yui-navset .yui-nav a:is(:hover, :focus) { background: initial; outline: initial }\n/* Selected + hovered tab */\n:where(.croqstyle-reset-tabs) .yui-navset .yui-nav .selected :is(a, a:focus, a:hover) { background: initial; color: initial }\n/* Text in each tab */\n:where(.croqstyle-reset-tabs) .yui-navset .yui-nav li a em { font-style: initial; display: initial; border: initial; cursor: initial; padding: initial; left: initial; top: initial; position: initial }\n/* Text in the selected tab */\n:where(.croqstyle-reset-tabs) .yui-navset .yui-nav .selected a em { padding: initial; border-color: initial }\n/* Content panel */\n:where(.croqstyle-reset-tabs) .yui-navset .yui-content { background: initial; border: initial; padding: initial }\n[[/code]]\n[[/collapsible]]\n\n+ Little improvements\n\nThese are all passive changes that improve™ either the reading or editing experience.\n\n++ Reasonably-sized footnotes\n\nStops footnotes from being a million miles wide, so that you can actually read them.[[footnote]]They're this wide now, even if the text inside them is really really really really really really really really really really really really really long.[[/footnote]]\n\n\n++ No more big avatar hover thingies\n\nStops big pictures from appearing when you hover over someone's avatar image, because they're stupid and really annoying and you can just click on them if you want to see the big version.\n\nHover me and watch nothing happen: [[*user Croquembouche]]\n\n\n++ Monospace editor + code blocks\n\nMakes the edit textbox monospace, and also changes all monospace text to Fira Code, the obviously superior monospace font.\n\n\n++ Better image block positioning\n\nOn mobile-sized screens, image blocks can no longer overflow the width of the page.\n\nOn slightly larger screens, image blocks can no longer take up like 80% of the page leaving only a tiny strip of space for text to render one-word-per-line. At those widths, images will be centred and text won't be able to appear next to it.\n\n[[collapsible show=\"+ show screenshots of what this does\"]]\n\nBefore:\n\n|| [[image old-image-block-at-800px.half.png style=\"border: medium solid black; border-radius: 0.25rem\"]] || [[image old-image-block-at-510px.half.png style=\"border: medium solid black; border-radius: 0.25rem\"]] || [[image old-image-block-at-330px.half.png style=\"border: medium solid black; border-radius: 0.25rem\"]]  ||\n|| tablet _\n _\n(squished text) || large mobile _\n _\n(squished text) || small mobile _\n _\n(the image is cut off on the left side) ||\n\nAfter:\n\n|| [[image new-image-block-at-800px.half.png style=\"border: medium solid black; border-radius: 0.25rem\"]] || [[image new-image-block-at-510px.half.png style=\"border: medium solid black; border-radius: 0.25rem\"]] || [[image new-image-block-at-330px.half.png style=\"border: medium solid black; border-radius: 0.25rem\"]]  ||\n|| tablet || large mobile || small mobile ||\n\n[[/collapsible]]\n\n\n+ Documentation helpers\n\nThese are utilities intended for making it easier to document themes and components.\n\n++ Teletype backgrounds\n\nAdds a light grey background to <tt> elements ({{@@{{text}}@@}}), so code snippets stand out more.\n\n\n++ Code colours\n\nAdds some syntax highlighting colours as CSS variables. The syntax colours are taken from VSCode's default light and dark themes.\n\nYou can add the {{.terminal}} class to a fake code block as {{@@[[div class=\"code terminal\"]]@@}} to give it a pseudo-terminal look. Doesn't work with {{@@[[code]]@@}}, because Wikidot inserts a bunch of syntax highlighting that you can't change yourself without a bunch of CSS. Use it for non-{{@@[[code]]@@}} code snippets only. Enable dark mode with {{.terminal@@--@@dark}}:\n\n[[div style=\"display: flex; flex-wrap: wrap; align-items: start\"]]\n[[div class=\"code terminal\" style=\"flex: 250px; word-break: break-all\"]]\n**##var(--c-keyword)|[[####var(--c-builtin)|div## ##var(--c-symbol)|class##=##var(--c-string)|\"code terminal\"####var(--c-keyword)|]]##**\n\n@@**@@##var(--c-keyword)|@@##@@####var(--c-builtin)|var##(##var(--c-symbol)|@@--c-keyword@@##)##var(--c-keyword)|@@|@@##[[##var(--c-keyword)|@@##@@####var(--c-keyword)|@@##@@####var(--c-builtin)|var##(##var(--c-symbol)|@@--c-builtin@@##)##var(--c-keyword)|@@|@@##div##var(--c-keyword)|@@##@@## ##var(--c-keyword)|@@##@@####var(--c-builtin)|var##(##var(--c-symbol)|@@--c-symbol@@##)##var(--c-keyword)|@@|@@##class##var(--c-keyword)|@@##@@##=##var(--c-keyword)|@@##@@####var(--c-builtin)|var##(##var(--c-symbol)|@@--c-string@@##)##var(--c-keyword)|@@|@@##\"code terminal\"##var(--c-keyword)|@@##@@####var(--c-keyword)|@@##@@####var(--c-builtin)|var##(##var(--c-symbol)|@@--c-keyword@@##)##var(--c-keyword)|@@|@@##]]##var(--c-keyword)|@@##@@##@@**@@\n@@**@@##var(--c-keyword)|@@##@@####var(--c-builtin)|var##(##var(--c-symbol)|@@--c-keyword@@##)##var(--c-keyword)|@@|@@##[[/##var(--c-keyword)|@@##@@####var(--c-keyword)|@@##@@####var(--c-builtin)|var##(##var(--c-symbol)|@@--c-builtin@@##)##var(--c-keyword)|@@|@@##div##var(--c-keyword)|@@##@@####var(--c-keyword)|@@##@@####var(--c-builtin)|var##(##var(--c-symbol)|@@--c-keyword@@##)##var(--c-keyword)|@@|@@##]]##var(--c-keyword)|@@##@@##@@**@@\n\n**##var(--c-keyword)|[[/####var(--c-builtin)|div####var(--c-keyword)|]]##**\n[[/div]]\n\n[[div class=\"code terminal terminal--dark\" style=\"flex: 250px; word-break: break-all\"]]\n**##var(--c-keyword)|[[####var(--c-builtin)|div## ##var(--c-symbol)|class##=##var(--c-string)|\"code terminal terminal@@--@@dark\"####var(--c-keyword)|]]##**\n\n@@**@@##var(--c-keyword)|@@##@@####var(--c-builtin)|var##(##var(--c-symbol)|@@--c-keyword@@##)##var(--c-keyword)|@@|@@##[[##var(--c-keyword)|@@##@@####var(--c-keyword)|@@##@@####var(--c-builtin)|var##(##var(--c-symbol)|@@--c-builtin@@##)##var(--c-keyword)|@@|@@##div##var(--c-keyword)|@@##@@## ##var(--c-keyword)|@@##@@####var(--c-builtin)|var##(##var(--c-symbol)|@@--c-symbol@@##)##var(--c-keyword)|@@|@@##class##var(--c-keyword)|@@##@@##=##var(--c-keyword)|@@##@@####var(--c-builtin)|var##(##var(--c-symbol)|@@--c-string@@##)##var(--c-keyword)|@@|@@##\"code terminal terminal@@--@@dark\"##var(--c-keyword)|@@##@@####var(--c-keyword)|@@##@@####var(--c-builtin)|var##(##var(--c-symbol)|@@--c-keyword@@##)##var(--c-keyword)|@@|@@##]]##var(--c-keyword)|@@##@@##@@**@@\n@@**@@##var(--c-keyword)|@@##@@####var(--c-builtin)|var##(##var(--c-symbol)|@@--c-keyword@@##)##var(--c-keyword)|@@|@@##[[/##var(--c-keyword)|@@##@@####var(--c-keyword)|@@##@@####var(--c-builtin)|var##(##var(--c-symbol)|@@--c-builtin@@##)##var(--c-keyword)|@@|@@##div##var(--c-keyword)|@@##@@####var(--c-keyword)|@@##@@####var(--c-builtin)|var##(##var(--c-symbol)|@@--c-keyword@@##)##var(--c-keyword)|@@|@@##]]##var(--c-keyword)|@@##@@##@@**@@\n\n**##var(--c-keyword)|[[/####var(--c-builtin)|div####var(--c-keyword)|]]##**\n[[/div]]\n[[/div]]\n\n//Tools to auto-highlight: [https://rossjrw.com/series-replace/?f=%3D%28%20%2A%29%28%5B0-9%5D%2B%28%3F%3Apx%7Cem%7Crem%29%3F%7Ctrue%7Cfalse%7Cyes%7Cno%29%5Cn%28%5C%7C%7C%5D%5D%29&f=%3D%28%20%2A%29%28%5Ba-z0-9-%5D%2B%29%5Cn%28%5C%7C%7C%5D%5D%29&f=%5C%7C%20%2A%28%5BA-z-%5D%2B%29%28%20%2A%3D%20%2A%29%3C%3C%3C%28value%7Csymbol%29%23%23%23%28.%2A%29%3E%3E%3E&f=%5C%7C%20%2A%28%5BA-z-%5D%2B%29%28%20%2A%3D%20%2A%29%28%28%3F%3A%28%3F%21%5C%7C%7C%5D%5D%29.%29%2A%29&f=%28%3F%3A%40%40%29%3F%5C%5B%5C%5Binclude%20%28.%2A%29%28%3F%3A%40%40%29%3F%28%5Cn%7C%20%29&f=%5D%5D&i=%5B%5Binclude%20%3Ascp-wiki%3Acomponent%3Acroqstyle%0A%7C%20number-arg%20%3D%20100px%0A%7C%20string-arg%20%3D%20Input%20value%0A%5D%5D&r=%3D%241%3C%3C%3Cvalue%23%23%23%242%3E%3E%3E%5Cn%243&r=%3D%241%3C%3C%3Csymbol%23%23%23%242%3E%3E%3E%5Cn%243&r=%23%23var%28--c-keyword%29%7C%7C%23%23%20%23%23var%28--c-builtin%29%7C%241%23%23%23%23var%28--c-keyword%29%7C%242%23%23%23%23var%28--c-%243%29%7C%244%23%23&r=%23%23var%28--c-keyword%29%7C%7C%23%23%20%23%23var%28--c-builtin%29%7C%241%23%23%23%23var%28--c-keyword%29%7C%242%23%23%23%23var%28--c-string%29%7C%243%23%23&r=%23%23var%28--c-keyword%29%7C%5B%5B%23%23%23%23var%28--c-builtin%29%7Cinclude%23%23%20%23%23var%28--c-symbol%29%7C%241%23%23%242&r=%23%23var%28--c-keyword%29%7C%5D%5D%23%23 component includes] · [https://rossjrw.com/series-replace/?f=%5C%5B%21--%20.%2A%3F%20--%5D&f=%28%3F%3C%3D%5C%5B%5C%5B%28%3F%3Adiv%7Cspan%29.%2A%29%28%5Ba-z-%5D%2B%29%3D%28%22%5B%5E%22%5D%2A%22%29&f=%28%3F%3C%3D%5C%5B%5C%5B%2F%3F%28%3F%3Adiv%7Cspan%29.%2A%29%5C%5D%5C%5D&f=%28%5C%5B%5C%5B%2F%3F%29%28div%7Cspan%29&i=%5B%5Bdiv%20class%3D%22class-1%20class-2%22%20data-example%3D%22test%22%5D%5D%20%5B%21--%20comment%20--%5D%0ANormal%20text%0A%5B%5Bspan%20class%3D%22eggs%22%5D%5DText%20in%20span%5B%5B%2Fspan%5D%5D%0A%5B%5B%2Fdiv%5D%5D&r=%23%23var%28--c-comment%29%7C%40%40%24%26%40%40%23%23&r=%23%23var%28--c-symbol%29%7C%241%23%23%3D%23%23var%28--c-string%29%7C%40%40%242%40%40%23%23&r=%23%23var%28--c-keyword%29%7C%5D%5D%23%23&r=%23%23var%28--c-keyword%29%7C%241%23%23%23%23var%28--c-builtin%29%7C%242%23%23 divs and spans]//\n\n\n++ Debug mode\n\n[[div class=\"debug-mode\" style=\"margin-bottom: 4rem;\"]]\n\nDraw lines around anything inside {{.debug-mode}}. The colour of the lines is red but defers to CSS variable {{@@--@@debug-colour}}.\n\nYou can also add {{div.debug-info.over}} and {{div.debug-info.under}} inside an element to annotate the debug boxes -- though you'll need to make sure to leave enough vertical space that the annotation doesn't overlap the thing above or below it.\n\n[[div class=\"debug-info under\"]]\n...like this!\n[[/div]]\n[[/div]]\n\n\n+ Opt-in features\n\nThese are new features and widgets that you can add to your page if you like. All of these opt-in features have CSS classes starting with 'croqstyle', so there's zero risk of contaminating anything on your page if you're not using them.\n\n++ Improved image block\n\n[[div class=\"croqstyle-image-block scp-image-block block-right\" style=\"--aspect-ratio: 1 / 1; --image-url: url(https://scp-wiki.wdfiles.com/local--files/component%3Acroqstyle/lowres.png); --image-large-url: url(http://scp-wiki.wdfiles.com/local--files/component%3Acroqstyle/highres.webp);\"]]\n[[div class=\"scp-image-alt\"]]\n\"Low-res image\" and the image resolution (300x300) written on a pixelated background. When hovered the image changes to say \"High-res image\" and the new resolution of (1200x1200).\n[[/div]]\n[[div class=\"scp-image-caption\"]]\nImage caption\n[[/div]]\n[[/div]]\n\nProvides an improved image block with more features, including:\n\n* Hover zoom is built-in, similar to the 'Hover Enlarge' style provided by [[*user Woedenaz]]' [[[component:image-features|]]] component\n* Built-in alt text.\n* Supports showing a higher-resolution image when you hover it (unlike //Image Features//, which shows the same image but bigger), and even shows a loading icon while the larger image is downloaded.\n\nPlease don't make the hover image different to the unhovered image as a jumpscare, that's very cringe. This is an accessibility tool.\n\nTo use, insert the following syntax (which closely matches the source of the [[[component:image-block | standard image block]]]):\n\n[[div class=\"code terminal\"]]\n##var(--c-keyword)|[[####var(--c-builtin)|div## ##var(--c-symbol)|class##=##var(--c-string)|\"**croqstyle-image-block** scp-image-block block-right\"## ##var(--c-symbol)|style##=##var(--c-string)|@@\"--aspect-ratio: 1 / 1; --image-url: url(lowres.png); --image-large-url: url(highres.webp);\"@@####var(--c-keyword)|]]##\n##var(--c-keyword)|[[####var(--c-builtin)|div## ##var(--c-symbol)|class##=##var(--c-string)|@@\"scp-image-alt\"@@####var(--c-keyword)|]]##\nAlt text goes here, which describes the content of the image for non-sighted users et al - e.g. if the image contains information, write it in plaintext here; or if the image invokes a particular feeling, describe that feeling here.\n##var(--c-keyword)|[[/####var(--c-builtin)|div####var(--c-keyword)|]]##\n##var(--c-keyword)|[[####var(--c-builtin)|div## ##var(--c-symbol)|class##=##var(--c-string)|@@\"scp-image-caption\"@@####var(--c-keyword)|]]##\nImage caption\n##var(--c-keyword)|[[/####var(--c-builtin)|div####var(--c-keyword)|]]##\n##var(--c-keyword)|[[/####var(--c-builtin)|div####var(--c-keyword)|]]##\n[[/div]]\n\nReplace {{block-right}} with {{block-left}} or {{block-center}} for left and centre alignment respectively. You can put a fallback image inside {{.scp-image-alt}} using standard {{@@[[image]]@@}} syntax if you like.\n\nIf you don't want to provide a different image for the large version, you can omit the {{@@--@@image-large-url}} CSS variable -- the image in {{@@--@@image-url}} will be used both when zoomed and not zoomed.\n\nIf you don't want the hover zoom feature, there's no reason to use this -- use the standard image block instead.\n\n[[collapsible show=\"+ show tips for advanced users\"]]\n**For advanced CSS users:**\n\nNote that the aspect ratio and image URLs are set via CSS variables. In this example they're set by the style attribute, but you can set them however you like (e.g. via a class defined in a CSS module).\n\n**For advanced image editors:**\n\nIf the larger image is a WEBP, make sure that it has the transparency feature enabled - otherwise, when it starts loading, the rest of the smaller image will get blanked out until it's finished loading.\n\nTo enable the transparency feature, before you convert the image to WEBP, just make sure it has at least one pixel that's at least partially transparent.\n\nYou can do that in image editing software, alternatively here's an ImageMagick command that does it:\n\n[[div class=\"code terminal\"]]\nconvert -alpha on -channel A -fx 'j==h-1 && i==w-1 ? A*0.99 : A' image_original.png image_original_with_transparency.png\n\ncwebp -q 80 image_original_with_transparency.png -o image.webp\n[[/div]]\n[[/collapsible]]\n\n\n++ Image footnotes\n\nProvides a class that adds [[span class=\"croqstyle-img-footnote\" style=\"--aspect-ratio: 1 /1; --image-url: url(https://scp-wiki.wdfiles.com/local--files/component%3Acroqstyle/lowres.png);\"]]image footnotes[[/span]] to stuff. They're like regular footnotes, but for images.\n\n[[div class=\"code terminal\"]]\n##var(--c-keyword)|[[####var(--c-builtin)|span## ##var(--c-symbol)|class##=##var(--c-string)|@@\"croqstyle-img-footnote\"@@## ##var(--c-symbol)|style##=##var(--c-string)|@@\"--aspect-ratio: 1 /1; --image-url: url(lowres.png);\"@@####var(--c-keyword)|]]##Example.##var(--c-keyword)|[[/####var(--c-builtin)|span####var(--c-keyword)|]]##\n[[/div]]\n\nIt uses the same CSS variables as the 'improved image block' feature above, so it's handy to define a CSS class per image, and then you can use that for both features.\n\nYou can actually already put images in footnotes using standard Wikidot syntax:\n\n[[div class=\"code terminal\"]]\n##var(--c-keyword)|[[####var(--c-builtin)|footnote####var(--c-keyword)|]][[####var(--c-builtin)|image## ##var(--c-string)|imagegoeshere.png####var(--c-keyword)|]][[/####var(--c-builtin)|footnote####var(--c-keyword)|]]##\n[[/div]]\n\nThat looks like this.[[footnote]][[image lowres.png]][[/footnote]]\n\nThe {{croqstyle-img-footnote}} class provided by Croqstyle is a little bit different to regular footnotes:\n\n* It highlights a word or phrase as the context, not just a number\n* It doesn't add the footnote to the footnote list, giving you the freedom to repeat image footnotes as often as you like without clogging up the bottom of the page.\n\nThey work well as 'reminder footnotes' to help the reader recall what e.g. an SCP looks like, without needing to scroll back up to the original picture.\n\n\n++ Simple responsive div\n\nProvides some classes for a simple responsive div that shows one set of contents for desktop users and another for mobile users.\n\nHere's the markup:\n\n[[div class=\"code terminal\"]]\n##var(--c-keyword)|[[####var(--c-builtin)|div## ##var(--c-symbol)|class##=##var(--c-string)|@@\"croqstyle-responsive-div\"@@####var(--c-keyword)|]]##\n##var(--c-keyword)|[[####var(--c-builtin)|div## ##var(--c-symbol)|class##=##var(--c-string)|@@\"croqstyle-responsive-div__desktop\"@@## ##var(--c-symbol)|style##=##var(--c-string)|@@\"display: none\"@@####var(--c-keyword)|]]##\nDesktop content goes here\n##var(--c-keyword)|[[/####var(--c-builtin)|div####var(--c-keyword)|]]##\n##var(--c-keyword)|[[####var(--c-builtin)|div## ##var(--c-symbol)|class##=##var(--c-string)|@@\"croqstyle-responsive-div__mobile\"@@####var(--c-keyword)|]]##\nMobile content goes here\n##var(--c-keyword)|[[/####var(--c-builtin)|div####var(--c-keyword)|]]##\n##var(--c-keyword)|[[/####var(--c-builtin)|div####var(--c-keyword)|]]##\n[[/div]]\n\n(That {{display: none}} style is there so that if this get copied onto a page without croqstyle, or if croqstyle gets removed from the page, it gracefully falls back to showing the mobile version without breaking anything)\n\nThe 'mobile' style will be activated any time the page content area is less than 550 pixels wide. That takes into account not only the screen width but also themes and [[[component:toggle-sidebar | whether or not the sidebar is present]]] (e.g. you know that one breakpoint at about ~800px where the desktop sidebar appears and there's only a bit of space for the content?) so it should be pretty resilient to anything you throw at it.\n\nDo note that {{.croqstyle-responsive-div}} must be a div as wide as the full page that wraps any responsive content, and you might even be able to wrap your entire page in it. However, {{@@__@@desktop}} and {{@@__@@mobile}} can be e.g. spans, if you need them to be; and you can include as many of them as you like.\n\n[[collapsible show=\"+ show use case: simple responsive tables\" hide=\"- hide use case: simple responsive tables\"]]\nHere's a way you can use {{.croqstyle-responsive-div}} to make responsive tables.\n\nConsider a wide table (either with lots of columns, or a few columns with a lot of text). It's impossible to display this on smaller screens because the table is just wider than your average mobile device.\n\nIn this situation, you want to keep that table layout on desktop, but on mobile it would be better to present that data as one smaller table per row of the original table.\n\nThis is very similar to [[*user Woedenaz]]' [[[component:responsive-tables]]], with the following differences:\n\n* The markup is way, way, way less complicated and verbose - it's just normal tables and a few wrapping divs\n* You need to put the CSS on the page as well\n* It's just tables, not totally-custom from-scratch grid styling, so they look identical to normal tables and all pre-existing table CSS automatically applies\n* (Biggest downside) The table content is repeated for the desktop and mobile version, so if you change one, you need to remember to change the other\n\n[[div style=\"display: flex; gap: 1em\"]]\n[[div style=\"flex: 1\"]]\nThe following JavaScript snippet will convert a simple Wikidot table with the headers at the top, e.g. ->\n[[/div]]\n\n||~ A ||~ B ||~ C ||\n|| a1 || b1 || c1 ||\n|| a2 || b2 || c2 ||\n[[/div]]\n\n[[div style=\"display: flex; gap: 1em\"]]\n[[div style=\"flex: 1\"]]\nto several smaller tables, one per row of the original table, e.g. ->\n[[/div]]\n\n||~ A || a1 ||\n||~ B || b1 ||\n||~ C || c1 ||\n\n||~ A || a2 ||\n||~ B || b2 ||\n||~ C || c2 ||\n[[/div]]\n\nHere's the JavaScript snippet. To convert the desktop table to the mobile tables, copy this, replace {{PASTE TABLE HERE}} with the table source (leave the backticks in place), paste that into your JS console and hit go; the output will be copied to your clipboard, paste that into your page (replacing the original table).\n\n[[code type=\"javascript\"]]\n(() => {\n  const desktopTable = `PASTE TABLE HERE`\n  \n  const rowToCells = row => row.split(/\\s*\\|\\|~?\\s*/).slice(1, -1)\n\n  const [header, ...rows] = desktopTable\n    .replace(/ _\\n/g, \"\\\\n\")\n    .split(/[\\r\\n]+/)\n    .map(rowToCells)\n    .map(row => row.map(cell => cell.replace(/\\\\n/g, \" _\\n\")))\n  \n  const mobileTables = rows.map(row => {\n    return row.reduce((table, cell, cellIndex) => {\n      return `${table}\\n||~ ${header[cellIndex]} || ${cell} ||`\n    }, \"\")\n  })\n  \n  const output = [\n    '[[div class=\"croqstyle-responsive-div\"]]',\n    '[[div class=\"croqstyle-responsive-div__desktop\" style=\"display: none\"]]',\n    desktopTable,\n    '[[/div]]',\n    '[[div class=\"croqstyle-responsive-div__mobile\"]]',\n    ...mobileTables,\n    '[[/div]]',\n    '[[/div]]',\n  ].join(\"\\n\")\n  \n  console.log(output)\n  copy(output)\n})()\n[[/code]]\n\n[[/collapsible]]\n\n[[collapsible show=\"+ show use case: change one word\" hide=\"- hide use case: change one word\"]]\nTo switch out a single word/phrase on desktop or mobile:\n\n[[div class=\"code terminal\"]]\n##var(--c-keyword)|[[####var(--c-builtin)|div## ##var(--c-symbol)|class##=##var(--c-string)|@@\"croqstyle-responsive-div\"@@####var(--c-keyword)|]]##\nYou are currently browsing on ##var(--c-keyword)|[[####var(--c-builtin)|span## ##var(--c-symbol)|class##=##var(--c-string)|@@\"croqstyle-responsive-div__desktop\"@@## ##var(--c-symbol)|style##=##var(--c-string)|@@\"display: none\"@@####var(--c-keyword)|]]##desktop##var(--c-keyword)|[[/####var(--c-builtin)|span####var(--c-keyword)|]]####var(--c-keyword)|[[####var(--c-builtin)|span## ##var(--c-symbol)|class##=##var(--c-string)|@@\"croqstyle-responsive-div__mobile\"@@####var(--c-keyword)|]]##mobile##var(--c-keyword)|[[/####var(--c-builtin)|span####var(--c-keyword)|]]##, probably!\n##var(--c-keyword)|[[/####var(--c-builtin)|div####var(--c-keyword)|]]##\n[[/div]]\n\n[[div class=\"croqstyle-responsive-div\"]]\nYou are currently browsing on [[span class=\"croqstyle-responsive-div__desktop\" style=\"display: none\"]]desktop[[/span]][[span class=\"croqstyle-responsive-div__mobile\"]]mobile[[/span]], probably!\n[[/div]]\n\n\n[[/collapsible]]\n\n\n++ Reset tabview\n\nThis utility CSS-resets a tabview -- i.e., it removes all CSS styling from it. I always find it a pain to dig through the way Wikidot styles tabs and undo bits of it every time I want to style them. Using this, that work is already done.\n\nTo reset a tabview, wrap it in {{.croqstyle-reset-tabs}}:\n\n[[div class=\"code terminal\"]]\n##var(--c-keyword)|[[####var(--c-builtin)|div## ##var(--c-symbol)|class##=##var(--c-string)|@@\"croqstyle-reset-tabs\"@@####var(--c-keyword)|]]##\n##var(--c-keyword)|[[####var(--c-builtin)|tabview####var(--c-keyword)|]]##\n##var(--c-keyword)|[[####var(--c-builtin)|tab## ##var(--c-string)|First tab####var(--c-keyword)|]]##\nContent 1\n##var(--c-keyword)|[[/####var(--c-builtin)|tab####var(--c-keyword)|]]##\n##var(--c-keyword)|[[####var(--c-builtin)|tab## ##var(--c-string)|Second tab####var(--c-keyword)|]]##\nContent 2\n##var(--c-keyword)|[[/####var(--c-builtin)|tab####var(--c-keyword)|]]##\n##var(--c-keyword)|[[/####var(--c-builtin)|tabview####var(--c-keyword)|]]##\n##var(--c-keyword)|[[/####var(--c-builtin)|div####var(--c-keyword)|]]##\n[[/div]]\n\nThis doesn't undo the CSS that hides/shows each the tab contents, but you could reset it yourself if you wanted to replace it with your own animation:\n\n[[div class=\"code terminal\"]]\n[id^=wiki-tab] { display: initial !important }\n[[/div]]\n\n[[collapsible show=\"+ show reference for how to style each tabview part\"]]\nMinimal selectors for each tabview part:\n\n||~ Part ||~ Selector ||\n|| The entire tabview || .yui-navset ||\n|| List of tabs || .yui-navset .yui-nav ||\n|| Tab || .yui-navset .yui-nav li a ||\n|| Tab (selected) || .yui-navset .yui-nav .selected a ||\n|| Tab (hovered) || .yui-navset .yui-nav a:is(:hover, :focus) ||\n|| Tab (selected + hovered) || .yui-navset .yui-nav .selected :is(a, a:focus, a:hover) ||\n|| Text in each tab || .yui-navset .yui-nav li a em ||\n|| Text in the selected tab || .yui-navset .yui-nav .selected a em ||\n|| Tab content display area || .yui-navset .yui-content ||\n|| Content of the selected tab || [id^=wiki-tab][style*=block] ||\n|| Content of unselected tabs || [id^=wiki-tab][style*=none] ||\n\nTo style only tabviews that have been reset, prepend {{:where(.croqstyle-reset-tabs)}} to each selector, e.g. {{:where(.croqstyle-reset-tabs) .yui-navset}}\n\nTo style a specific tabview, or if providing a custom opt-in tabview for a theme, do the same thing but with a different class, e.g. {{:where(.special-fancy-tabs) .yui-navset}}\n[[/collapsible]]\n\n[[collapsible show=\"+ Show example reset tabs\"]]\n\nHere's some tabs:\n\n[[tabs]]\n[[tab First tab]]\nFirst tab's content\n[[/tab]]\n[[tab Second tab]]\nSecond tab's content\n[[/tab]]\n[[/tabs]]\n\nHere's those same tabs with the reset class applied:\n\n[[div class=\"croqstyle-reset-tabs\"]]\n[[tabs]]\n[[tab First tab]]\nFirst tab's content\n[[/tab]]\n[[tab Second tab]]\nSecond tab's content\n[[/tab]]\n[[/tabs]]\n[[/div]]\n\n[[/collapsible]]\n\n\n[[/div]]\n\n[[div style=\"display: none\"]]\n[[footnoteblock]]\n[[/div]]\n\n[[iftags +component]][!-[[/iftags]]- --]\n[!-- End metacomponent context detection --]",
  "tags": [
    "component"
  ],
  "author": "Croquembouche",
  "created_at": "2021-03-12T03:38:19+00:00",
  "updated_at": "2024-12-24T12:32:47+00:00",
  "rating": 31,
  "_site": "scp-wiki",
  "_fullname": "component:croqstyle"
}
{
  "title": "페이드인",
  "content": "[[module CSS]]\n@import url(https://scpko.wdfiles.com/local--code/component%3Afade-in/1);\n@import url(\"https://scpko.wdfiles.com/local--code/component%3Afade-in/{$speed}\");\n[[/module]]\n\n[[iftags +구성요소]]\n[[div style=\"border: 1px solid #ddd; padding: 1em;\"]]\n+ 설명\n\n페이지의 모든 것이 페이지가 로딩되고 순식간에 튀어나오는 게 아니라 천천히 페이드인되게 만들어주는 구성요소입니다.\n\n페이드는 시차를 둘 수 있고, 페이지의 각각이 한 번에 나타나는게 아니라, 하나하나씩 나타나게 할 수도 있습니다.\n\n+ 사용법\n\n어떤 위키든:\n\n[[div class=\"code\"]]\n@@[[include :scpko:component:fade-in speed=1]]@@\n[[/div]]\n\nspeed=1: 모든 게 동시에 나타납니다\nspeed=2: 모든 것이 이전 것이 나타나고 0.5초 뒤에 나타납니다\nspeed=3: 모든 것이 이전 것이 나타나고 0.25초 뒤에 나타납니다\n\n+ 주의사항\n\n페이드인 효과는 #page-content의 직속 자식인 요소에만 적용됩니다. 안에 들어가 있는 요소나 (예시: 인용구 구문이나 div 구문 안에 있을 때) 페이지의 다른 부분에 있을 때 (예시: 사이드바)는 적용되지 않습니다.\n\n//(여러분은 이런 점을 여러분의 페이지에 충돌할 여지가 있는 여타 애니메이션 (예시: [[[component:acs-animation|ACS 애니메이션]]]) 등이 있을 때 문제의 애니메이션 요소를 div로 감싸는 것으로 해결하는데 이용하시면 됩니다.)//\n\n또한 이 구성요소는 페이지의 첫 35개의 요소에만 적용되면, 그 이후의 모든 건 동시에 나타납니다. 그 정도면 독자들이 페이지를 열었을 때 깔끔한 로딩을 경험하기에 충분하지만 아래까지 스크롤을 내리려고 할 때 엄청나게 오래 기다릴 필요가 없습니다.\n[[/div]]\n-----\n\n+ 소스코드\n\n\n[[code type=\"css\"]]\n#page-title, #breadcrumbs, #page-content > * {\n  animation-name: fadeIn;\n  animation-duration: 1s;\n  animation-iteration-count: 1;\n  animation-timing-function: ease-out;\n  animation-fill-mode: backwards;\n}\n\n#page-title { animation-delay: 0s; }\n\n@keyframes fadeIn {\n  from {\n    opacity: 0;\n    transform: translate(0,30px);\n  }\n  to {\n    opacity: 1;\n    transform: translate(0,0);\n  }\n}\n\n:root {\n  --fade-in-delay: 0s;\n}\n\n#page-content > :nth-child(1) { animation-delay: calc(1 * var(--fade-in-delay)); }\n#page-content > :nth-child(2) { animation-delay: calc(2 * var(--fade-in-delay)); }\n#page-content > :nth-child(3) { animation-delay: calc(3 * var(--fade-in-delay)); }\n#page-content > :nth-child(4) { animation-delay: calc(4 * var(--fade-in-delay)); }\n#page-content > :nth-child(5) { animation-delay: calc(5 * var(--fade-in-delay)); }\n#page-content > :nth-child(6) { animation-delay: calc(6 * var(--fade-in-delay)); }\n#page-content > :nth-child(7) { animation-delay: calc(7 * var(--fade-in-delay)); }\n#page-content > :nth-child(8) { animation-delay: calc(8 * var(--fade-in-delay)); }\n#page-content > :nth-child(9) { animation-delay: calc(9 * var(--fade-in-delay)); }\n#page-content > :nth-child(10) { animation-delay: calc(10 * var(--fade-in-delay)); }\n#page-content > :nth-child(11) { animation-delay: calc(11 * var(--fade-in-delay)); }\n#page-content > :nth-child(12) { animation-delay: calc(12 * var(--fade-in-delay)); }\n#page-content > :nth-child(13) { animation-delay: calc(13 * var(--fade-in-delay)); }\n#page-content > :nth-child(14) { animation-delay: calc(14 * var(--fade-in-delay)); }\n#page-content > :nth-child(15) { animation-delay: calc(15 * var(--fade-in-delay)); }\n#page-content > :nth-child(16) { animation-delay: calc(16 * var(--fade-in-delay)); }\n#page-content > :nth-child(17) { animation-delay: calc(17 * var(--fade-in-delay)); }\n#page-content > :nth-child(18) { animation-delay: calc(18 * var(--fade-in-delay)); }\n#page-content > :nth-child(19) { animation-delay: calc(19 * var(--fade-in-delay)); }\n#page-content > :nth-child(20) { animation-delay: calc(20 * var(--fade-in-delay)); }\n#page-content > :nth-child(21) { animation-delay: calc(21 * var(--fade-in-delay)); }\n#page-content > :nth-child(22) { animation-delay: calc(22 * var(--fade-in-delay)); }\n#page-content > :nth-child(23) { animation-delay: calc(23 * var(--fade-in-delay)); }\n#page-content > :nth-child(24) { animation-delay: calc(24 * var(--fade-in-delay)); }\n#page-content > :nth-child(25) { animation-delay: calc(25 * var(--fade-in-delay)); }\n#page-content > :nth-child(26) { animation-delay: calc(26 * var(--fade-in-delay)); }\n#page-content > :nth-child(27) { animation-delay: calc(27 * var(--fade-in-delay)); }\n#page-content > :nth-child(28) { animation-delay: calc(28 * var(--fade-in-delay)); }\n#page-content > :nth-child(29) { animation-delay: calc(29 * var(--fade-in-delay)); }\n#page-content > :nth-child(30) { animation-delay: calc(30 * var(--fade-in-delay)); }\n#page-content > :nth-child(31) { animation-delay: calc(31 * var(--fade-in-delay)); }\n#page-content > :nth-child(32) { animation-delay: calc(32 * var(--fade-in-delay)); }\n#page-content > :nth-child(33) { animation-delay: calc(33 * var(--fade-in-delay)); }\n#page-content > :nth-child(34) { animation-delay: calc(34 * var(--fade-in-delay)); }\n#page-content > :nth-child(35) { animation-delay: calc(35 * var(--fade-in-delay)); }\n#page-content > :nth-child(n+35) { animation-delay: calc(36 * var(--fade-in-delay)); }\n[[/code]]\n\n[[code type=\"css\"]]\n:root {\n   --fade-in-delay: 0.5s;\n}\n[[/code]]\n\n[[code type=\"css\"]]\n:root {\n  --fade-in-delay: 0.25s;\n}\n[[/code]]\n\n[[/iftags]]",
  "tags": [
    "en",
    "구성요소"
  ],
  "author": "Aiken Drum",
  "created_at": "2021-04-10T10:13:20+00:00",
  "updated_at": "2021-04-25T13:28:32+00:00",
  "rating": 0,
  "_site": "scpko",
  "_fullname": "component:fade-in"
}
{
  "title": "报纸、书页和便利贴",
  "content": "[[iftags +样版]]\n\n[[include :scp-wiki:component:croqstyle -=- ]]\n\n[[module CSS]]\ntd { vertical-align: top; }\ntd strong { white-space: nowrap; }\n.options table.wiki-content-table td { border: none; padding: 0.7em 1em; }\n.previews { word-break: none; }\n.previews img { max-width: 10rem; max-height: 10rem; }\n[[/module]]\n\n[[div style=\"border: 1px solid #ddd; padding: 1em;\"]]\n+ 这是什么\n\n一个将你的文本显示在分页上的组件，例如书页。\n\n由 [[*user Croquembouche]] 制作。\n\n其他模仿分页的组件：\n\n* [[[component:hf-book-left|赫曼·富勒书页 左]]]\n* [[[component:hf-book-right|赫曼·富勒书页 右]]]\n* [[[component:hf-book-right-start|赫曼·富勒书页 右（章节开始）]]]\n* [[[component:hf-start|赫曼·富勒 GOI：章节开始]]]\n* [[[component:hf-left|赫曼·富勒 GOI：左页 v2]]]\n* [[[component:hf-right|赫曼·富勒 GOI：右页 v2]]]\n\n+ 使用方法\n\n在任何维基网站上：\n\n[[div class=\"code terminal\"]]\n**##var(--c-keyword)|[[include##** ##var(--c-symbol)|:scp-wiki-cn:component:pages##\n**##var(--c-keyword)||##** **##var(--c-builtin)|medium##****##var(--c-keyword)|=##**##var(--c-symbol)|vintage-book##\n**##var(--c-keyword)||##** **##var(--c-builtin)|contents##****##var(--c-keyword)|=##**\n##var(--c-string)|<h1>你好，欢迎打开我的书。</h1>\n希望你能<em>真正享受</em>阅读这本书，这样书写它的一切痛苦都是值得的。##\n**##var(--c-keyword)|]]##**\n[[/div]]\n\n此组件有两个参数。\n\n[[div class=\"options\"]]\n|| **medium** || 你的文本将以什么样的媒介呈现？这会决定每一页的背景图片、字体等等。我开放允许添加更多选项——如果你有想法，请与我（[[user Croquembouche]]）联系。 _\n这些选项在此页底端有详细记录。 ||\n|| **contents** || 你的页面内容。可以添加非常简单的格式和图像。 ||\n|| **style** || 注入文件的 CSS 样式。 ||\n[[/div]]\n\n内容（contents）参数可以为任意行数。\n\n内容不能添加以下字符：\n\n* {{|}}（分隔符）\n* {{@@`@@}}（反引号），但可以添加在反斜线之后（{{\\`}}）\n* {{]]}}（两个右括号），如果添加在一行末尾，必须在之后添加空格\n\n[[/div]]\n\n _\n\n[[div style=\"border: 1px solid #ddd; padding: 1em;\"]]\n\n+ 文本格式\n\n内容（contents）参数不会由 Wikidot 呈现。它会输入一个我自己编写的解析器，并输出 HTML。\n\n你所熟知的所有可爱的 Wikidot 语法全都无效，相反，你需要写内联 HTML。\n\n举例说明：\n\n* 对于粗体字，需要写 {{<b>文本</b>}}，而不是 {{@@**文本**@@}}。\n* 对于全角破折号，需要写原本的全角破折号（{{—}}），而不是 {{@@--@@}}。\n* 对于水平分割线，需要写 {{<hr>}}，而不是 {{@@-----@@}}。\n\n不像 HTML，你//不//需要在每一行写 {{<p>...</p>}}。\n\n-----\n\n+ 图像\n\n使用标准图像 HTML 添加图像：\n\n[[div class=\"code terminal\"]]\n##var(--c-string)|<img src=\"@@http://scp-wiki-cn.wdfiles.com/local--files/你的页面/你的图像.png@@\">##\n[[/div]]\n\n你可以通过添加 {{position=\"top\"}} 或 {{position=\"bottom\"}} 来将图像移动至页面顶端或底端。无论是什么样的页面都可以用此方法移动图像。图像必须单独处于一行，位于文本之间的图像则无效：\n\n[[div class=\"code terminal\"]]\n##var(--c-string)|<img position=\"top\" src=\"URL\">##\n[[/div]]\n\n在图像的 {{style}} 属性中直接添加如下 CSS 以水平居中：\n\n[[div class=\"code terminal\"]]\n##var(--c-string)|<img style=\"####var(--c-builtin)|display##: ##var(--c-value)|block##; ##var(--c-builtin)|margin-left##: ##var(--c-value)|auto##; ##var(--c-builtin)|margin-right##: ##var(--c-value)|auto##;##var(--c-string)|\" src=\"URL\">##\n[[/div]]\n\n如果一张图像太高，不能放置于一页中，那么它的底部会被截去。\n\n-----\n\n+ 分页\n\n有时你可能会说：“好了，就到这里为止。在新的一页开始下一段。这一页的剩余部分可以留空。”\n\n为此，你需要在单独一行上添加分页符：\n\n[[div class=\"code terminal\"]]\n##var(--c-string)|<br class=\"page-break\">##\n[[/div]]\n\n分页符之后的内容会在下一页上。如果分页符//之前//有一个带有 {{position=\"bottom\"}} 的图像，它会一如预期的那样仍然显示在页面底端。\n\n-----\n\n+ 进阶功能\n\n你可以通过样式（style）参数添加 CSS，也可以在内容（contents）参数中嵌入 Javascript。\n\n++ 使用 CSS\n\n任何添加在样式参数中的 CSS 会被注入到页面中。使用它来例如调整内容、添加可以用在内容中的类（class）、以及改变字体。\n\n举例说明：\n\n[[div class=\"code terminal\"]]\n**##var(--c-keyword)|[[include##** ##var(--c-symbol)|:scp-wiki-cn:component:pages##\n**##var(--c-keyword)||##** **##var(--c-builtin)|medium##****##var(--c-keyword)|=##**##var(--c-symbol)|vintage-book##\n**##var(--c-keyword)||##** **##var(--c-builtin)|style##****##var(--c-keyword)|=##**\n##var(--c-operator)|@import## ##var(--c-builtin)|url##(##var(--c-string)|'@@https://fonts.googleapis.com/css2?family=Architects+Daughter@@'##);\n\n##var(--c-keyword)|.####var(--c-symbol)|page## {\n@@  @@##var(--c-builtin)|font-family##: ##var(--c-string)|'Architects Daughter'##, ##var(--c-value)|cursive##;\n@@  @@##var(--c-builtin)|margin##: ##var(--c-value)|2rem##;\n}\n\n##var(--c-keyword)|.####var(--c-symbol)|page## ##var(--c-keyword)|.####var(--c-symbol)|red## {\n@@  @@##var(--c-builtin)|color##: ##var(--c-value)|red##;\n}\n**##var(--c-keyword)||##** **##var(--c-builtin)|contents##****##var(--c-keyword)|=##**\n##var(--c-string)|文本将会显示为<span class=\"red\">手写字体</span>。##\n**##var(--c-keyword)|]]##**\n[[/div]]\n\n你不能在文章的其他地方使用 CSS 模块来设置这个组件的样式——这是唯一的方法。\n\n**提示！**你可以以任意顺序添加参数，但是最好将样式（style）参数放在内容（contents）参数//之上//。你的内容参数可能会非常、非常长——你会发现把所有设置和 CSS 放在顶端更加方便一些。\n\n++ 使用 Javascript\n\n内容（contents）参数会被解析为 Javascript [https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/template_strings 模板字符串]，这也是为什么它不能包含反引号。\n\n\n因此，你可以在内容参数中使用内嵌表达式（{{${表达式}}}）添加任意 Javascript，该表达式将会执行并替换回字符串中，例如：\n\n[[div class=\"code terminal\"]]\n**##var(--c-keyword)|[[include##** ##var(--c-symbol)|:scp-wiki-cn:component:pages##\n**##var(--c-keyword)||##** **##var(--c-builtin)|medium##****##var(--c-keyword)|=##**##var(--c-symbol)|vintage-book##\n**##var(--c-keyword)||##** **##var(--c-builtin)|contents##****##var(--c-keyword)|=##**\n##var(--c-string)|今天是## ##var(--c-operator)|${####var(--c-keyword)|new## ##var(--c-builtin)|Date##().##var(--c-builtin)|toLocaleString##(##var(--c-string)|\"default\"##, { ##var(--c-symbol)|weekday##: ##var(--c-string)|\"long\"## })##var(--c-operator)|}####var(--c-string)|。##\n**##var(--c-keyword)|]]##**\n[[/div]]\n\n这本书会告诉读者当天的日期。\n\n你应该这样做吗？或许不是。但你//可以//。\n\n请注意，虽然你可以添加任意 Javascript，但“或”运算符（{{||}}）不可用，因为它们是由禁止使用的分隔符组成的。但是，你可以使用“和”与“非”[https://stackoverflow.com/questions/8374895/how-to-make-logical-or-with-and-and-not 自己创建“或”]：非((非 x) 和 (非 y)) 等价于 (x 或 y)。在 Javascript 里就是 {{!((!x) && (!y))}}。\n\n[[/div]]\n\n  _\n\n[[div style=\"border: 1px solid #ddd; padding: 1em;\"]]\n\n+ 媒介选项\n\n以下是可用的“媒介”（{{medium}}）参数选项。\n\n我正在积极征求新的媒介选项需求。我的意思是，此组件的标题是//“报纸、书页和便利贴”//，但当下它只能制作一本古旧的书。这个组件的设计目的是尽可能地多功能化，但是现在它只能做一件事情。\n\n如果你对分页格式有任何需求，请联系我（[[user Croquembouche]]）。\n\n每种媒介都有固定的纵横比，会根据浏览器的宽度决定高度。\n\n[[div class=\"previews\"]]\n||~ 媒介 ||~ 背景 ||~ 字体 ||~ 纵横比 ||~ 图像来源 ||\n|| {{朴素}}//（默认）// || [[image http://scp-wiki.wdfiles.com/local--files/component:pages/plain-preview.png]] || //浏览器默认// || 4:7 || ||\n|| {{古书}} || [[image http://scp-wiki.wdfiles.com/local--files/component:pages/book.300px.png]] || Libre Baskerville || 10:9 || [https://commons.wikimedia.org/wiki/File:Powiedz_ty_muzyko_moia.jpg 公共领域] ||\n[[/div]]\n\n[[/div]]\n\n[[/iftags]]\n\n[[html]]\n<base target=\"_top\"></base>\n\n<link href=\"https://fonts.googleapis.com/css2?family=Libre+Baskerville:ital,wght@0,400;0,700;1,400&display=swap\" rel=\"stylesheet\">\n\n<link href=\"http://scp-wiki.wdfiles.com/local--code/component%3Apages/1\" rel=\"stylesheet\">\n\n<style>\n  /* The user's CSS should override any existing CSS. */\n  {$style}\n</style>\n\n<body>\n  <div class=\"pages-container {$medium}\"></div>\n</body>\n\n<script src=\"https://cdn.jsdelivr.net/npm/jquery@3.5.1/dist/jquery.slim.min.js\"></script>\n<script>\n  // Recieve book contents from include parameter\n  let contents = `{$contents}`\n</script>\n<script src=\"http://scp-wiki.wdfiles.com/local--code/component%3Apages/2\"></script>\n[[/html]]",
  "tags": [
    "样版"
  ],
  "author": "Sekai_s",
  "created_at": "2020-10-25T03:35:20+00:00",
  "updated_at": "2021-03-20T18:20:37+00:00",
  "rating": 5,
  "_site": "scp-wiki-cn",
  "_fullname": "component:pages"
}